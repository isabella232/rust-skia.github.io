var searchIndex = JSON.parse('{\
"skia_safe":{"doc":"","i":[[0,"codec","skia_safe","",null,null],[4,"Result","skia_safe::codec","",null,null],[13,"Success","","",0,null],[13,"IncompleteInput","","",0,null],[13,"ErrorInInput","","",0,null],[13,"InvalidConversion","","",0,null],[13,"InvalidScale","","",0,null],[13,"InvalidParameters","","",0,null],[13,"InvalidInput","","",0,null],[13,"CouldNotRewind","","",0,null],[13,"InternalError","","",0,null],[13,"Unimplemented","","",0,null],[5,"result_to_string","","",null,[[["result",4]],["str",15]]],[4,"SelectionPolicy","","",null,null],[13,"PreferStillImage","","",1,null],[13,"PreferAnimation","","",1,null],[4,"ZeroInitialized","","",null,null],[13,"Yes","","",2,null],[13,"No","","",2,null],[3,"Options","","",null,null],[12,"zero_initialized","","",3,null],[12,"subset","","",3,null],[12,"frame_index","","",3,null],[12,"prior_frame","","",3,null],[4,"ScanlineOrder","","",null,null],[13,"TopDown","","",4,null],[13,"BottomUp","","",4,null],[6,"Codec","","",null,null],[4,"EncodedOrigin","","These values match the orientation â€¦",null,null],[13,"TopLeft","","Default",5,null],[13,"TopRight","","Reflected across y-axis",5,null],[13,"BottomRight","","Rotated 180",5,null],[13,"BottomLeft","","Reflected across x-axis",5,null],[13,"LeftTop","","Reflected across x-axis, Rotated 90 CCW",5,null],[13,"RightTop","","Rotated 90 CW",5,null],[13,"RightBottom","","Reflected across x-axis, Rotated 90 CW",5,null],[13,"LeftBottom","","Rotated 90 CCW",5,null],[0,"gpu","skia_safe","",null,null],[0,"context_options","skia_safe::gpu","",null,null],[4,"Enable","skia_safe::gpu::context_options","",null,null],[13,"No","","",6,null],[13,"Yes","","",6,null],[13,"Default","","",6,null],[4,"ShaderCacheStrategy","","",null,null],[13,"SkSL","","",7,null],[13,"BackendSource","","",7,null],[13,"BackendBinary","","",7,null],[3,"ContextOptions","","",null,null],[12,"suppress_prints","","",8,null],[12,"skip_gl_error_checks","","",8,null],[12,"max_texture_size_override","","",8,null],[12,"buffer_map_threshold","","",8,null],[12,"do_manual_mipmapping","","",8,null],[12,"disable_coverage_counting_paths","","",8,null],[12,"disable_distance_field_paths","","",8,null],[12,"allow_path_mask_caching","","",8,null],[12,"disable_gpu_yuv_conversion","","",8,null],[12,"glyph_cache_texture_maximum_bytes","","",8,null],[12,"min_distance_field_font_size","","",8,null],[12,"glyphs_as_paths_font_size","","",8,null],[12,"allow_multiple_glyph_cache_textures","","",8,null],[12,"avoid_stencil_buffers","","",8,null],[12,"sharpen_mipmapped_textures","","",8,null],[12,"use_draw_instead_of_clear","","",8,null],[12,"reduce_ops_task_splitting","","",8,null],[12,"prefer_external_images_over_es3","","",8,null],[12,"disable_driver_correctness_workarounds","","",8,null],[12,"runtime_program_cache_size","","",8,null],[12,"shader_cache_strategy","","",8,null],[12,"internal_multisample_count","","",8,null],[12,"max_cached_vulkan_secondary_command_buffers","","",8,null],[12,"suppress_mipmap_support","","",8,null],[12,"driver_bug_workarounds","","",8,null],[11,"new","","",8,[[]]],[0,"d3d","skia_safe::gpu","",null,null],[3,"BackendContext","skia_safe::gpu::d3d","",null,null],[12,"adapter","","",9,null],[12,"device","","",9,null],[12,"queue","","",9,null],[12,"memory_allocator","","",9,null],[12,"protected_context","","",9,null],[3,"cp","","",null,null],[5,"safe_com_add_ref","","",null,[[]]],[5,"safe_com_release","","",null,[[]]],[6,"Alloc","","",null,null],[6,"MemoryAllocator","","",null,null],[3,"TextureResourceInfo","","",null,null],[12,"resource","","",10,null],[12,"alloc","","",10,null],[12,"resource_state","","",10,null],[12,"format","","",10,null],[12,"sample_count","","",10,null],[12,"level_count","","",10,null],[12,"sample_quality_pattern","","",10,null],[12,"protected","","",10,null],[3,"FenceInfo","","",null,null],[12,"fence","","",11,null],[12,"value","","",11,null],[6,"ResourceStateEnum","","",null,null],[3,"ID3D12CommandQueue","","",null,null],[12,"lpVtbl","","",12,null],[3,"ID3D12Device","","",null,null],[12,"lpVtbl","","",13,null],[3,"ID3D12Resource","","",null,null],[12,"lpVtbl","","",14,null],[6,"D3D12_RESOURCE_STATES","","",null,null],[3,"IDXGIAdapter1","","",null,null],[12,"lpVtbl","","",15,null],[6,"DXGI_FORMAT","","",null,null],[0,"gl","skia_safe::gpu","",null,null],[6,"Extensions","skia_safe::gpu::gl","",null,null],[6,"Interface","","",null,null],[4,"Format","","",null,null],[13,"Unknown","","",16,null],[13,"RGBA8","","",16,null],[13,"R8","","",16,null],[13,"ALPHA8","","",16,null],[13,"LUMINANCE8","","",16,null],[13,"LUMINANCE8_ALPHA8","","",16,null],[13,"BGRA8","","",16,null],[13,"RGB565","","",16,null],[13,"RGBA16F","","",16,null],[13,"R16F","","",16,null],[13,"RGB8","","",16,null],[13,"RG8","","",16,null],[13,"RGB10_A2","","",16,null],[13,"RGBA4","","",16,null],[13,"SRGB8_ALPHA8","","",16,null],[13,"COMPRESSED_ETC1_RGB8","","",16,null],[13,"COMPRESSED_RGB8_ETC2","","",16,null],[13,"COMPRESSED_RGB8_BC1","","",16,null],[13,"COMPRESSED_RGBA8_BC1","","",16,null],[13,"R16","","",16,null],[13,"RG16","","",16,null],[13,"RGBA16","","",16,null],[13,"RG16F","","",16,null],[13,"LUMINANCE16F","","",16,null],[13,"STENCIL_INDEX8","","",16,null],[13,"STENCIL_INDEX16","","",16,null],[13,"DEPTH24_STENCIL8","","",16,null],[4,"Standard","","",null,null],[13,"None","","",17,null],[13,"GL","","",17,null],[13,"GLES","","",17,null],[13,"WebGL","","",17,null],[6,"Enum","","",null,null],[6,"UInt","","",null,null],[3,"TextureInfo","","",null,null],[12,"target","","",18,null],[12,"id","","",18,null],[12,"format","","",18,null],[3,"FramebufferInfo","","",null,null],[12,"fboid","","",19,null],[12,"format","","",19,null],[3,"BackendState","","",null,null],[0,"vk","skia_safe::gpu","",null,null],[3,"ExtensionFlags","skia_safe::gpu::vk","",null,null],[3,"FeatureFlags","","",null,null],[3,"BackendContext","","",null,null],[6,"GraphicsBackendMemory","","",null,null],[3,"Alloc","","",null,null],[12,"memory","","",20,null],[12,"offset","","",20,null],[12,"size","","",20,null],[12,"flags","","",20,null],[12,"backend_memory","","",20,null],[3,"AllocFlag","","",null,null],[3,"YcbcrConversionInfo","","",null,null],[12,"format","","",21,null],[12,"external_format","","",21,null],[12,"ycbcr_model","","",21,null],[12,"ycbcr_range","","",21,null],[12,"x_chroma_offset","","",21,null],[12,"y_chroma_offset","","",21,null],[12,"chroma_filter","","",21,null],[12,"force_explicit_reconstruction","","",21,null],[12,"format_features","","",21,null],[3,"ImageInfo","","",null,null],[12,"image","","",22,null],[12,"alloc","","",22,null],[12,"tiling","","",22,null],[12,"layout","","",22,null],[12,"format","","",22,null],[12,"image_usage_flags","","",22,null],[12,"sample_count","","",22,null],[12,"level_count","","",22,null],[12,"current_queue_family","","",22,null],[12,"protected","","",22,null],[12,"ycbcr_conversion_info","","",22,null],[12,"sharing_mode","","",22,null],[4,"GetProcOf","","",null,null],[13,"Instance","","",23,null],[13,"Device","","",23,null],[6,"GetProcResult","","",null,null],[8,"GetProc","","",null,null],[3,"DrawableInfo","","",null,null],[12,"secondary_command_buffer","","",24,null],[12,"color_attachment_index","","",24,null],[12,"compatible_render_pass","","",24,null],[12,"format","","",24,null],[12,"draw_bounds","","",24,null],[12,"image","","",24,null],[6,"Bool32","","",null,null],[6,"Buffer","","",null,null],[4,"ChromaLocation","","",null,null],[13,"COSITED_EVEN","","",25,null],[13,"MIDPOINT","","",25,null],[13,"RANGE_SIZE","","",25,null],[13,"MAX_ENUM","","",25,null],[6,"CommandBuffer","","",null,null],[6,"Device","","",null,null],[6,"DeviceMemory","","",null,null],[6,"DeviceSize","","",null,null],[3,"Extent2D","","",null,null],[12,"width","","",26,null],[12,"height","","",26,null],[4,"Filter","","",null,null],[13,"NEAREST","","",27,null],[13,"LINEAR","","",27,null],[13,"CUBIC_IMG","","",27,null],[13,"RANGE_SIZE","","",27,null],[13,"MAX_ENUM","","",27,null],[6,"Flags","","",null,null],[4,"Format","","",null,null],[13,"UNDEFINED","","",28,null],[13,"R4G4_UNORM_PACK8","","",28,null],[13,"R4G4B4A4_UNORM_PACK16","","",28,null],[13,"B4G4R4A4_UNORM_PACK16","","",28,null],[13,"R5G6B5_UNORM_PACK16","","",28,null],[13,"B5G6R5_UNORM_PACK16","","",28,null],[13,"R5G5B5A1_UNORM_PACK16","","",28,null],[13,"B5G5R5A1_UNORM_PACK16","","",28,null],[13,"A1R5G5B5_UNORM_PACK16","","",28,null],[13,"R8_UNORM","","",28,null],[13,"R8_SNORM","","",28,null],[13,"R8_USCALED","","",28,null],[13,"R8_SSCALED","","",28,null],[13,"R8_UINT","","",28,null],[13,"R8_SINT","","",28,null],[13,"R8_SRGB","","",28,null],[13,"R8G8_UNORM","","",28,null],[13,"R8G8_SNORM","","",28,null],[13,"R8G8_USCALED","","",28,null],[13,"R8G8_SSCALED","","",28,null],[13,"R8G8_UINT","","",28,null],[13,"R8G8_SINT","","",28,null],[13,"R8G8_SRGB","","",28,null],[13,"R8G8B8_UNORM","","",28,null],[13,"R8G8B8_SNORM","","",28,null],[13,"R8G8B8_USCALED","","",28,null],[13,"R8G8B8_SSCALED","","",28,null],[13,"R8G8B8_UINT","","",28,null],[13,"R8G8B8_SINT","","",28,null],[13,"R8G8B8_SRGB","","",28,null],[13,"B8G8R8_UNORM","","",28,null],[13,"B8G8R8_SNORM","","",28,null],[13,"B8G8R8_USCALED","","",28,null],[13,"B8G8R8_SSCALED","","",28,null],[13,"B8G8R8_UINT","","",28,null],[13,"B8G8R8_SINT","","",28,null],[13,"B8G8R8_SRGB","","",28,null],[13,"R8G8B8A8_UNORM","","",28,null],[13,"R8G8B8A8_SNORM","","",28,null],[13,"R8G8B8A8_USCALED","","",28,null],[13,"R8G8B8A8_SSCALED","","",28,null],[13,"R8G8B8A8_UINT","","",28,null],[13,"R8G8B8A8_SINT","","",28,null],[13,"R8G8B8A8_SRGB","","",28,null],[13,"B8G8R8A8_UNORM","","",28,null],[13,"B8G8R8A8_SNORM","","",28,null],[13,"B8G8R8A8_USCALED","","",28,null],[13,"B8G8R8A8_SSCALED","","",28,null],[13,"B8G8R8A8_UINT","","",28,null],[13,"B8G8R8A8_SINT","","",28,null],[13,"B8G8R8A8_SRGB","","",28,null],[13,"A8B8G8R8_UNORM_PACK32","","",28,null],[13,"A8B8G8R8_SNORM_PACK32","","",28,null],[13,"A8B8G8R8_USCALED_PACK32","","",28,null],[13,"A8B8G8R8_SSCALED_PACK32","","",28,null],[13,"A8B8G8R8_UINT_PACK32","","",28,null],[13,"A8B8G8R8_SINT_PACK32","","",28,null],[13,"A8B8G8R8_SRGB_PACK32","","",28,null],[13,"A2R10G10B10_UNORM_PACK32","","",28,null],[13,"A2R10G10B10_SNORM_PACK32","","",28,null],[13,"A2R10G10B10_USCALED_PACK32","","",28,null],[13,"A2R10G10B10_SSCALED_PACK32","","",28,null],[13,"A2R10G10B10_UINT_PACK32","","",28,null],[13,"A2R10G10B10_SINT_PACK32","","",28,null],[13,"A2B10G10R10_UNORM_PACK32","","",28,null],[13,"A2B10G10R10_SNORM_PACK32","","",28,null],[13,"A2B10G10R10_USCALED_PACK32","","",28,null],[13,"A2B10G10R10_SSCALED_PACK32","","",28,null],[13,"A2B10G10R10_UINT_PACK32","","",28,null],[13,"A2B10G10R10_SINT_PACK32","","",28,null],[13,"R16_UNORM","","",28,null],[13,"R16_SNORM","","",28,null],[13,"R16_USCALED","","",28,null],[13,"R16_SSCALED","","",28,null],[13,"R16_UINT","","",28,null],[13,"R16_SINT","","",28,null],[13,"R16_SFLOAT","","",28,null],[13,"R16G16_UNORM","","",28,null],[13,"R16G16_SNORM","","",28,null],[13,"R16G16_USCALED","","",28,null],[13,"R16G16_SSCALED","","",28,null],[13,"R16G16_UINT","","",28,null],[13,"R16G16_SINT","","",28,null],[13,"R16G16_SFLOAT","","",28,null],[13,"R16G16B16_UNORM","","",28,null],[13,"R16G16B16_SNORM","","",28,null],[13,"R16G16B16_USCALED","","",28,null],[13,"R16G16B16_SSCALED","","",28,null],[13,"R16G16B16_UINT","","",28,null],[13,"R16G16B16_SINT","","",28,null],[13,"R16G16B16_SFLOAT","","",28,null],[13,"R16G16B16A16_UNORM","","",28,null],[13,"R16G16B16A16_SNORM","","",28,null],[13,"R16G16B16A16_USCALED","","",28,null],[13,"R16G16B16A16_SSCALED","","",28,null],[13,"R16G16B16A16_UINT","","",28,null],[13,"R16G16B16A16_SINT","","",28,null],[13,"R16G16B16A16_SFLOAT","","",28,null],[13,"R32_UINT","","",28,null],[13,"R32_SINT","","",28,null],[13,"R32_SFLOAT","","",28,null],[13,"R32G32_UINT","","",28,null],[13,"R32G32_SINT","","",28,null],[13,"R32G32_SFLOAT","","",28,null],[13,"R32G32B32_UINT","","",28,null],[13,"R32G32B32_SINT","","",28,null],[13,"R32G32B32_SFLOAT","","",28,null],[13,"R32G32B32A32_UINT","","",28,null],[13,"R32G32B32A32_SINT","","",28,null],[13,"R32G32B32A32_SFLOAT","","",28,null],[13,"R64_UINT","","",28,null],[13,"R64_SINT","","",28,null],[13,"R64_SFLOAT","","",28,null],[13,"R64G64_UINT","","",28,null],[13,"R64G64_SINT","","",28,null],[13,"R64G64_SFLOAT","","",28,null],[13,"R64G64B64_UINT","","",28,null],[13,"R64G64B64_SINT","","",28,null],[13,"R64G64B64_SFLOAT","","",28,null],[13,"R64G64B64A64_UINT","","",28,null],[13,"R64G64B64A64_SINT","","",28,null],[13,"R64G64B64A64_SFLOAT","","",28,null],[13,"B10G11R11_UFLOAT_PACK32","","",28,null],[13,"E5B9G9R9_UFLOAT_PACK32","","",28,null],[13,"D16_UNORM","","",28,null],[13,"X8_D24_UNORM_PACK32","","",28,null],[13,"D32_SFLOAT","","",28,null],[13,"S8_UINT","","",28,null],[13,"D16_UNORM_S8_UINT","","",28,null],[13,"D24_UNORM_S8_UINT","","",28,null],[13,"D32_SFLOAT_S8_UINT","","",28,null],[13,"BC1_RGB_UNORM_BLOCK","","",28,null],[13,"BC1_RGB_SRGB_BLOCK","","",28,null],[13,"BC1_RGBA_UNORM_BLOCK","","",28,null],[13,"BC1_RGBA_SRGB_BLOCK","","",28,null],[13,"BC2_UNORM_BLOCK","","",28,null],[13,"BC2_SRGB_BLOCK","","",28,null],[13,"BC3_UNORM_BLOCK","","",28,null],[13,"BC3_SRGB_BLOCK","","",28,null],[13,"BC4_UNORM_BLOCK","","",28,null],[13,"BC4_SNORM_BLOCK","","",28,null],[13,"BC5_UNORM_BLOCK","","",28,null],[13,"BC5_SNORM_BLOCK","","",28,null],[13,"BC6H_UFLOAT_BLOCK","","",28,null],[13,"BC6H_SFLOAT_BLOCK","","",28,null],[13,"BC7_UNORM_BLOCK","","",28,null],[13,"BC7_SRGB_BLOCK","","",28,null],[13,"ETC2_R8G8B8_UNORM_BLOCK","","",28,null],[13,"ETC2_R8G8B8_SRGB_BLOCK","","",28,null],[13,"ETC2_R8G8B8A1_UNORM_BLOCK","","",28,null],[13,"ETC2_R8G8B8A1_SRGB_BLOCK","","",28,null],[13,"ETC2_R8G8B8A8_UNORM_BLOCK","","",28,null],[13,"ETC2_R8G8B8A8_SRGB_BLOCK","","",28,null],[13,"EAC_R11_UNORM_BLOCK","","",28,null],[13,"EAC_R11_SNORM_BLOCK","","",28,null],[13,"EAC_R11G11_UNORM_BLOCK","","",28,null],[13,"EAC_R11G11_SNORM_BLOCK","","",28,null],[13,"ASTC_4x4_UNORM_BLOCK","","",28,null],[13,"ASTC_4x4_SRGB_BLOCK","","",28,null],[13,"ASTC_5x4_UNORM_BLOCK","","",28,null],[13,"ASTC_5x4_SRGB_BLOCK","","",28,null],[13,"ASTC_5x5_UNORM_BLOCK","","",28,null],[13,"ASTC_5x5_SRGB_BLOCK","","",28,null],[13,"ASTC_6x5_UNORM_BLOCK","","",28,null],[13,"ASTC_6x5_SRGB_BLOCK","","",28,null],[13,"ASTC_6x6_UNORM_BLOCK","","",28,null],[13,"ASTC_6x6_SRGB_BLOCK","","",28,null],[13,"ASTC_8x5_UNORM_BLOCK","","",28,null],[13,"ASTC_8x5_SRGB_BLOCK","","",28,null],[13,"ASTC_8x6_UNORM_BLOCK","","",28,null],[13,"ASTC_8x6_SRGB_BLOCK","","",28,null],[13,"ASTC_8x8_UNORM_BLOCK","","",28,null],[13,"ASTC_8x8_SRGB_BLOCK","","",28,null],[13,"ASTC_10x5_UNORM_BLOCK","","",28,null],[13,"ASTC_10x5_SRGB_BLOCK","","",28,null],[13,"ASTC_10x6_UNORM_BLOCK","","",28,null],[13,"ASTC_10x6_SRGB_BLOCK","","",28,null],[13,"ASTC_10x8_UNORM_BLOCK","","",28,null],[13,"ASTC_10x8_SRGB_BLOCK","","",28,null],[13,"ASTC_10x10_UNORM_BLOCK","","",28,null],[13,"ASTC_10x10_SRGB_BLOCK","","",28,null],[13,"ASTC_12x10_UNORM_BLOCK","","",28,null],[13,"ASTC_12x10_SRGB_BLOCK","","",28,null],[13,"ASTC_12x12_UNORM_BLOCK","","",28,null],[13,"ASTC_12x12_SRGB_BLOCK","","",28,null],[13,"G8B8G8R8_422_UNORM","","",28,null],[13,"B8G8R8G8_422_UNORM","","",28,null],[13,"G8_B8_R8_3PLANE_420_UNORM","","",28,null],[13,"G8_B8R8_2PLANE_420_UNORM","","",28,null],[13,"G8_B8_R8_3PLANE_422_UNORM","","",28,null],[13,"G8_B8R8_2PLANE_422_UNORM","","",28,null],[13,"G8_B8_R8_3PLANE_444_UNORM","","",28,null],[13,"R10X6_UNORM_PACK16","","",28,null],[13,"R10X6G10X6_UNORM_2PACK16","","",28,null],[13,"R10X6G10X6B10X6A10X6_UNORM_4PACK16","","",28,null],[13,"G10X6B10X6G10X6R10X6_422_UNORM_4PACK16","","",28,null],[13,"B10X6G10X6R10X6G10X6_422_UNORM_4PACK16","","",28,null],[13,"G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16","","",28,null],[13,"G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16","","",28,null],[13,"G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16","","",28,null],[13,"G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16","","",28,null],[13,"G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16","","",28,null],[13,"R12X4_UNORM_PACK16","","",28,null],[13,"R12X4G12X4_UNORM_2PACK16","","",28,null],[13,"R12X4G12X4B12X4A12X4_UNORM_4PACK16","","",28,null],[13,"G12X4B12X4G12X4R12X4_422_UNORM_4PACK16","","",28,null],[13,"B12X4G12X4R12X4G12X4_422_UNORM_4PACK16","","",28,null],[13,"G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16","","",28,null],[13,"G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16","","",28,null],[13,"G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16","","",28,null],[13,"G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16","","",28,null],[13,"G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16","","",28,null],[13,"G16B16G16R16_422_UNORM","","",28,null],[13,"B16G16R16G16_422_UNORM","","",28,null],[13,"G16_B16_R16_3PLANE_420_UNORM","","",28,null],[13,"G16_B16R16_2PLANE_420_UNORM","","",28,null],[13,"G16_B16_R16_3PLANE_422_UNORM","","",28,null],[13,"G16_B16R16_2PLANE_422_UNORM","","",28,null],[13,"G16_B16_R16_3PLANE_444_UNORM","","",28,null],[13,"PVRTC1_2BPP_UNORM_BLOCK_IMG","","",28,null],[13,"PVRTC1_4BPP_UNORM_BLOCK_IMG","","",28,null],[13,"PVRTC2_2BPP_UNORM_BLOCK_IMG","","",28,null],[13,"PVRTC2_4BPP_UNORM_BLOCK_IMG","","",28,null],[13,"PVRTC1_2BPP_SRGB_BLOCK_IMG","","",28,null],[13,"PVRTC1_4BPP_SRGB_BLOCK_IMG","","",28,null],[13,"PVRTC2_2BPP_SRGB_BLOCK_IMG","","",28,null],[13,"PVRTC2_4BPP_SRGB_BLOCK_IMG","","",28,null],[13,"RANGE_SIZE","","",28,null],[13,"MAX_ENUM","","",28,null],[6,"FormatFeatureFlags","","",null,null],[6,"Image","","",null,null],[4,"ImageLayout","","",null,null],[13,"UNDEFINED","","",29,null],[13,"GENERAL","","",29,null],[13,"COLOR_ATTACHMENT_OPTIMAL","","",29,null],[13,"DEPTH_STENCIL_ATTACHMENT_OPTIMAL","","",29,null],[13,"DEPTH_STENCIL_READ_ONLY_OPTIMAL","","",29,null],[13,"SHADER_READ_ONLY_OPTIMAL","","",29,null],[13,"TRANSFER_SRC_OPTIMAL","","",29,null],[13,"TRANSFER_DST_OPTIMAL","","",29,null],[13,"PREINITIALIZED","","",29,null],[13,"DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL","","",29,null],[13,"DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL","","",29,null],[13,"PRESENT_SRC_KHR","","",29,null],[13,"SHARED_PRESENT_KHR","","",29,null],[13,"RANGE_SIZE","","",29,null],[13,"MAX_ENUM","","",29,null],[4,"ImageTiling","","",null,null],[13,"OPTIMAL","","",30,null],[13,"LINEAR","","",30,null],[13,"RANGE_SIZE","","",30,null],[13,"MAX_ENUM","","",30,null],[6,"ImageUsageFlags","","",null,null],[6,"Instance","","",null,null],[3,"Offset2D","","",null,null],[12,"x","","",31,null],[12,"y","","",31,null],[6,"PhysicalDevice","","",null,null],[3,"PhysicalDeviceFeatures","","",null,null],[12,"_bindgen_opaque_blob","","",32,null],[3,"PhysicalDeviceFeatures2","","",null,null],[12,"_bindgen_opaque_blob","","",33,null],[6,"Queue","","",null,null],[3,"Rect2D","","",null,null],[12,"offset","","",34,null],[12,"extent","","",34,null],[6,"RenderPass","","",null,null],[4,"SamplerYcbcrModelConversion","","",null,null],[13,"RGB_IDENTITY","","",35,null],[13,"YCBCR_IDENTITY","","",35,null],[13,"YCBCR_709","","",35,null],[13,"YCBCR_601","","",35,null],[13,"YCBCR_2020","","",35,null],[13,"RANGE_SIZE","","",35,null],[13,"MAX_ENUM","","",35,null],[4,"SamplerYcbcrRange","","",null,null],[13,"ITU_FULL","","",36,null],[13,"ITU_NARROW","","",36,null],[13,"RANGE_SIZE","","",36,null],[13,"MAX_ENUM","","",36,null],[4,"SharingMode","","",null,null],[13,"EXCLUSIVE","","",37,null],[13,"CONCURRENT","","",37,null],[13,"RANGE_SIZE","","",37,null],[13,"MAX_ENUM","","",37,null],[17,"QUEUE_FAMILY_IGNORED","","",null,null],[3,"NullHandle","","",null,null],[17,"NULL_HANDLE","","",null,null],[3,"Version","","",null,null],[11,"new","","",38,[[["usize",15]]]],[11,"major","","",38,[[],["usize",15]]],[11,"minor","","",38,[[],["usize",15]]],[11,"patch","","",38,[[],["usize",15]]],[6,"BackendDrawableInfo","skia_safe::gpu","",null,null],[6,"BackendFormat","","",null,null],[6,"BackendTexture","","",null,null],[6,"BackendRenderTarget","","",null,null],[6,"BackendSurfaceMutableState","","",null,null],[6,"DirectContext","","",null,null],[3,"ResourceCacheLimits","","",null,null],[12,"max_resources","","",39,null],[12,"max_resource_bytes","","",39,null],[3,"ResourceCacheUsage","","",null,null],[12,"resource_count","","",40,null],[12,"resource_bytes","","",40,null],[6,"Context","","",null,null],[3,"DriverBugWorkarounds","","",null,null],[12,"add_and_true_to_loop_condition","","",41,null],[12,"disable_blend_equation_advanced","","",41,null],[12,"disable_discard_framebuffer","","",41,null],[12,"disable_dual_source_blending_support","","",41,null],[12,"disable_texture_storage","","",41,null],[12,"disallow_large_instanced_draw","","",41,null],[12,"emulate_abs_int_function","","",41,null],[12,"flush_on_framebuffer_change","","",41,null],[12,"force_update_scissor_state_when_binding_fbo0","","",41,null],[12,"gl_clear_broken","","",41,null],[12,"max_fragment_uniform_vectors_32","","",41,null],[12,"max_msaa_sample_count_4","","",41,null],[12,"max_texture_size_limit_4096","","",41,null],[12,"pack_parameters_workaround_with_pack_buffer","","",41,null],[12,"remove_pow_with_constant_exponent","","",41,null],[12,"rewrite_do_while_loops","","",41,null],[12,"unbind_attachments_on_bound_render_fbo_delete","","",41,null],[12,"unfold_short_circuit_as_ternary_operation","","",41,null],[6,"RecordingContext","","",null,null],[4,"BackendAPI","","",null,null],[13,"OpenGL","","",42,null],[13,"Vulkan","","",42,null],[13,"Metal","","",42,null],[13,"Direct3D","","",42,null],[13,"Dawn","","",42,null],[13,"Mock","","",42,null],[4,"Mipmapped","","",null,null],[13,"No","","",43,null],[13,"Yes","","",43,null],[4,"MipMapped","","",null,null],[13,"No","","",43,null],[13,"Yes","","",43,null],[4,"Renderable","","",null,null],[13,"No","","",44,null],[13,"Yes","","",44,null],[4,"Protected","","",null,null],[13,"No","","",45,null],[13,"Yes","","",45,null],[4,"SurfaceOrigin","","",null,null],[13,"TopLeft","","",46,null],[13,"BottomLeft","","",46,null],[3,"FlushInfo","","",null,null],[4,"SemaphoresSubmitted","","",null,null],[13,"No","","",47,null],[13,"Yes","","",47,null],[6,"YUVABackendTextureInfo","","A description of a set [BackendTexture]s that hold the â€¦",null,null],[6,"YUVABackendTextures","","A set of [BackendTexture]s that hold the planar data for â€¦",null,null],[0,"wrapper","skia_safe","",null,null],[8,"PointerWrapper","skia_safe::wrapper","This trait supports the conversion of a wrapper into it\'s â€¦",null,null],[10,"wrap","","Wraps a native pointer into a wrapper type. Returns <code>None</code> â€¦",48,[[],["option",4]]],[10,"unwrap","","Unwraps the wrapper type into the native pointer.",48,[[]]],[10,"inner","","Access the wrapped pointer.",48,[[]]],[10,"inner_mut","","Access the wrapped pointer.",48,[[]]],[8,"ValueWrapper","","A trait that supports the conversion from a C/C++ value â€¦",null,null],[10,"wrap","","",49,[[]]],[10,"unwrap","","",49,[[]]],[10,"inner","","",49,[[]]],[10,"inner_mut","","",49,[[]]],[8,"NativeTransmutableWrapper","","A trait that supports the conversion from a C/C++ value â€¦",null,null],[10,"wrap","","",50,[[]]],[10,"unwrap","","",50,[[]]],[10,"inner","","",50,[[]]],[10,"inner_mut","","",50,[[]]],[8,"RefWrapper","","A trait that supports the conversion from a C/C++ â€¦",null,null],[10,"wrap_ref","","",51,[[]]],[10,"wrap_mut","","",51,[[]]],[10,"inner","","",51,[[]]],[10,"inner_mut","","",51,[[]]],[0,"private","skia_safe","",null,null],[0,"svg","","",null,null],[0,"canvas","skia_safe::svg","",null,null],[3,"Canvas","skia_safe::svg::canvas","",null,null],[3,"Flags","","",null,null],[18,"CONVERT_TEXT_TO_PATHS","","",52,null],[18,"NO_PRETTY_XML","","",52,null],[11,"empty","","Returns an empty set of flags",52,[[],["flags",3]]],[11,"all","","Returns the set containing all flags.",52,[[],["flags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",52,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that â€¦",52,[[["u32",15]],[["option",4],["flags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any â€¦",52,[[["u32",15]],["flags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving allâ€¦",52,[[["u32",15]],["flags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",52,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",52,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦",52,[[["flags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained â€¦",52,[[["flags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",52,[[["flags",3]]]],[11,"remove","","Removes the specified flags in-place.",52,[[["flags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",52,[[["flags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the â€¦",52,[[["bool",15],["flags",3]]]],[11,"new","","Creates a new SVG canvas.",53,[[],["canvas",3]]],[11,"end","","Ends the Canvas drawing and returns the resulting SVG. â€¦",53,[[],["data",6]]],[0,"utils","skia_safe","",null,null],[0,"interpolator","skia_safe::utils","This wrapper combines SkInterpolatorBase and â€¦",null,null],[4,"Result","skia_safe::utils::interpolator","",null,null],[13,"Normal_Result","","",54,null],[13,"FreezeStart_Result","","",54,null],[13,"FreezeEnd_Result","","",54,null],[6,"Interpolator","","",null,null],[3,"TimeToT","","",null,null],[12,"t","","",55,null],[12,"index","","",55,null],[12,"exact","","",55,null],[5,"unit_cubic_interp","","",null,[[["scalar",6]],["scalar",6]]],[0,"parse_path","skia_safe::utils","",null,null],[5,"from_svg","skia_safe::utils::parse_path","",null,[[],[["option",4],["path",6]]]],[5,"to_svg","","",null,[[["path",6]],["string",3]]],[0,"shadow_utils","skia_safe::utils","",null,null],[3,"ShadowFlags","skia_safe::utils::shadow_utils","",null,null],[18,"TRANSPARENT_OCCLUDER","","",56,null],[18,"GEOMETRIC_ONLY","","",56,null],[18,"ALL","","",56,null],[11,"empty","","Returns an empty set of flags",56,[[],["shadowflags",3]]],[11,"all","","Returns the set containing all flags.",56,[[],["shadowflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",56,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that â€¦",56,[[["u32",15]],[["option",4],["shadowflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any â€¦",56,[[["u32",15]],["shadowflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving allâ€¦",56,[[["u32",15]],["shadowflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",56,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",56,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦",56,[[["shadowflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained â€¦",56,[[["shadowflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",56,[[["shadowflags",3]]]],[11,"remove","","Removes the specified flags in-place.",56,[[["shadowflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",56,[[["shadowflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the â€¦",56,[[["bool",15],["shadowflags",3]]]],[5,"draw_shadow","","",null,[[["canvas",3],["path",6],["scalar",6]]]],[5,"local_bounds","","",null,[[["u32",15],["matrix",3],["path",6],["scalar",6]],[["option",4],["rect",3]]]],[5,"compute_tonal_colors","","",null,[[]]],[0,"text_utils","skia_safe::utils","",null,null],[4,"Align","skia_safe::utils::text_utils","",null,null],[13,"Left","","",57,null],[13,"Center","","",57,null],[13,"Right","","",57,null],[5,"draw_str","","",null,[[["font",6],["align",4],["canvas",3],["paint",6]]]],[5,"get_path","","",null,[[["font",6]],["path",6]]],[3,"Patch3D","skia_safe::utils","",null,null],[12,"u","","",58,null],[12,"v","","",58,null],[12,"origin","","",58,null],[3,"Camera3D","","",null,null],[12,"location","","",59,null],[12,"axis","","",59,null],[12,"zenith","","",59,null],[12,"observer","","",59,null],[6,"View3D","","",null,null],[6,"CustomTypefaceBuilder","","",null,null],[4,"TypefaceGlyph","","",null,null],[13,"Path","","",60,null],[13,"PathAndPaint","","",60,null],[13,"Image","","",60,null],[12,"image","skia_safe::utils::TypefaceGlyph","",61,null],[12,"scale","","",61,null],[13,"Picture","skia_safe::utils","",60,null],[5,"new_null_canvas","","",null,[[],["ownedcanvas",3]]],[0,"annotate","skia_safe","",null,null],[5,"rect_with_url","skia_safe::annotate","",null,[[["canvas",3],["data",6]]]],[5,"named_destination","","",null,[[["canvas",3],["data",6]]]],[5,"link_to_destination","","",null,[[["canvas",3],["data",6]]]],[0,"canvas","skia_safe","",null,null],[0,"lattice","skia_safe::canvas","",null,null],[3,"Lattice","skia_safe::canvas::lattice","",null,null],[12,"x_divs","","",62,null],[12,"y_divs","","",62,null],[12,"rect_types","","",62,null],[12,"bounds","","",62,null],[12,"colors","","",62,null],[4,"RectType","","",null,null],[13,"Default","","",63,null],[13,"Transparent","","",63,null],[13,"FixedColor","","",63,null],[3,"Lattice","skia_safe::canvas","",null,null],[12,"x_divs","","",62,null],[12,"y_divs","","",62,null],[12,"rect_types","","",62,null],[12,"bounds","","",62,null],[12,"colors","","",62,null],[3,"SaveLayerFlags","","",null,null],[3,"SaveLayerRec","","",null,null],[4,"PointMode","","",null,null],[13,"Points","","",64,null],[13,"Lines","","",64,null],[13,"Polygon","","",64,null],[4,"SrcRectConstraint","","",null,null],[13,"Strict","","",65,null],[13,"Fast","","",65,null],[3,"TopLayerPixels","","Provides access to Canvas\'s pixels. Returned by â€¦",null,null],[12,"pixels","","",66,null],[12,"info","","",66,null],[12,"row_bytes","","",66,null],[12,"origin","","",66,null],[3,"Canvas","","The canvas type that is returned when it is owned by â€¦",null,null],[3,"OwnedCanvas","","A type representing a canvas that is owned and dropped â€¦",null,null],[8,"SetMatrix","","",null,null],[10,"set_matrix","","",67,[[["matrix",3]]]],[3,"AutoRestoredCanvas","","A reference to a Canvas that restores the Canvas\'s state â€¦",null,null],[4,"AutoCanvasRestore","","",null,null],[0,"colors","skia_safe","",null,null],[17,"TRANSPARENT","skia_safe::colors","",null,null],[17,"BLACK","","",null,null],[17,"DARK_GREY","","",null,null],[17,"GREY","","",null,null],[17,"LIGHT_GREY","","",null,null],[17,"WHITE","","",null,null],[17,"RED","","",null,null],[17,"GREEN","","",null,null],[17,"BLUE","","",null,null],[17,"YELLOW","","",null,null],[17,"CYAN","","",null,null],[17,"MAGENTA","","",null,null],[0,"color_filter","skia_safe","",null,null],[0,"color_filters","skia_safe::color_filter","",null,null],[5,"compose","skia_safe::color_filter::color_filters","",null,[[],[["colorfilter",6],["option",4]]]],[5,"matrix","","",null,[[["colormatrix",6]],["colorfilter",6]]],[5,"matrix_row_major","","",null,[[],["colorfilter",6]]],[5,"hsla_matrix_of_color_matrix","","",null,[[["colormatrix",6]],["colorfilter",6]]],[5,"hsla_matrix","","",null,[[],["colorfilter",6]]],[5,"blend","","",null,[[["blendmode",4]],[["colorfilter",6],["option",4]]]],[5,"linear_to_srgb_gamma","","",null,[[],["colorfilter",6]]],[5,"srgb_to_linear_gamma","","",null,[[],["colorfilter",6]]],[5,"lerp","","",null,[[["f32",15]],[["colorfilter",6],["option",4]]]],[3,"Flags","skia_safe::color_filter","",null,null],[6,"ColorFilter","","",null,null],[0,"color_filters","skia_safe","",null,null],[5,"compose","skia_safe::color_filters","",null,[[],[["colorfilter",6],["option",4]]]],[5,"matrix","","",null,[[["colormatrix",6]],["colorfilter",6]]],[5,"matrix_row_major","","",null,[[],["colorfilter",6]]],[5,"hsla_matrix_of_color_matrix","","",null,[[["colormatrix",6]],["colorfilter",6]]],[5,"hsla_matrix","","",null,[[],["colorfilter",6]]],[5,"blend","","",null,[[["blendmode",4]],[["colorfilter",6],["option",4]]]],[5,"linear_to_srgb_gamma","","",null,[[],["colorfilter",6]]],[5,"srgb_to_linear_gamma","","",null,[[],["colorfilter",6]]],[5,"lerp","","",null,[[["f32",15]],[["colorfilter",6],["option",4]]]],[0,"named_transfer_fn","skia_safe","",null,null],[17,"SRGB","skia_safe::named_transfer_fn","",null,null],[17,"DOT22","","",null,null],[17,"LINEAR","","",null,null],[17,"REC2020","","",null,null],[17,"PQ","","",null,null],[17,"HLG","","",null,null],[0,"contour_measure","skia_safe","",null,null],[6,"ContourMeasure","skia_safe::contour_measure","",null,null],[3,"MatrixFlags","","",null,null],[6,"ContourMeasureIter","","",null,null],[0,"document","skia_safe","",null,null],[0,"state","skia_safe::document","",null,null],[3,"Open","skia_safe::document::state","Document is currently open. May contain several pages.",null,null],[3,"OnPage","","Document is currently on a page and can be drawn onto.",null,null],[3,"Document","skia_safe::document","",null,null],[0,"drawable","skia_safe","",null,null],[0,"gpu_draw_handler","skia_safe::drawable","",null,null],[6,"GPUDrawHandler","skia_safe::drawable::gpu_draw_handler","",null,null],[6,"Drawable","skia_safe::drawable","",null,null],[6,"GPUDrawHandler","","",null,null],[0,"font","skia_safe","",null,null],[4,"Edging","skia_safe::font","",null,null],[13,"Alias","","",68,null],[13,"AntiAlias","","",68,null],[13,"SubpixelAntiAlias","","",68,null],[6,"Font","","",null,null],[0,"font_arguments","skia_safe","",null,null],[0,"variation_position","skia_safe::font_arguments","",null,null],[3,"Coordinate","skia_safe::font_arguments::variation_position","",null,null],[12,"axis","","",69,null],[12,"value","","",69,null],[3,"VariationPosition","skia_safe::font_arguments","",null,null],[12,"coordinates","","",70,null],[3,"FontArguments","","",null,null],[0,"font_metrics","skia_safe","",null,null],[3,"Flags","skia_safe::font_metrics","",null,null],[3,"FontMetrics","","",null,null],[12,"top","","",71,null],[12,"ascent","","",71,null],[12,"descent","","",71,null],[12,"bottom","","",71,null],[12,"leading","","",71,null],[12,"avg_char_width","","",71,null],[12,"max_char_width","","",71,null],[12,"x_min","","",71,null],[12,"x_max","","",71,null],[12,"x_height","","",71,null],[12,"cap_height","","",71,null],[0,"font_parameters","skia_safe","",null,null],[0,"variation","skia_safe::font_parameters","",null,null],[3,"Axis","skia_safe::font_parameters::variation","",null,null],[12,"tag","","",72,null],[12,"min","","",72,null],[12,"def","","",72,null],[12,"max","","",72,null],[3,"VariationAxis","skia_safe::font_parameters","",null,null],[12,"tag","","",72,null],[12,"min","","",72,null],[12,"def","","",72,null],[12,"max","","",72,null],[0,"font_style","skia_safe","",null,null],[3,"Weight","skia_safe::font_style","Wrapper type of a font weight.",null,null],[3,"Width","","Wrapper type for the width of a font.",null,null],[4,"Slant","","",null,null],[13,"Upright","","",73,null],[13,"Italic","","",73,null],[13,"Oblique","","",73,null],[3,"FontStyle","","",null,null],[0,"graphics","skia_safe","",null,null],[5,"init","skia_safe::graphics","",null,[[]]],[5,"font_cache_limit","","",null,[[],["usize",15]]],[5,"set_font_cache_limit","","",null,[[["usize",15]],["usize",15]]],[5,"font_cache_used","","",null,[[],["usize",15]]],[5,"font_cache_count_used","","",null,[[],["i32",15]]],[5,"font_cache_count_limit","","",null,[[],["i32",15]]],[5,"set_font_cache_count_limit","","",null,[[["i32",15]],["i32",15]]],[5,"font_cache_point_size_limit","","",null,[[],["i32",15]]],[5,"set_font_cache_point_size_limit","","",null,[[["i32",15]],["i32",15]]],[5,"purge_font_cache","","",null,[[]]],[5,"resource_cache_total_bytes_used","","",null,[[],["usize",15]]],[5,"resource_cache_total_bytes_limit","","",null,[[],["usize",15]]],[5,"set_resource_cache_total_bytes_limit","","",null,[[["usize",15]],["usize",15]]],[5,"purge_resource_cache","","",null,[[]]],[5,"resource_cache_single_allocation_byte_limit","","",null,[[],[["usize",15],["option",4]]]],[5,"set_resource_cache_single_allocation_byte_limit","","",null,[[["usize",15],["option",4]],[["usize",15],["option",4]]]],[5,"purge_all_caches","","",null,[[]]],[5,"set_flags","","",null,[[]]],[5,"allow_jit","","",null,[[]]],[0,"image","skia_safe","",null,null],[3,"CubicResampler","skia_safe::image","Specify <code>b</code> and <code>c</code> (each between 0...1) to create a shader â€¦",null,null],[12,"b","","",74,null],[12,"c","","",74,null],[4,"BitDepth","","",null,null],[13,"U8","","",75,null],[13,"F16","","",75,null],[4,"CachingHint","","",null,null],[13,"Allow","","",76,null],[13,"Disallow","","",76,null],[4,"CompressionType","","",null,null],[13,"None","","",77,null],[13,"ETC2_RGB8_UNORM","","",77,null],[13,"BC1_RGB8_UNORM","","",77,null],[13,"BC1_RGBA8_UNORM","","",77,null],[6,"Image","","",null,null],[0,"encode","skia_safe","",null,null],[5,"pixmap","skia_safe::encode","",null,[[["pixmap",6],["usize",15],["encodedimageformat",4]],[["option",4],["data",6]]]],[5,"bitmap","","",null,[[["usize",15],["bitmap",6],["encodedimageformat",4]],[["option",4],["data",6]]]],[0,"image_filter","skia_safe","",null,null],[4,"MapDirection","skia_safe::image_filter","",null,null],[13,"Forward","","",78,null],[13,"Reverse","","",78,null],[6,"ImageFilter","","",null,null],[0,"matrix","skia_safe","",null,null],[4,"ApplyPerspectiveClip","skia_safe::matrix","",null,null],[13,"No","","",79,null],[13,"Yes","","",79,null],[3,"TypeMask","","",null,null],[4,"ScaleToFit","","",null,null],[13,"Fill","","",80,null],[13,"Start","","",80,null],[13,"Center","","",80,null],[13,"End","","",80,null],[3,"Matrix","","",null,null],[4,"Member","","",null,null],[13,"ScaleX","","",81,null],[13,"SkewX","","",81,null],[13,"TransX","","",81,null],[13,"SkewY","","",81,null],[13,"ScaleY","","",81,null],[13,"TransY","","",81,null],[13,"Persp0","","",81,null],[13,"Persp1","","",81,null],[13,"Persp2","","",81,null],[4,"AffineMember","","",null,null],[13,"ScaleX","","",82,null],[13,"SkewY","","",82,null],[13,"SkewX","","",82,null],[13,"ScaleY","","",82,null],[13,"TransX","","",82,null],[13,"TransY","","",82,null],[17,"IDENTITY","","",null,null],[0,"matrix44","skia_safe","",null,null],[3,"Vector4","skia_safe::matrix44","",null,null],[3,"TypeMask","","",null,null],[3,"Matrix44","","",null,null],[8,"SetPrePostScale","","",null,null],[10,"set_scale","","",83,[[]]],[10,"pre_scale","","",83,[[]]],[10,"post_scale","","",83,[[]]],[8,"MapScalars","","",null,null],[10,"map_scalars","","",84,[[]]],[8,"Map2","","",null,null],[10,"map2","","",85,[[]]],[0,"paint","skia_safe","",null,null],[4,"Style","skia_safe::paint","",null,null],[13,"Fill","","",86,null],[13,"Stroke","","",86,null],[13,"StrokeAndFill","","",86,null],[4,"Cap","","",null,null],[13,"Butt","","",87,null],[13,"Round","","",87,null],[13,"Square","","",87,null],[4,"Join","","",null,null],[13,"Miter","","",88,null],[13,"Round","","",88,null],[13,"Bevel","","",88,null],[6,"Paint","","",null,null],[0,"path","skia_safe","",null,null],[4,"Direction","skia_safe::path","",null,null],[13,"CW","","",89,null],[13,"CCW","","",89,null],[4,"FillType","","",null,null],[13,"Winding","","",90,null],[13,"EvenOdd","","",90,null],[13,"InverseWinding","","",90,null],[13,"InverseEvenOdd","","",90,null],[4,"ArcSize","","",null,null],[13,"Small","","",91,null],[13,"Large","","",91,null],[4,"AddPathMode","","",null,null],[13,"Append","","",92,null],[13,"Extend","","",92,null],[3,"SegmentMask","","",null,null],[4,"Verb","","",null,null],[13,"Move","","",93,null],[13,"Line","","",93,null],[13,"Quad","","",93,null],[13,"Conic","","",93,null],[13,"Cubic","","",93,null],[13,"Close","","",93,null],[13,"Done","","",93,null],[3,"Iter","","",null,null],[3,"RawIter","","",null,null],[6,"Path","","",null,null],[0,"path_effect","skia_safe","",null,null],[0,"point_data","skia_safe::path_effect","",null,null],[3,"PointFlags","skia_safe::path_effect::point_data","",null,null],[3,"PointData","skia_safe::path_effect","",null,null],[12,"flags","","",94,null],[12,"size","","",94,null],[12,"clip_rect","","",94,null],[12,"path","","",94,null],[12,"first","","",94,null],[12,"last","","",94,null],[3,"DashInfo","","",null,null],[12,"intervals","","",95,null],[12,"phase","","",95,null],[6,"PathEffect","","",null,null],[0,"path_measure","skia_safe","",null,null],[6,"PathMeasure","skia_safe::path_measure","",null,null],[3,"MatrixFlags","","",null,null],[0,"path_types","skia_safe","",null,null],[4,"PathFillType","skia_safe::path_types","",null,null],[13,"Winding","","",90,null],[13,"EvenOdd","","",90,null],[13,"InverseWinding","","",90,null],[13,"InverseEvenOdd","","",90,null],[4,"PathDirection","","",null,null],[13,"CW","","",89,null],[13,"CCW","","",89,null],[3,"PathSegmentMask","","",null,null],[4,"PathVerb","","",null,null],[13,"Move","","",96,null],[13,"Line","","",96,null],[13,"Quad","","",96,null],[13,"Conic","","",96,null],[13,"Cubic","","",96,null],[13,"Close","","",96,null],[0,"picture_recorder","skia_safe","",null,null],[6,"PictureRecorder","skia_safe::picture_recorder","",null,null],[0,"region","skia_safe","",null,null],[6,"Region","skia_safe::region","",null,null],[4,"RegionOp","","",null,null],[13,"Difference","","",97,null],[13,"Intersect","","",97,null],[13,"Union","","",97,null],[13,"XOR","","",97,null],[13,"ReverseDifference","","",97,null],[13,"Replace","","",97,null],[8,"Combine","","",null,null],[10,"combine","","",98,[[["regionop",4]]]],[11,"difference","","",98,[[]]],[11,"intersect","","",98,[[]]],[11,"xor","","",98,[[]]],[11,"union","","",98,[[]]],[11,"reverse_difference","","",98,[[]]],[11,"replace","","",98,[[]]],[8,"Intersects","","",null,null],[10,"intersects","","",99,[[],["bool",15]]],[3,"Iterator","","",null,null],[3,"Cliperator","","",null,null],[3,"Spanerator","","",null,null],[0,"rrect","skia_safe","",null,null],[4,"Type","skia_safe::rrect","",null,null],[13,"Empty","","",100,null],[13,"Rect","","",100,null],[13,"Oval","","",100,null],[13,"Simple","","",100,null],[13,"NinePatch","","",100,null],[13,"Complex","","",100,null],[4,"Corner","","",null,null],[13,"UpperLeft","","",101,null],[13,"UpperRight","","",101,null],[13,"LowerRight","","",101,null],[13,"LowerLeft","","",101,null],[3,"RRect","","",null,null],[0,"sampling_options","skia_safe","",null,null],[4,"FilterMode","skia_safe::sampling_options","",null,null],[13,"Nearest","","",102,null],[13,"Linear","","",102,null],[6,"SamplingMode","","",null,null],[4,"MipmapMode","","",null,null],[13,"None","","",103,null],[13,"Nearest","","",103,null],[13,"Linear","","",103,null],[3,"CubicResampler","","Specify <code>b</code> and <code>c</code> (each between 0...1) to create a shader â€¦",null,null],[12,"b","","",74,null],[12,"c","","",74,null],[3,"FilterOptions","","",null,null],[12,"sampling","","",104,null],[12,"mipmap","","",104,null],[4,"MediumBehavior","","",null,null],[13,"AsMipmapNearest","","",105,null],[13,"AsMipmapLinear","","",105,null],[3,"SamplingOptions","","",null,null],[12,"use_cubic","","",106,null],[12,"cubic","","",106,null],[12,"filter","","",106,null],[12,"mipmap","","",106,null],[0,"shader","skia_safe","",null,null],[0,"shaders","skia_safe::shader","",null,null],[5,"empty","skia_safe::shader::shaders","",null,[[],["shader",6]]],[5,"color","","",null,[[],["shader",6]]],[5,"color_in_space","","",null,[[],["shader",6]]],[5,"blend","","",null,[[["blendmode",4]],["shader",6]]],[5,"lerp","","",null,[[["f32",15]],[["option",4],["shader",6]]]],[5,"lerp2","","",null,[[["matrix",3],["option",4],["shader",6]]]],[4,"GradientTypeInternal","skia_safe::shader","",null,null],[13,"None","","",107,null],[13,"Color","","",107,null],[13,"Linear","","",107,null],[13,"Radial","","",107,null],[13,"Sweep","","",107,null],[13,"Conical","","",107,null],[4,"GradientType","","",null,null],[13,"Color","","",108,null],[13,"Linear","","",108,null],[13,"Radial","","",108,null],[13,"Conical","","",108,null],[13,"Sweep","","",108,null],[3,"GradientInfo","","",null,null],[12,"colors","","",109,null],[12,"color_offsets","","",109,null],[12,"tile_mode","","",109,null],[12,"gradient_flags","","",109,null],[6,"Shader","","",null,null],[0,"shaders","skia_safe","",null,null],[5,"empty","skia_safe::shaders","",null,[[],["shader",6]]],[5,"color","","",null,[[],["shader",6]]],[5,"color_in_space","","",null,[[],["shader",6]]],[5,"blend","","",null,[[["blendmode",4]],["shader",6]]],[5,"lerp","","",null,[[["f32",15]],[["option",4],["shader",6]]]],[5,"lerp2","","",null,[[["matrix",3],["option",4],["shader",6]]]],[0,"stroke_rec","skia_safe","",null,null],[4,"InitStyle","skia_safe::stroke_rec","",null,null],[13,"Hairline","","",110,null],[13,"Fill","","",110,null],[4,"Style","","",null,null],[13,"Hairline","","",111,null],[13,"Fill","","",111,null],[13,"Stroke","","",111,null],[13,"StrokeAndFill","","",111,null],[6,"StrokeRec","","",null,null],[0,"surface","skia_safe","",null,null],[4,"ContentChangeMode","skia_safe::surface","",null,null],[13,"Discard","","",112,null],[13,"Retain","","",112,null],[4,"BackendHandleAccess","","",null,null],[13,"FlushRead","","",113,null],[13,"FlushWrite","","",113,null],[13,"DiscardWrite","","",113,null],[4,"BackendSurfaceAccess","","",null,null],[13,"NoAccess","","",114,null],[13,"Present","","",114,null],[6,"Surface","","",null,null],[0,"typeface","skia_safe","",null,null],[6,"FontId","skia_safe::typeface","",null,null],[6,"FontTableTag","","",null,null],[4,"SerializeBehavior","","",null,null],[13,"DoIncludeData","","",115,null],[13,"DontIncludeData","","",115,null],[13,"IncludeDataIfLocal","","",115,null],[3,"LocalizedString","","",null,null],[12,"string","","",116,null],[12,"language","","",116,null],[6,"Typeface","","",null,null],[6,"LocalizedStringsIter","","",null,null],[0,"vertices","skia_safe","",null,null],[6,"BoneIndices","skia_safe::vertices","",null,null],[6,"BoneWeights","","",null,null],[3,"Bone","","",null,null],[4,"VertexMode","","",null,null],[13,"Triangles","","",117,null],[13,"TriangleStrip","","",117,null],[13,"TriangleFan","","",117,null],[4,"AttributeType","","",null,null],[13,"Float","","",118,null],[13,"Float2","","",118,null],[13,"Float3","","",118,null],[13,"Float4","","",118,null],[13,"Byte4UNorm","","",118,null],[4,"AttributeUsage","","",null,null],[13,"Raw","","",119,null],[13,"Color","","",119,null],[13,"Vector","","",119,null],[13,"NormalVector","","",119,null],[13,"Position","","",119,null],[3,"Attribute","","",null,null],[12,"ty","","",120,null],[12,"usage","","",120,null],[12,"marker_id","","",120,null],[6,"Vertices","","",null,null],[3,"BuilderFlags","","",null,null],[6,"Builder","","",null,null],[0,"yuva_info","skia_safe","",null,null],[6,"YUVAInfo","skia_safe::yuva_info","Specifies the structure of planes for a YUV image with â€¦",null,null],[4,"PlaneConfig","","Specifies how YUV (and optionally A) are divided among â€¦",null,null],[13,"Unknown","","",121,null],[13,"Y_U_V","","",121,null],[13,"Y_V_U","","",121,null],[13,"Y_UV","","",121,null],[13,"Y_VU","","",121,null],[13,"YUV","","",121,null],[13,"UYV","","",121,null],[13,"Y_U_V_A","","",121,null],[13,"Y_V_U_A","","",121,null],[13,"Y_UV_A","","",121,null],[13,"Y_VU_A","","",121,null],[13,"YUVA","","",121,null],[13,"UYVA","","",121,null],[4,"Subsampling","","UV subsampling is also specified in the enum value names â€¦",null,null],[13,"Unknown","","",122,null],[13,"S444","","",122,null],[13,"S422","","",122,null],[13,"S420","","",122,null],[13,"S440","","",122,null],[13,"S411","","",122,null],[13,"S410","","",122,null],[4,"Siting","","Describes how subsampled chroma values are sited relative â€¦",null,null],[13,"Centered","","",123,null],[5,"subsampling_factors","","Ratio of Y/A values to U/V values in x and y.",null,[[["subsampling",4]]]],[5,"plane_subsampling_factors","","<code>SubsamplingFactors(Subsampling)</code> if <code>plane_index</code> refers to â€¦",null,[[["usize",15],["planeconfig",4],["subsampling",4]]]],[5,"plane_dimensions","","Given image dimensions, a planer configuration, â€¦",null,[[["encodedorigin",4],["planeconfig",4],["subsampling",4]],[["vec",3],["isize",3]]]],[5,"num_planes","","Number of planes for a given [PlaneConfig].",null,[[["planeconfig",4]],["usize",15]]],[5,"num_channels_in_plane","","Number of Y, U, V, A channels in the ith plane for a â€¦",null,[[["usize",15],["planeconfig",4]],[["usize",15],["option",4]]]],[5,"has_alpha","","Does the [PlaneConfig] have alpha values?",null,[[["planeconfig",4]],["bool",15]]],[0,"yuva_pixmaps","skia_safe","",null,null],[0,"yuva_pixmap_info","skia_safe::yuva_pixmaps","",null,null],[4,"PlaneConfig","skia_safe::yuva_pixmaps::yuva_pixmap_info","",null,null],[13,"Unknown","","",121,null],[13,"Y_U_V","","",121,null],[13,"Y_V_U","","",121,null],[13,"Y_UV","","",121,null],[13,"Y_VU","","",121,null],[13,"YUV","","",121,null],[13,"UYV","","",121,null],[13,"Y_U_V_A","","",121,null],[13,"Y_V_U_A","","",121,null],[13,"Y_UV_A","","",121,null],[13,"Y_VU_A","","",121,null],[13,"YUVA","","",121,null],[13,"UYVA","","",121,null],[4,"Subsampling","","UV subsampling is also specified in the enum value names â€¦",null,null],[13,"Unknown","","",122,null],[13,"S444","","",122,null],[13,"S422","","",122,null],[13,"S420","","",122,null],[13,"S440","","",122,null],[13,"S411","","",122,null],[13,"S410","","",122,null],[4,"DataType","","Data type for Y, U, V, and possibly A channels â€¦",null,null],[13,"Unorm8","","",124,null],[13,"Unorm16","","",124,null],[13,"Float16","","",124,null],[13,"Unorm10_Unorm2","","",124,null],[6,"SupportedDataTypes","","",null,null],[5,"default_color_type_for_data_type","","Gets the default [ColorType] to use with <code>num_channels</code> â€¦",null,[[["usize",15],["datatype",4]],["colortype",4]]],[5,"num_channels_and_data_type","","If the [ColorType] is supported for YUVA pixmaps this â€¦",null,[[["colortype",4]]]],[4,"DataType","skia_safe::yuva_pixmaps","Data type for Y, U, V, and possibly A channels â€¦",null,null],[13,"Unorm8","","",124,null],[13,"Unorm16","","",124,null],[13,"Float16","","",124,null],[13,"Unorm10_Unorm2","","",124,null],[6,"YUVAPixmapInfo","","[YUVAInfo] combined with per-plane [ColorType]s and row â€¦",null,null],[6,"YUVAPixmaps","","Helper to store [Pixmap] planes as described by a [â€¦",null,null],[0,"yuva_pixmap_info","skia_safe","",null,null],[4,"PlaneConfig","skia_safe::yuva_pixmap_info","",null,null],[13,"Unknown","","",121,null],[13,"Y_U_V","","",121,null],[13,"Y_V_U","","",121,null],[13,"Y_UV","","",121,null],[13,"Y_VU","","",121,null],[13,"YUV","","",121,null],[13,"UYV","","",121,null],[13,"Y_U_V_A","","",121,null],[13,"Y_V_U_A","","",121,null],[13,"Y_UV_A","","",121,null],[13,"Y_VU_A","","",121,null],[13,"YUVA","","",121,null],[13,"UYVA","","",121,null],[4,"Subsampling","","UV subsampling is also specified in the enum value names â€¦",null,null],[13,"Unknown","","",122,null],[13,"S444","","",122,null],[13,"S422","","",122,null],[13,"S420","","",122,null],[13,"S440","","",122,null],[13,"S411","","",122,null],[13,"S410","","",122,null],[4,"DataType","","Data type for Y, U, V, and possibly A channels â€¦",null,null],[13,"Unorm8","","",124,null],[13,"Unorm16","","",124,null],[13,"Float16","","",124,null],[13,"Unorm10_Unorm2","","",124,null],[6,"SupportedDataTypes","","",null,null],[5,"default_color_type_for_data_type","","Gets the default [ColorType] to use with <code>num_channels</code> â€¦",null,[[["usize",15],["datatype",4]],["colortype",4]]],[5,"num_channels_and_data_type","","If the [ColorType] is supported for YUVA pixmaps this â€¦",null,[[["colortype",4]]]],[0,"pdf","skia_safe","",null,null],[4,"DocumentStructureType","skia_safe::pdf","",null,null],[13,"Document","","",125,null],[13,"Part","","",125,null],[13,"Art","","",125,null],[13,"Sect","","",125,null],[13,"Div","","",125,null],[13,"BlockQuote","","",125,null],[13,"Caption","","",125,null],[13,"TOC","","",125,null],[13,"TOCI","","",125,null],[13,"Index","","",125,null],[13,"NonStruct","","",125,null],[13,"Private","","",125,null],[13,"H","","",125,null],[13,"H1","","",125,null],[13,"H2","","",125,null],[13,"H3","","",125,null],[13,"H4","","",125,null],[13,"H5","","",125,null],[13,"H6","","",125,null],[13,"P","","",125,null],[13,"L","","",125,null],[13,"LI","","",125,null],[13,"Lbl","","",125,null],[13,"LBody","","",125,null],[13,"Table","","",125,null],[13,"TR","","",125,null],[13,"TH","","",125,null],[13,"TD","","",125,null],[13,"THead","","",125,null],[13,"TBody","","",125,null],[13,"TFoot","","",125,null],[13,"Span","","",125,null],[13,"Quote","","",125,null],[13,"Note","","",125,null],[13,"Reference","","",125,null],[13,"BibEntry","","",125,null],[13,"Code","","",125,null],[13,"Link","","",125,null],[13,"Annot","","",125,null],[13,"Ruby","","",125,null],[13,"RB","","",125,null],[13,"RT","","",125,null],[13,"RP","","",125,null],[13,"Warichu","","",125,null],[13,"WT","","",125,null],[13,"WP","","",125,null],[13,"Figure","","",125,null],[13,"Formula","","",125,null],[13,"Form","","",125,null],[6,"AttributeList","","",null,null],[3,"StructureElementNode","","",null,null],[3,"Metadata","","",null,null],[12,"title","","",126,null],[12,"author","","",126,null],[12,"subject","","",126,null],[12,"keywords","","",126,null],[12,"creator","","",126,null],[12,"producer","","",126,null],[12,"creation","","",126,null],[12,"modified","","",126,null],[12,"raster_dpi","","",126,null],[12,"pdfa","","",126,null],[12,"encoding_quality","","",126,null],[5,"new_document","","",null,[[["option",4],["metadata",3]],["document",3]]],[0,"path_1d_path_effect","skia_safe","",null,null],[4,"Style","skia_safe::path_1d_path_effect","",null,null],[13,"Translate","","",127,null],[13,"Rotate","","",127,null],[13,"Morph","","",127,null],[5,"new","","",null,[[["style",4],["path",6],["scalar",6]],[["option",4],["patheffect",6]]]],[0,"line_2d_path_effect","skia_safe","",null,null],[5,"new","skia_safe::line_2d_path_effect","",null,[[["scalar",6],["matrix",3]],[["option",4],["patheffect",6]]]],[0,"path_2d_path_effect","skia_safe","",null,null],[5,"new","skia_safe::path_2d_path_effect","",null,[[["matrix",3],["path",6]],["patheffect",6]]],[0,"color_matrix","skia_safe","",null,null],[6,"ColorMatrix","skia_safe::color_matrix","",null,null],[0,"color_matrix_filter","skia_safe","",null,null],[5,"new_lighting","skia_safe::color_matrix_filter","",null,[[],[["colorfilter",6],["option",4]]]],[0,"corner_path_effect","skia_safe","",null,null],[5,"new","skia_safe::corner_path_effect","",null,[[["scalar",6]],[["option",4],["patheffect",6]]]],[0,"dash_path_effect","skia_safe","",null,null],[5,"new","skia_safe::dash_path_effect","",null,[[["scalar",6]],[["option",4],["patheffect",6]]]],[0,"discrete_path_effect","skia_safe","",null,null],[5,"new","skia_safe::discrete_path_effect","",null,[[["scalar",6]],[["option",4],["patheffect",6]]]],[0,"gradient_shader","skia_safe","",null,null],[3,"Flags","skia_safe::gradient_shader","",null,null],[5,"linear","","",null,[[["tilemode",4]],[["option",4],["shader",6]]]],[5,"radial","","",null,[[["scalar",6],["tilemode",4]],[["option",4],["shader",6]]]],[5,"two_point_conical","","",null,[[["scalar",6],["tilemode",4]],[["option",4],["shader",6]]]],[5,"sweep","","",null,[[["tilemode",4]],[["option",4],["shader",6]]]],[4,"GradientShaderColors","","Type that represents either a slice of Color, or a slice â€¦",null,null],[13,"Colors","","",128,null],[13,"ColorsInSpace","","",128,null],[0,"high_contrast_filter","skia_safe","",null,null],[0,"high_contrast_config","skia_safe::high_contrast_filter","",null,null],[4,"InvertStyle","skia_safe::high_contrast_filter::high_contrast_config","",null,null],[13,"NoInvert","","",129,null],[13,"InvertBrightness","","",129,null],[13,"InvertLightness","","",129,null],[3,"HighContrastConfig","skia_safe::high_contrast_filter","",null,null],[12,"grayscale","","",130,null],[12,"invert_style","","",130,null],[12,"contrast","","",130,null],[5,"new","","",null,[[["highcontrastconfig",3]],[["colorfilter",6],["option",4]]]],[0,"high_contrast_config","skia_safe","",null,null],[4,"InvertStyle","skia_safe::high_contrast_config","",null,null],[13,"NoInvert","","",129,null],[13,"InvertBrightness","","",129,null],[13,"InvertLightness","","",129,null],[0,"image_filters","skia_safe","",null,null],[3,"CropRect","skia_safe::image_filters","",null,null],[5,"alpha_threshold","","",null,[[["region",6],["scalar",6]],[["imagefilter",6],["option",4]]]],[5,"arithmetic","","",null,[[["bool",15],["scalar",6]],[["imagefilter",6],["option",4]]]],[5,"blend","","",null,[[["blendmode",4]],[["imagefilter",6],["option",4]]]],[5,"blur","","",null,[[],[["imagefilter",6],["option",4]]]],[5,"color_filter","","",null,[[],[["imagefilter",6],["option",4]]]],[5,"compose","","",null,[[],[["imagefilter",6],["option",4]]]],[5,"displacement_map","","",null,[[["scalar",6]],[["imagefilter",6],["option",4]]]],[5,"drop_shadow","","",null,[[],[["imagefilter",6],["option",4]]]],[5,"drop_shadow_only","","",null,[[],[["imagefilter",6],["option",4]]]],[5,"image","","",null,[[],[["imagefilter",6],["option",4]]]],[5,"magnifier","","",null,[[["scalar",6]],[["imagefilter",6],["option",4]]]],[5,"matrix_convolution","","",null,[[["bool",15],["scalar",6],["tilemode",4]],[["imagefilter",6],["option",4]]]],[5,"matrix_transform","","",null,[[["matrix",3]],[["imagefilter",6],["option",4]]]],[5,"merge","","",null,[[],[["imagefilter",6],["option",4]]]],[5,"offset","","",null,[[],[["imagefilter",6],["option",4]]]],[5,"paint","","",null,[[["paint",6]],[["imagefilter",6],["option",4]]]],[5,"picture","","",null,[[],[["imagefilter",6],["option",4]]]],[4,"Dither","","",null,null],[13,"No","","",131,null],[13,"Yes","","",131,null],[5,"shader","","",null,[[],[["imagefilter",6],["option",4]]]],[5,"shader_with_dither","","",null,[[["dither",4]],[["imagefilter",6],["option",4]]]],[5,"tile","","",null,[[],[["imagefilter",6],["option",4]]]],[5,"dilate","","",null,[[],[["imagefilter",6],["option",4]]]],[5,"erode","","",null,[[],[["imagefilter",6],["option",4]]]],[5,"distant_lit_diffuse","","",null,[[["scalar",6]],[["imagefilter",6],["option",4]]]],[5,"point_lit_diffuse","","",null,[[["scalar",6]],[["imagefilter",6],["option",4]]]],[5,"spot_lit_diffuse","","",null,[[["scalar",6]],[["imagefilter",6],["option",4]]]],[5,"distant_lit_specular","","",null,[[["scalar",6]],[["imagefilter",6],["option",4]]]],[5,"point_lit_specular","","",null,[[["scalar",6]],[["imagefilter",6],["option",4]]]],[5,"spot_lit_specular","","",null,[[["scalar",6]],[["imagefilter",6],["option",4]]]],[3,"ArithmeticFPInputs","","",null,null],[12,"k","","",132,null],[12,"enforce_pm_color","","",132,null],[0,"luma_color_filter","skia_safe","",null,null],[5,"new","skia_safe::luma_color_filter","",null,[[],["colorfilter",6]]],[0,"merge_path_effect","skia_safe","",null,null],[5,"new","skia_safe::merge_path_effect","",null,[[["pathop",4]],["patheffect",6]]],[0,"matrix_path_effect","skia_safe","",null,null],[5,"new_translate","skia_safe::matrix_path_effect","",null,[[],[["option",4],["patheffect",6]]]],[5,"new","","",null,[[["matrix",3]],[["option",4],["patheffect",6]]]],[0,"stroke_path_effect","skia_safe","",null,null],[5,"new","skia_safe::stroke_path_effect","",null,[[["cap",4],["scalar",6],["join",4]],[["option",4],["patheffect",6]]]],[0,"overdraw_color_filter","skia_safe","",null,null],[17,"NUM_COLORS","skia_safe::overdraw_color_filter","",null,null],[5,"new","","",null,[[],["colorfilter",6]]],[0,"perlin_noise_shader","skia_safe","",null,null],[5,"fractal_noise","skia_safe::perlin_noise_shader","",null,[[["usize",15],["scalar",6]],[["option",4],["shader",6]]]],[5,"turbulence","","",null,[[["usize",15],["scalar",6]],[["option",4],["shader",6]]]],[0,"runtime_effect","skia_safe","",null,null],[0,"uniform","skia_safe::runtime_effect","",null,null],[4,"Type","skia_safe::runtime_effect::uniform","",null,null],[13,"Float","","",133,null],[13,"Float2","","",133,null],[13,"Float3","","",133,null],[13,"Float4","","",133,null],[13,"Float2x2","","",133,null],[13,"Float3x3","","",133,null],[13,"Float4x4","","",133,null],[3,"Flags","","",null,null],[6,"Uniform","skia_safe::runtime_effect","",null,null],[6,"Variable","","",null,null],[6,"Varying","","",null,null],[6,"RuntimeEffect","","",null,null],[3,"Options","","",null,null],[12,"inline_threshold","","",134,null],[5,"new","","",null,[[],[["runtimeeffect",6],["string",3],["result",4]]]],[5,"new_with_options","","",null,[[],[["runtimeeffect",6],["string",3],["result",4]]]],[0,"shader_mask_filter","skia_safe","",null,null],[5,"new","skia_safe::shader_mask_filter","",null,[[],["maskfilter",6]]],[0,"stroke_and_fill_path_effect","skia_safe","",null,null],[5,"new","skia_safe::stroke_and_fill_path_effect","",null,[[],["patheffect",6]]],[0,"table_color_filter","skia_safe","",null,null],[5,"from_table","skia_safe::table_color_filter","",null,[[],["colorfilter",6]]],[5,"from_argb","","",null,[[["option",4]],["colorfilter",6]]],[0,"trim_path_effect","skia_safe","",null,null],[4,"Mode","skia_safe::trim_path_effect","",null,null],[13,"Normal","","",135,null],[13,"Inverted","","",135,null],[5,"new","","",null,[[["scalar",6]],[["option",4],["patheffect",6]]]],[0,"shaper","skia_safe","",null,null],[0,"run_handler","skia_safe::shaper","",null,null],[8,"RunHandler","skia_safe::shaper::run_handler","",null,null],[10,"begin_line","","",136,[[]]],[10,"run_info","","",136,[[["runinfo",3]]]],[10,"commit_run_info","","",136,[[]]],[10,"run_buffer","","",136,[[["runinfo",3]],["buffer",3]]],[10,"commit_run_buffer","","",136,[[["runinfo",3]]]],[10,"commit_line","","",136,[[]]],[3,"RunInfo","","",null,null],[12,"font","","",137,null],[12,"bidi_level","","",137,null],[12,"advance","","",137,null],[12,"glyph_count","","",137,null],[12,"utf8_range","","",137,null],[3,"Buffer","","",null,null],[12,"glyphs","","",138,null],[12,"positions","","",138,null],[12,"offsets","","",138,null],[12,"clusters","","",138,null],[12,"point","","",138,null],[0,"icu","skia_safe::shaper","",null,null],[5,"init","skia_safe::shaper::icu","On Windows, this function writes the file <code>icudtl.dat</code> into â€¦",null,[[]]],[8,"RunHandler","skia_safe::shaper","",null,null],[10,"begin_line","","",136,[[]]],[10,"run_info","","",136,[[["runinfo",3]]]],[10,"commit_run_info","","",136,[[]]],[10,"run_buffer","","",136,[[["runinfo",3]],["buffer",3]]],[10,"commit_run_buffer","","",136,[[["runinfo",3]]]],[10,"commit_line","","",136,[[]]],[6,"Shaper","","",null,null],[3,"Feature","","",null,null],[12,"tag","","",139,null],[12,"value","","",139,null],[12,"start","","",139,null],[12,"end","","",139,null],[8,"RunIterator","","",null,null],[10,"consume","","",140,[[]]],[10,"end_of_current_run","","",140,[[],["usize",15]]],[10,"at_end","","",140,[[],["bool",15]]],[6,"FontRunIterator","","",null,null],[6,"BiDiRunIterator","","",null,null],[6,"ScriptRunIterator","","",null,null],[6,"LanguageRunIterator","","",null,null],[8,"AsRunHandler","","",null,null],[16,"RunHandler","","",141,null],[10,"as_run_handler","","",141,[[]]],[8,"AsNativeRunHandler","","A trait for accessing the native run handler instance â€¦",null,null],[10,"as_native_run_handler","","",142,[[],["skshaper_runhandler",3]]],[3,"TextBlobBuilderRunHandler","","",null,null],[0,"icu","skia_safe","",null,null],[5,"init","skia_safe::icu","On Windows, this function writes the file <code>icudtl.dat</code> into â€¦",null,[[]]],[0,"textlayout","skia_safe","",null,null],[4,"Affinity","skia_safe::textlayout","",null,null],[13,"Upstream","","",143,null],[13,"Downstream","","",143,null],[4,"RectHeightStyle","","",null,null],[13,"Tight","","",144,null],[13,"Max","","",144,null],[13,"IncludeLineSpacingMiddle","","",144,null],[13,"IncludeLineSpacingTop","","",144,null],[13,"IncludeLineSpacingBottom","","",144,null],[13,"Strut","","",144,null],[4,"RectWidthStyle","","",null,null],[13,"Tight","","",145,null],[13,"Max","","",145,null],[4,"TextAlign","","",null,null],[13,"Left","","",146,null],[13,"Right","","",146,null],[13,"Center","","",146,null],[13,"Justify","","",146,null],[13,"Start","","",146,null],[13,"End","","",146,null],[4,"TextDirection","","",null,null],[13,"RTL","","",147,null],[13,"LTR","","",147,null],[3,"PositionWithAffinity","","",null,null],[12,"position","","",148,null],[12,"affinity","","",148,null],[3,"TextBox","","",null,null],[12,"rect","","",149,null],[12,"direct","","",149,null],[17,"EMPTY_INDEX","","",null,null],[8,"RangeExtensions","","",null,null],[10,"width","","",150,[[],["usize",15]]],[10,"shift","","",150,[[["usize",15]]]],[10,"contains","","",150,[[],["bool",15]]],[10,"intersects","","",150,[[],["bool",15]]],[10,"intersection","","",150,[[]]],[10,"empty","","",150,[[],["bool",15]]],[17,"EMPTY_RANGE","","",null,null],[4,"TextBaseline","","",null,null],[13,"Alphabetic","","",151,null],[13,"Ideographic","","",151,null],[4,"TextHeightBehavior","","",null,null],[13,"All","","",152,null],[13,"DisableFirstAscent","","",152,null],[13,"DisableLastDescent","","",152,null],[13,"DisableAll","","",152,null],[4,"DrawOptions","","",null,null],[13,"Record","","",153,null],[13,"Replay","","",153,null],[13,"Direct","","",153,null],[6,"FontCollection","","",null,null],[3,"StyleMetrics","","",null,null],[12,"text_style","","",154,null],[12,"font_metrics","","",154,null],[3,"LineMetrics","","",null,null],[12,"start_index","","",155,null],[12,"end_index","","",155,null],[12,"end_excluding_whitespaces","","",155,null],[12,"end_including_newline","","",155,null],[12,"hard_break","","",155,null],[12,"ascent","","",155,null],[12,"descent","","",155,null],[12,"unscaled_ascent","","",155,null],[12,"height","","",155,null],[12,"width","","",155,null],[12,"left","","",155,null],[12,"baseline","","",155,null],[12,"line_number","","",155,null],[6,"Paragraph","","",null,null],[6,"TextBoxes","","",null,null],[6,"LineMetricsVector","","",null,null],[6,"ParagraphBuilder","","",null,null],[6,"ParagraphCache","","",null,null],[6,"StrutStyle","","",null,null],[6,"ParagraphStyle","","",null,null],[3,"TextShadow","","",null,null],[12,"color","","",156,null],[12,"offset","","",156,null],[12,"blur_radius","","",156,null],[3,"TextDecoration","","",null,null],[17,"ALL_TEXT_DECORATIONS","","",null,null],[4,"TextDecorationStyle","","",null,null],[13,"Solid","","",157,null],[13,"Double","","",157,null],[13,"Dotted","","",157,null],[13,"Dashed","","",157,null],[13,"Wavy","","",157,null],[4,"TextDecorationMode","","",null,null],[13,"Gaps","","",158,null],[13,"Through","","",158,null],[4,"StyleType","","",null,null],[13,"None","","",159,null],[13,"AllAttributes","","",159,null],[13,"Font","","",159,null],[13,"Foreground","","",159,null],[13,"Background","","",159,null],[13,"Shadow","","",159,null],[13,"Decorations","","",159,null],[13,"LetterSpacing","","",159,null],[13,"WordSpacing","","",159,null],[3,"Decoration","","",null,null],[12,"ty","","",160,null],[12,"mode","","",160,null],[12,"color","","",160,null],[12,"style","","",160,null],[12,"thickness_multiplier","","",160,null],[4,"PlaceholderAlignment","","",null,null],[13,"Baseline","","",161,null],[13,"AboveBaseline","","",161,null],[13,"BelowBaseline","","",161,null],[13,"Top","","",161,null],[13,"Bottom","","",161,null],[13,"Middle","","",161,null],[6,"FontFeature","","",null,null],[3,"PlaceholderStyle","","",null,null],[12,"width","","",162,null],[12,"height","","",162,null],[12,"alignment","","",162,null],[12,"baseline","","",162,null],[12,"baseline_offset","","",162,null],[6,"TextStyle","","",null,null],[6,"TextIndex","","",null,null],[6,"TextRange","","",null,null],[17,"EMPTY_TEXT","","",null,null],[3,"Block","","",null,null],[12,"range","","",163,null],[12,"style","","",163,null],[6,"BlockIndex","","",null,null],[6,"BlockRange","","",null,null],[17,"EMPTY_BLOCK","","",null,null],[17,"EMPTY_BLOCKS","","",null,null],[3,"Placeholder","","",null,null],[12,"range","","",164,null],[12,"style","","",164,null],[12,"text_style","","",164,null],[12,"blocks_before","","",164,null],[12,"text_before","","",164,null],[6,"TypefaceFontStyleSet","","",null,null],[6,"TypefaceFontProvider","","",null,null],[3,"FontFamilies","","Efficient reference type to a C++ vector of font family â€¦",null,null],[4,"CodecResult","skia_safe","",null,null],[13,"Success","","",0,null],[13,"IncompleteInput","","",0,null],[13,"ErrorInInput","","",0,null],[13,"InvalidConversion","","",0,null],[13,"InvalidScale","","",0,null],[13,"InvalidParameters","","",0,null],[13,"InvalidInput","","",0,null],[13,"CouldNotRewind","","",0,null],[13,"InternalError","","",0,null],[13,"Unimplemented","","",0,null],[6,"Codec","","",null,null],[4,"EncodedOrigin","","These values match the orientation â€¦",null,null],[13,"TopLeft","","Default",5,null],[13,"TopRight","","Reflected across y-axis",5,null],[13,"BottomRight","","Rotated 180",5,null],[13,"BottomLeft","","Reflected across x-axis",5,null],[13,"LeftTop","","Reflected across x-axis, Rotated 90 CCW",5,null],[13,"RightTop","","Rotated 90 CW",5,null],[13,"RightBottom","","Reflected across x-axis, Rotated 90 CW",5,null],[13,"LeftBottom","","Rotated 90 CCW",5,null],[3,"Borrows","","",null,null],[8,"ConditionallySend","","",null,null],[10,"can_send","","Returns <code>true</code> if the handle can be sent to another thread.",165,[[],["bool",15]]],[10,"wrap_send","","Wrap the handle in a type that can be sent to another â€¦",165,[[],[["result",4],["sendable",3]]]],[3,"Handle","","Wraps a native type that can be represented and used in â€¦",null,null],[3,"RCHandle","","A wrapper type represented by a reference counted pointer â€¦",null,null],[3,"RefHandle","","A wrapper type that represents a native type with a â€¦",null,null],[3,"Sendable","","",null,null],[6,"BBoxHierarchy","","",null,null],[6,"BBHFactory","","",null,null],[6,"Bitmap","","[Bitmap] describes a two-dimensional raster pixel array. [â€¦",null,null],[4,"BlendMode","","",null,null],[13,"Clear","","",166,null],[13,"Src","","",166,null],[13,"Dst","","",166,null],[13,"SrcOver","","",166,null],[13,"DstOver","","",166,null],[13,"SrcIn","","",166,null],[13,"DstIn","","",166,null],[13,"SrcOut","","",166,null],[13,"DstOut","","",166,null],[13,"SrcATop","","",166,null],[13,"DstATop","","",166,null],[13,"Xor","","",166,null],[13,"Plus","","",166,null],[13,"Modulate","","",166,null],[13,"Screen","","",166,null],[13,"Overlay","","",166,null],[13,"Darken","","",166,null],[13,"Lighten","","",166,null],[13,"ColorDodge","","",166,null],[13,"ColorBurn","","",166,null],[13,"HardLight","","",166,null],[13,"SoftLight","","",166,null],[13,"Difference","","",166,null],[13,"Exclusion","","",166,null],[13,"Multiply","","",166,null],[13,"Hue","","",166,null],[13,"Saturation","","",166,null],[13,"Color","","",166,null],[13,"Luminosity","","",166,null],[4,"BlendModeCoeff","","",null,null],[13,"Zero","","",167,null],[13,"One","","",167,null],[13,"SC","","",167,null],[13,"ISC","","",167,null],[13,"DC","","",167,null],[13,"IDC","","",167,null],[13,"SA","","",167,null],[13,"ISA","","",167,null],[13,"DA","","",167,null],[13,"IDA","","",167,null],[13,"CoeffCount","","",167,null],[4,"BlurStyle","","",null,null],[13,"Normal","","",168,null],[13,"Solid","","",168,null],[13,"Outer","","",168,null],[13,"Inner","","",168,null],[4,"AutoCanvasRestore","","",null,null],[3,"Canvas","","The canvas type that is returned when it is owned by â€¦",null,null],[3,"OwnedCanvas","","A type representing a canvas that is owned and dropped â€¦",null,null],[4,"ClipOp","","",null,null],[13,"Difference","","",169,null],[13,"Intersect","","",169,null],[13,"ExtraEnumNeedInternallyPleaseIgnoreWillGoAway2","","",169,null],[13,"ExtraEnumNeedInternallyPleaseIgnoreWillGoAway3","","",169,null],[13,"ExtraEnumNeedInternallyPleaseIgnoreWillGoAway4","","",169,null],[13,"ExtraEnumNeedInternallyPleaseIgnoreWillGoAway5","","",169,null],[3,"Color","","",null,null],[3,"RGB","","",null,null],[12,"r","","",170,null],[12,"g","","",170,null],[12,"b","","",170,null],[3,"HSV","","",null,null],[12,"h","","",171,null],[12,"s","","",171,null],[12,"v","","",171,null],[6,"PMColor","","",null,null],[5,"pre_multiply_argb","","",null,[[["u8cpu",6]],["pmcolor",6]]],[5,"pre_multiply_color","","",null,[[],["pmcolor",6]]],[4,"ColorChannel","","",null,null],[13,"R","","",172,null],[13,"G","","",172,null],[13,"B","","",172,null],[13,"A","","",172,null],[3,"ColorChannelFlag","","",null,null],[3,"Color4f","","",null,null],[12,"r","","",173,null],[12,"g","","",173,null],[12,"b","","",173,null],[12,"a","","",173,null],[6,"ColorFilter","","",null,null],[3,"ColorSpacePrimaries","","",null,null],[3,"ColorSpaceTransferFn","","",null,null],[12,"g","","",174,null],[12,"a","","",174,null],[12,"b","","",174,null],[12,"c","","",174,null],[12,"d","","",174,null],[12,"e","","",174,null],[12,"f","","",174,null],[6,"ColorSpace","","",null,null],[3,"XYZD50Hash","","",null,null],[12,"0","","",175,null],[6,"ContourMeasure","","",null,null],[6,"ContourMeasureIter","","",null,null],[4,"CoverageMode","","",null,null],[13,"Union","","",176,null],[13,"Intersect","","",176,null],[13,"Difference","","",176,null],[13,"ReverseDifference","","",176,null],[13,"Xor","","",176,null],[3,"CubicMap","","",null,null],[6,"Data","","",null,null],[6,"DataTable","","",null,null],[3,"Iter","","",null,null],[6,"DeferredDisplayList","","",null,null],[6,"DeferredDisplayListRecorder","","",null,null],[3,"Document","","",null,null],[6,"Drawable","","",null,null],[4,"EncodedImageFormat","","",null,null],[13,"BMP","","",177,null],[13,"GIF","","",177,null],[13,"ICO","","",177,null],[13,"JPEG","","",177,null],[13,"PNG","","",177,null],[13,"WBMP","","",177,null],[13,"WEBP","","",177,null],[13,"PKM","","",177,null],[13,"KTX","","",177,null],[13,"ASTC","","",177,null],[13,"DNG","","",177,null],[13,"HEIF","","",177,null],[13,"AVIF","","",177,null],[4,"FilterQuality","","",null,null],[13,"None","","",178,null],[13,"Low","","",178,null],[13,"Medium","","",178,null],[13,"High","","",178,null],[8,"Flattenable","","",null,null],[10,"type_name","","",179,[[],["cstr",3]]],[10,"serialize","","",179,[[],["data",6]]],[10,"deserialize","","",179,[[],["option",4]]],[8,"NativeFlattenable","","",null,null],[10,"native_flattenable","","",180,[[],["skflattenable",3]]],[10,"native_deserialize","","",180,[[]]],[6,"Font","","",null,null],[3,"FontArguments","","",null,null],[3,"FontMetrics","","",null,null],[12,"top","","",71,null],[12,"ascent","","",71,null],[12,"descent","","",71,null],[12,"bottom","","",71,null],[12,"leading","","",71,null],[12,"avg_char_width","","",71,null],[12,"max_char_width","","",71,null],[12,"x_min","","",71,null],[12,"x_max","","",71,null],[12,"x_height","","",71,null],[12,"cap_height","","",71,null],[6,"FontStyleSet","","",null,null],[6,"FontMgr","","",null,null],[3,"FontStyle","","",null,null],[4,"TextEncoding","","",null,null],[13,"UTF8","","",181,null],[13,"UTF16","","",181,null],[13,"UTF32","","",181,null],[13,"GlyphId","","",181,null],[4,"FontHinting","","",null,null],[13,"None","","",182,null],[13,"Slight","","",182,null],[13,"Normal","","",182,null],[13,"Full","","",182,null],[6,"Image","","",null,null],[6,"ImageFilter","","",null,null],[6,"ImageGenerator","","",null,null],[4,"AlphaType","","",null,null],[13,"Unknown","","",183,null],[13,"Opaque","","",183,null],[13,"Premul","","",183,null],[13,"Unpremul","","",183,null],[4,"ColorType","","",null,null],[13,"Unknown","","",184,null],[13,"Alpha8","","",184,null],[13,"RGB565","","",184,null],[13,"ARGB4444","","",184,null],[13,"RGBA8888","","",184,null],[13,"RGB888x","","",184,null],[13,"BGRA8888","","",184,null],[13,"RGBA1010102","","",184,null],[13,"BGRA1010102","","",184,null],[13,"RGB101010x","","",184,null],[13,"BGR101010x","","",184,null],[13,"Gray8","","",184,null],[13,"RGBAF16Norm","","",184,null],[13,"RGBAF16","","",184,null],[13,"RGBAF32","","",184,null],[13,"R8G8UNorm","","",184,null],[13,"A16Float","","",184,null],[13,"R16G16Float","","",184,null],[13,"A16UNorm","","",184,null],[13,"R16G16UNorm","","",184,null],[13,"R16G16B16A16UNorm","","",184,null],[4,"YUVColorSpace","","",null,null],[13,"JPEG_Full","","",185,null],[13,"Rec601_Limited","","",185,null],[13,"Rec709_Full","","",185,null],[13,"Rec709_Limited","","",185,null],[13,"BT2020_8bit_Full","","",185,null],[13,"BT2020_8bit_Limited","","",185,null],[13,"BT2020_10bit_Full","","",185,null],[13,"BT2020_10bit_Limited","","",185,null],[13,"BT2020_12bit_Full","","",185,null],[13,"BT2020_12bit_Limited","","",185,null],[13,"Identity","","",185,null],[6,"ColorInfo","","",null,null],[6,"ImageInfo","","",null,null],[3,"V2","","",null,null],[12,"x","","",186,null],[12,"y","","",186,null],[3,"V3","","",null,null],[12,"x","","",187,null],[12,"y","","",187,null],[12,"z","","",187,null],[3,"V4","","",null,null],[12,"x","","",188,null],[12,"y","","",188,null],[12,"z","","",188,null],[12,"w","","",188,null],[3,"M44","","",null,null],[6,"MaskFilter","","",null,null],[3,"Matrix","","",null,null],[3,"Matrix44","","",null,null],[3,"Vector4","","",null,null],[17,"MILESTONE","","",null,null],[6,"Paint","","",null,null],[4,"PaintCap","","",null,null],[13,"Butt","","",87,null],[13,"Round","","",87,null],[13,"Square","","",87,null],[4,"PaintJoin","","",null,null],[13,"Miter","","",88,null],[13,"Round","","",88,null],[13,"Bevel","","",88,null],[4,"PaintStyle","","",null,null],[13,"Fill","","",86,null],[13,"Stroke","","",86,null],[13,"StrokeAndFill","","",86,null],[6,"Path","","",null,null],[6,"PathBuilder","","",null,null],[6,"PathEffect","","",null,null],[6,"PathMeasure","","",null,null],[4,"PathFillType","","",null,null],[13,"Winding","","",90,null],[13,"EvenOdd","","",90,null],[13,"InverseWinding","","",90,null],[13,"InverseEvenOdd","","",90,null],[4,"PathDirection","","",null,null],[13,"CW","","",89,null],[13,"CCW","","",89,null],[3,"PathSegmentMask","","",null,null],[4,"PathVerb","","",null,null],[13,"Move","","",96,null],[13,"Line","","",96,null],[13,"Quad","","",96,null],[13,"Conic","","",96,null],[13,"Cubic","","",96,null],[13,"Close","","",96,null],[6,"Picture","","",null,null],[6,"PictureRecorder","","",null,null],[6,"PixelRef","","",null,null],[6,"Pixmap","","",null,null],[8,"Pixel","","Implement this trait to use a pixel type in [â€¦",null,null],[10,"matches_color_type","","<code>true</code> if the type matches the color type\'s format.",189,[[["colortype",4]],["bool",15]]],[3,"IVector","","",null,null],[12,"x","","",190,null],[12,"y","","",190,null],[3,"IPoint","","",null,null],[12,"x","","",190,null],[12,"y","","",190,null],[6,"Vector","","",null,null],[3,"Point","","",null,null],[12,"x","","",191,null],[12,"y","","",191,null],[6,"Vector3","","",null,null],[6,"Color3f","","",null,null],[3,"Point3","","",null,null],[12,"x","","",192,null],[12,"y","","",192,null],[12,"z","","",192,null],[3,"IRect","","",null,null],[12,"left","","",193,null],[12,"top","","",193,null],[12,"right","","",193,null],[12,"bottom","","",193,null],[17,"EMPTY_IRECT","","",null,null],[3,"Rect","","",null,null],[12,"left","","",194,null],[12,"top","","",194,null],[12,"right","","",194,null],[12,"bottom","","",194,null],[8,"RoundOut","","",null,null],[10,"round_out","","",195,[[]]],[6,"Region","","",null,null],[3,"RRect","","",null,null],[3,"RSXform","","",null,null],[12,"scos","","",196,null],[12,"ssin","","",196,null],[12,"tx","","",196,null],[12,"ty","","",196,null],[3,"CubicResampler","","Specify <code>b</code> and <code>c</code> (each between 0...1) to create a shader â€¦",null,null],[12,"b","","",74,null],[12,"c","","",74,null],[4,"FilterMode","","",null,null],[13,"Nearest","","",102,null],[13,"Linear","","",102,null],[3,"FilterOptions","","",null,null],[12,"sampling","","",104,null],[12,"mipmap","","",104,null],[4,"MipmapMode","","",null,null],[13,"None","","",103,null],[13,"Nearest","","",103,null],[13,"Linear","","",103,null],[6,"SamplingMode","","",null,null],[3,"SamplingOptions","","",null,null],[12,"use_cubic","","",106,null],[12,"cubic","","",106,null],[12,"filter","","",106,null],[12,"mipmap","","",106,null],[6,"scalar","","",null,null],[8,"Scalar","","",null,null],[18,"ZERO","","",197,null],[18,"NEARLY_ZERO","","",197,null],[18,"ONE","","",197,null],[18,"HALF","","",197,null],[10,"nearly_equal","","",197,[[["scalar",6]],["bool",15]]],[10,"nearly_zero","","",197,[[],["bool",15]]],[8,"Scalars","","",null,null],[10,"are_finite","","",198,[[],["bool",15]]],[5,"radians_to_degrees","","",null,[[["scalar",6]],["scalar",6]]],[6,"Shader","","",null,null],[3,"ISize","","",null,null],[12,"width","","",199,null],[12,"height","","",199,null],[3,"Size","","",null,null],[12,"width","","",200,null],[12,"height","","",200,null],[6,"StrokeRec","","",null,null],[6,"Surface","","",null,null],[6,"SurfaceCharacterization","","",null,null],[4,"PixelGeometry","","",null,null],[13,"Unknown","","",201,null],[13,"RGBH","","",201,null],[13,"BGRH","","",201,null],[13,"RGBV","","",201,null],[13,"BGRV","","",201,null],[3,"SurfacePropsFlags","","",null,null],[3,"SurfaceProps","","",null,null],[5,"test_surface_props_layout","","",null,[[]]],[5,"swap_rb","","",null,[[]]],[5,"swap_rb_inplace","","",null,[[]]],[6,"TextBlob","","",null,null],[6,"TextBlobBuilder","","",null,null],[6,"TextBlobIter","","",null,null],[3,"TextBlobRun","","",null,null],[12,"glyph_indices","","",202,null],[4,"TileMode","","",null,null],[13,"Clamp","","",203,null],[13,"Repeat","","",203,null],[13,"Mirror","","",203,null],[13,"Decal","","",203,null],[3,"DateTime","","",null,null],[12,"time_zone_minutes","","",204,null],[12,"year","","",204,null],[12,"month","","",204,null],[12,"day_of_week","","",204,null],[12,"day","","",204,null],[12,"hour","","",204,null],[12,"minute","","",204,null],[12,"second","","",204,null],[6,"Typeface","","",null,null],[3,"FourByteTag","","",null,null],[6,"GlyphId","","",null,null],[6,"Unichar","","",null,null],[3,"Budgeted","","",null,null],[6,"Vertices","","",null,null],[6,"YUVAInfo","","Specifies the structure of planes for a YUV image with â€¦",null,null],[6,"YUVAPixmapInfo","","[YUVAInfo] combined with per-plane [ColorType]s and row â€¦",null,null],[6,"YUVAPixmaps","","Helper to store [Pixmap] planes as described by a [â€¦",null,null],[8,"Contains","","",null,null],[10,"contains","","",205,[[],["bool",15]]],[8,"QuickReject","","",null,null],[10,"quick_reject","","",206,[[],["bool",15]]],[6,"ColorMatrix","","",null,null],[3,"HighContrastConfig","","",null,null],[12,"grayscale","","",130,null],[12,"invert_style","","",130,null],[12,"contrast","","",130,null],[6,"RuntimeEffect","","",null,null],[6,"Shaper","","",null,null],[4,"PathOp","","",null,null],[13,"Difference","","",207,null],[13,"Intersect","","",207,null],[13,"Union","","",207,null],[13,"XOR","","",207,null],[13,"ReverseDifference","","",207,null],[5,"op","","",null,[[["path",6],["pathop",4]],[["option",4],["path",6]]]],[5,"simplify","","",null,[[["path",6]],[["option",4],["path",6]]]],[5,"tight_bounds","","",null,[[["path",6]],[["option",4],["rect",3]]]],[5,"as_winding","","",null,[[["path",6]],[["option",4],["path",6]]]],[6,"OpBuilder","","",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","skia_safe::codec","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"wrap","","",5,[[]]],[11,"unwrap","","",5,[[]]],[11,"inner","","",5,[[]]],[11,"inner_mut","","",5,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","skia_safe","",166,[[]]],[11,"into","","",166,[[]]],[11,"to_owned","","",166,[[]]],[11,"clone_into","","",166,[[]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"from","","",167,[[]]],[11,"into","","",167,[[]]],[11,"to_owned","","",167,[[]]],[11,"clone_into","","",167,[[]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"from","","",168,[[]]],[11,"into","","",168,[[]]],[11,"to_owned","","",168,[[]]],[11,"clone_into","","",168,[[]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"from","skia_safe::canvas::lattice","",62,[[]]],[11,"into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","skia_safe::canvas","",208,[[]]],[11,"into","","",208,[[]]],[11,"to_owned","","",208,[[]]],[11,"clone_into","","",208,[[]]],[11,"borrow","","",208,[[]]],[11,"borrow_mut","","",208,[[]]],[11,"try_from","","",208,[[],["result",4]]],[11,"try_into","","",208,[[],["result",4]]],[11,"type_id","","",208,[[],["typeid",3]]],[11,"wrap","","",209,[[]]],[11,"unwrap","","",209,[[]]],[11,"inner","","",209,[[]]],[11,"inner_mut","","",209,[[]]],[11,"from","","",209,[[]]],[11,"into","","",209,[[]]],[11,"borrow","","",209,[[]]],[11,"borrow_mut","","",209,[[]]],[11,"try_from","","",209,[[],["result",4]]],[11,"try_into","","",209,[[],["result",4]]],[11,"type_id","","",209,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",210,[[]]],[11,"into","","",210,[[]]],[11,"borrow","","",210,[[]]],[11,"borrow_mut","","",210,[[]]],[11,"try_from","","",210,[[],["result",4]]],[11,"try_into","","",210,[[],["result",4]]],[11,"type_id","","",210,[[],["typeid",3]]],[11,"from","","",211,[[]]],[11,"into","","",211,[[]]],[11,"borrow","","",211,[[]]],[11,"borrow_mut","","",211,[[]]],[11,"try_from","","",211,[[],["result",4]]],[11,"try_into","","",211,[[],["result",4]]],[11,"type_id","","",211,[[],["typeid",3]]],[11,"from","","",212,[[]]],[11,"into","","",212,[[]]],[11,"borrow","","",212,[[]]],[11,"borrow_mut","","",212,[[]]],[11,"try_from","","",212,[[],["result",4]]],[11,"try_into","","",212,[[],["result",4]]],[11,"type_id","","",212,[[],["typeid",3]]],[11,"from","","",213,[[]]],[11,"into","","",213,[[]]],[11,"borrow","","",213,[[]]],[11,"borrow_mut","","",213,[[]]],[11,"try_from","","",213,[[],["result",4]]],[11,"try_into","","",213,[[],["result",4]]],[11,"type_id","","",213,[[],["typeid",3]]],[11,"from","skia_safe","",169,[[]]],[11,"into","","",169,[[]]],[11,"to_owned","","",169,[[]]],[11,"clone_into","","",169,[[]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"try_into","","",169,[[],["result",4]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"wrap","","",214,[[]]],[11,"unwrap","","",214,[[]]],[11,"inner","","",214,[[]]],[11,"inner_mut","","",214,[[]]],[11,"from","","",214,[[]]],[11,"into","","",214,[[]]],[11,"to_owned","","",214,[[]]],[11,"clone_into","","",214,[[]]],[11,"borrow","","",214,[[]]],[11,"borrow_mut","","",214,[[]]],[11,"try_from","","",214,[[],["result",4]]],[11,"try_into","","",214,[[],["result",4]]],[11,"type_id","","",214,[[],["typeid",3]]],[11,"from","","",170,[[]]],[11,"into","","",170,[[]]],[11,"to_owned","","",170,[[]]],[11,"clone_into","","",170,[[]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"try_into","","",170,[[],["result",4]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"from","","",171,[[]]],[11,"into","","",171,[[]]],[11,"to_owned","","",171,[[]]],[11,"clone_into","","",171,[[]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"try_into","","",171,[[],["result",4]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"from","","",172,[[]]],[11,"into","","",172,[[]]],[11,"to_owned","","",172,[[]]],[11,"clone_into","","",172,[[]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"try_into","","",172,[[],["result",4]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"from","","",215,[[]]],[11,"into","","",215,[[]]],[11,"to_owned","","",215,[[]]],[11,"clone_into","","",215,[[]]],[11,"borrow","","",215,[[]]],[11,"borrow_mut","","",215,[[]]],[11,"try_from","","",215,[[],["result",4]]],[11,"try_into","","",215,[[],["result",4]]],[11,"type_id","","",215,[[],["typeid",3]]],[11,"wrap","","",173,[[]]],[11,"unwrap","","",173,[[]]],[11,"inner","","",173,[[]]],[11,"inner_mut","","",173,[[]]],[11,"from","","",173,[[]]],[11,"into","","",173,[[]]],[11,"to_owned","","",173,[[]]],[11,"clone_into","","",173,[[]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"from","skia_safe::color_filter","",216,[[]]],[11,"into","","",216,[[]]],[11,"to_owned","","",216,[[]]],[11,"clone_into","","",216,[[]]],[11,"borrow","","",216,[[]]],[11,"borrow_mut","","",216,[[]]],[11,"try_from","","",216,[[],["result",4]]],[11,"try_into","","",216,[[],["result",4]]],[11,"type_id","","",216,[[],["typeid",3]]],[11,"wrap","skia_safe","",217,[[]]],[11,"unwrap","","",217,[[]]],[11,"inner","","",217,[[]]],[11,"inner_mut","","",217,[[]]],[11,"from","","",217,[[]]],[11,"into","","",217,[[]]],[11,"to_owned","","",217,[[]]],[11,"clone_into","","",217,[[]]],[11,"borrow","","",217,[[]]],[11,"borrow_mut","","",217,[[]]],[11,"try_from","","",217,[[],["result",4]]],[11,"try_into","","",217,[[],["result",4]]],[11,"type_id","","",217,[[],["typeid",3]]],[11,"from","","",174,[[]]],[11,"into","","",174,[[]]],[11,"to_owned","","",174,[[]]],[11,"clone_into","","",174,[[]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"try_into","","",174,[[],["result",4]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"from","","",175,[[]]],[11,"into","","",175,[[]]],[11,"to_owned","","",175,[[]]],[11,"clone_into","","",175,[[]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"try_into","","",175,[[],["result",4]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"from","skia_safe::contour_measure","",218,[[]]],[11,"into","","",218,[[]]],[11,"to_owned","","",218,[[]]],[11,"clone_into","","",218,[[]]],[11,"borrow","","",218,[[]]],[11,"borrow_mut","","",218,[[]]],[11,"try_from","","",218,[[],["result",4]]],[11,"try_into","","",218,[[],["result",4]]],[11,"type_id","","",218,[[],["typeid",3]]],[11,"from","skia_safe","",176,[[]]],[11,"into","","",176,[[]]],[11,"to_owned","","",176,[[]]],[11,"clone_into","","",176,[[]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"try_into","","",176,[[],["result",4]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"wrap","","",219,[[]]],[11,"unwrap","","",219,[[]]],[11,"inner","","",219,[[]]],[11,"inner_mut","","",219,[[]]],[11,"from","","",219,[[]]],[11,"into","","",219,[[]]],[11,"to_owned","","",219,[[]]],[11,"clone_into","","",219,[[]]],[11,"borrow","","",219,[[]]],[11,"borrow_mut","","",219,[[]]],[11,"try_from","","",219,[[],["result",4]]],[11,"try_into","","",219,[[],["result",4]]],[11,"type_id","","",219,[[],["typeid",3]]],[11,"from","","",220,[[]]],[11,"into","","",220,[[]]],[11,"into_iter","","",220,[[]]],[11,"borrow","","",220,[[]]],[11,"borrow_mut","","",220,[[]]],[11,"try_from","","",220,[[],["result",4]]],[11,"try_into","","",220,[[],["result",4]]],[11,"type_id","","",220,[[],["typeid",3]]],[11,"from","skia_safe::document::state","",221,[[]]],[11,"into","","",221,[[]]],[11,"borrow","","",221,[[]]],[11,"borrow_mut","","",221,[[]]],[11,"try_from","","",221,[[],["result",4]]],[11,"try_into","","",221,[[],["result",4]]],[11,"type_id","","",221,[[],["typeid",3]]],[11,"from","","",222,[[]]],[11,"into","","",222,[[]]],[11,"borrow","","",222,[[]]],[11,"borrow_mut","","",222,[[]]],[11,"try_from","","",222,[[],["result",4]]],[11,"try_into","","",222,[[],["result",4]]],[11,"type_id","","",222,[[],["typeid",3]]],[11,"from","skia_safe::document","",223,[[]]],[11,"into","","",223,[[]]],[11,"borrow","","",223,[[]]],[11,"borrow_mut","","",223,[[]]],[11,"try_from","","",223,[[],["result",4]]],[11,"try_into","","",223,[[],["result",4]]],[11,"type_id","","",223,[[],["typeid",3]]],[11,"from","skia_safe","",177,[[]]],[11,"into","","",177,[[]]],[11,"to_owned","","",177,[[]]],[11,"clone_into","","",177,[[]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"try_into","","",177,[[],["result",4]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"from","","",178,[[]]],[11,"into","","",178,[[]]],[11,"to_owned","","",178,[[]]],[11,"clone_into","","",178,[[]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"try_into","","",178,[[],["result",4]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"from","skia_safe::font","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"wrap","skia_safe::font_arguments::variation_position","",69,[[]]],[11,"unwrap","","",69,[[]]],[11,"inner","","",69,[[]]],[11,"inner_mut","","",69,[[]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","skia_safe::font_arguments","",70,[[]]],[11,"into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"wrap","","",224,[[]]],[11,"unwrap","","",224,[[]]],[11,"inner","","",224,[[]]],[11,"inner_mut","","",224,[[]]],[11,"from","","",224,[[]]],[11,"into","","",224,[[]]],[11,"borrow","","",224,[[]]],[11,"borrow_mut","","",224,[[]]],[11,"try_from","","",224,[[],["result",4]]],[11,"try_into","","",224,[[],["result",4]]],[11,"type_id","","",224,[[],["typeid",3]]],[11,"from","skia_safe::font_metrics","",225,[[]]],[11,"into","","",225,[[]]],[11,"to_owned","","",225,[[]]],[11,"clone_into","","",225,[[]]],[11,"borrow","","",225,[[]]],[11,"borrow_mut","","",225,[[]]],[11,"try_from","","",225,[[],["result",4]]],[11,"try_into","","",225,[[],["result",4]]],[11,"type_id","","",225,[[],["typeid",3]]],[11,"wrap","","",71,[[]]],[11,"unwrap","","",71,[[]]],[11,"inner","","",71,[[]]],[11,"inner_mut","","",71,[[]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"wrap","skia_safe::font_parameters::variation","",72,[[]]],[11,"unwrap","","",72,[[]]],[11,"inner","","",72,[[]]],[11,"inner_mut","","",72,[[]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"wrap","skia_safe::font_style","",226,[[]]],[11,"unwrap","","",226,[[]]],[11,"inner","","",226,[[]]],[11,"inner_mut","","",226,[[]]],[11,"from","","",226,[[]]],[11,"into","","",226,[[]]],[11,"to_owned","","",226,[[]]],[11,"clone_into","","",226,[[]]],[11,"borrow","","",226,[[]]],[11,"borrow_mut","","",226,[[]]],[11,"try_from","","",226,[[],["result",4]]],[11,"try_into","","",226,[[],["result",4]]],[11,"type_id","","",226,[[],["typeid",3]]],[11,"wrap","","",227,[[]]],[11,"unwrap","","",227,[[]]],[11,"inner","","",227,[[]]],[11,"inner_mut","","",227,[[]]],[11,"from","","",227,[[]]],[11,"into","","",227,[[]]],[11,"to_owned","","",227,[[]]],[11,"clone_into","","",227,[[]]],[11,"borrow","","",227,[[]]],[11,"borrow_mut","","",227,[[]]],[11,"try_from","","",227,[[],["result",4]]],[11,"try_into","","",227,[[],["result",4]]],[11,"type_id","","",227,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"wrap","","",228,[[]]],[11,"unwrap","","",228,[[]]],[11,"inner","","",228,[[]]],[11,"inner_mut","","",228,[[]]],[11,"from","","",228,[[]]],[11,"into","","",228,[[]]],[11,"to_owned","","",228,[[]]],[11,"clone_into","","",228,[[]]],[11,"borrow","","",228,[[]]],[11,"borrow_mut","","",228,[[]]],[11,"try_from","","",228,[[],["result",4]]],[11,"try_into","","",228,[[],["result",4]]],[11,"type_id","","",228,[[],["typeid",3]]],[11,"wrap","skia_safe","",181,[[]]],[11,"unwrap","","",181,[[]]],[11,"inner","","",181,[[]]],[11,"inner_mut","","",181,[[]]],[11,"from","","",181,[[]]],[11,"into","","",181,[[]]],[11,"to_owned","","",181,[[]]],[11,"clone_into","","",181,[[]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"try_into","","",181,[[],["result",4]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"from","","",182,[[]]],[11,"into","","",182,[[]]],[11,"to_owned","","",182,[[]]],[11,"clone_into","","",182,[[]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"try_into","","",182,[[],["result",4]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"from","skia_safe::image","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","skia_safe::image_filter","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","skia_safe","",183,[[]]],[11,"into","","",183,[[]]],[11,"to_owned","","",183,[[]]],[11,"clone_into","","",183,[[]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"try_into","","",183,[[],["result",4]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"wrap","","",184,[[]]],[11,"unwrap","","",184,[[]]],[11,"inner","","",184,[[]]],[11,"inner_mut","","",184,[[]]],[11,"from","","",184,[[]]],[11,"into","","",184,[[]]],[11,"to_owned","","",184,[[]]],[11,"clone_into","","",184,[[]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"try_into","","",184,[[],["result",4]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"from","","",185,[[]]],[11,"into","","",185,[[]]],[11,"to_owned","","",185,[[]]],[11,"clone_into","","",185,[[]]],[11,"borrow","","",185,[[]]],[11,"borrow_mut","","",185,[[]]],[11,"try_from","","",185,[[],["result",4]]],[11,"try_into","","",185,[[],["result",4]]],[11,"type_id","","",185,[[],["typeid",3]]],[11,"wrap","","",186,[[]]],[11,"unwrap","","",186,[[]]],[11,"inner","","",186,[[]]],[11,"inner_mut","","",186,[[]]],[11,"from","","",186,[[]]],[11,"into","","",186,[[]]],[11,"to_owned","","",186,[[]]],[11,"clone_into","","",186,[[]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"try_into","","",186,[[],["result",4]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"wrap","","",187,[[]]],[11,"unwrap","","",187,[[]]],[11,"inner","","",187,[[]]],[11,"inner_mut","","",187,[[]]],[11,"from","","",187,[[]]],[11,"into","","",187,[[]]],[11,"to_owned","","",187,[[]]],[11,"clone_into","","",187,[[]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"try_into","","",187,[[],["result",4]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"wrap","","",188,[[]]],[11,"unwrap","","",188,[[]]],[11,"inner","","",188,[[]]],[11,"inner_mut","","",188,[[]]],[11,"from","","",188,[[]]],[11,"into","","",188,[[]]],[11,"to_owned","","",188,[[]]],[11,"clone_into","","",188,[[]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"try_into","","",188,[[],["result",4]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"wrap","","",229,[[]]],[11,"unwrap","","",229,[[]]],[11,"inner","","",229,[[]]],[11,"inner_mut","","",229,[[]]],[11,"from","","",229,[[]]],[11,"into","","",229,[[]]],[11,"to_owned","","",229,[[]]],[11,"clone_into","","",229,[[]]],[11,"borrow","","",229,[[]]],[11,"borrow_mut","","",229,[[]]],[11,"try_from","","",229,[[],["result",4]]],[11,"try_into","","",229,[[],["result",4]]],[11,"type_id","","",229,[[],["typeid",3]]],[11,"from","skia_safe::matrix","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","","",230,[[]]],[11,"into","","",230,[[]]],[11,"to_owned","","",230,[[]]],[11,"clone_into","","",230,[[]]],[11,"borrow","","",230,[[]]],[11,"borrow_mut","","",230,[[]]],[11,"try_from","","",230,[[],["result",4]]],[11,"try_into","","",230,[[],["result",4]]],[11,"type_id","","",230,[[],["typeid",3]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"wrap","","",231,[[]]],[11,"unwrap","","",231,[[]]],[11,"inner","","",231,[[]]],[11,"inner_mut","","",231,[[]]],[11,"from","","",231,[[]]],[11,"into","","",231,[[]]],[11,"to_owned","","",231,[[]]],[11,"clone_into","","",231,[[]]],[11,"borrow","","",231,[[]]],[11,"borrow_mut","","",231,[[]]],[11,"try_from","","",231,[[],["result",4]]],[11,"try_into","","",231,[[],["result",4]]],[11,"type_id","","",231,[[],["typeid",3]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"wrap","skia_safe::matrix44","",232,[[]]],[11,"unwrap","","",232,[[]]],[11,"inner","","",232,[[]]],[11,"inner_mut","","",232,[[]]],[11,"from","","",232,[[]]],[11,"into","","",232,[[]]],[11,"to_owned","","",232,[[]]],[11,"clone_into","","",232,[[]]],[11,"borrow","","",232,[[]]],[11,"borrow_mut","","",232,[[]]],[11,"try_from","","",232,[[],["result",4]]],[11,"try_into","","",232,[[],["result",4]]],[11,"type_id","","",232,[[],["typeid",3]]],[11,"from","","",233,[[]]],[11,"into","","",233,[[]]],[11,"to_owned","","",233,[[]]],[11,"clone_into","","",233,[[]]],[11,"borrow","","",233,[[]]],[11,"borrow_mut","","",233,[[]]],[11,"try_from","","",233,[[],["result",4]]],[11,"try_into","","",233,[[],["result",4]]],[11,"type_id","","",233,[[],["typeid",3]]],[11,"wrap","","",234,[[]]],[11,"unwrap","","",234,[[]]],[11,"inner","","",234,[[]]],[11,"inner_mut","","",234,[[]]],[11,"from","","",234,[[]]],[11,"into","","",234,[[]]],[11,"to_owned","","",234,[[]]],[11,"clone_into","","",234,[[]]],[11,"borrow","","",234,[[]]],[11,"borrow_mut","","",234,[[]]],[11,"try_from","","",234,[[],["result",4]]],[11,"try_into","","",234,[[],["result",4]]],[11,"type_id","","",234,[[],["typeid",3]]],[11,"from","skia_safe","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from","skia_safe::path","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"from","","",235,[[]]],[11,"into","","",235,[[]]],[11,"into_iter","","",235,[[]]],[11,"borrow","","",235,[[]]],[11,"borrow_mut","","",235,[[]]],[11,"try_from","","",235,[[],["result",4]]],[11,"try_into","","",235,[[],["result",4]]],[11,"type_id","","",235,[[],["typeid",3]]],[11,"from","","",236,[[]]],[11,"into","","",236,[[]]],[11,"into_iter","","",236,[[]]],[11,"borrow","","",236,[[]]],[11,"borrow_mut","","",236,[[]]],[11,"try_from","","",236,[[],["result",4]]],[11,"try_into","","",236,[[],["result",4]]],[11,"type_id","","",236,[[],["typeid",3]]],[11,"from","skia_safe::path_effect::point_data","",237,[[]]],[11,"into","","",237,[[]]],[11,"to_owned","","",237,[[]]],[11,"clone_into","","",237,[[]]],[11,"borrow","","",237,[[]]],[11,"borrow_mut","","",237,[[]]],[11,"try_from","","",237,[[],["result",4]]],[11,"try_into","","",237,[[],["result",4]]],[11,"type_id","","",237,[[],["typeid",3]]],[11,"wrap","skia_safe::path_effect","",94,[[]]],[11,"unwrap","","",94,[[]]],[11,"inner","","",94,[[]]],[11,"inner_mut","","",94,[[]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"from","skia_safe::path_measure","",238,[[]]],[11,"into","","",238,[[]]],[11,"to_owned","","",238,[[]]],[11,"clone_into","","",238,[[]]],[11,"borrow","","",238,[[]]],[11,"borrow_mut","","",238,[[]]],[11,"try_from","","",238,[[],["result",4]]],[11,"try_into","","",238,[[],["result",4]]],[11,"type_id","","",238,[[],["typeid",3]]],[11,"from","skia_safe::path","",239,[[]]],[11,"into","","",239,[[]]],[11,"to_owned","","",239,[[]]],[11,"clone_into","","",239,[[]]],[11,"borrow","","",239,[[]]],[11,"borrow_mut","","",239,[[]]],[11,"try_from","","",239,[[],["result",4]]],[11,"try_into","","",239,[[],["result",4]]],[11,"type_id","","",239,[[],["typeid",3]]],[11,"wrap","skia_safe","",96,[[]]],[11,"unwrap","","",96,[[]]],[11,"inner","","",96,[[]]],[11,"inner_mut","","",96,[[]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"wrap","","",190,[[]]],[11,"unwrap","","",190,[[]]],[11,"inner","","",190,[[]]],[11,"inner_mut","","",190,[[]]],[11,"from","","",190,[[]]],[11,"into","","",190,[[]]],[11,"to_owned","","",190,[[]]],[11,"clone_into","","",190,[[]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"try_into","","",190,[[],["result",4]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"wrap","","",191,[[]]],[11,"unwrap","","",191,[[]]],[11,"inner","","",191,[[]]],[11,"inner_mut","","",191,[[]]],[11,"from","","",191,[[]]],[11,"into","","",191,[[]]],[11,"to_owned","","",191,[[]]],[11,"clone_into","","",191,[[]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"try_into","","",191,[[],["result",4]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"wrap","","",192,[[]]],[11,"unwrap","","",192,[[]]],[11,"inner","","",192,[[]]],[11,"inner_mut","","",192,[[]]],[11,"from","","",192,[[]]],[11,"into","","",192,[[]]],[11,"to_owned","","",192,[[]]],[11,"clone_into","","",192,[[]]],[11,"borrow","","",192,[[]]],[11,"borrow_mut","","",192,[[]]],[11,"try_from","","",192,[[],["result",4]]],[11,"try_into","","",192,[[],["result",4]]],[11,"type_id","","",192,[[],["typeid",3]]],[11,"wrap","","",193,[[]]],[11,"unwrap","","",193,[[]]],[11,"inner","","",193,[[]]],[11,"inner_mut","","",193,[[]]],[11,"from","","",193,[[]]],[11,"into","","",193,[[]]],[11,"to_owned","","",193,[[]]],[11,"clone_into","","",193,[[]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"try_into","","",193,[[],["result",4]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"wrap","","",194,[[]]],[11,"unwrap","","",194,[[]]],[11,"inner","","",194,[[]]],[11,"inner_mut","","",194,[[]]],[11,"from","","",194,[[]]],[11,"into","","",194,[[]]],[11,"to_owned","","",194,[[]]],[11,"clone_into","","",194,[[]]],[11,"borrow","","",194,[[]]],[11,"borrow_mut","","",194,[[]]],[11,"try_from","","",194,[[],["result",4]]],[11,"try_into","","",194,[[],["result",4]]],[11,"type_id","","",194,[[],["typeid",3]]],[11,"from","skia_safe::region","",97,[[]]],[11,"into","","",97,[[]]],[11,"to_owned","","",97,[[]]],[11,"clone_into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"wrap","","",240,[[]]],[11,"unwrap","","",240,[[]]],[11,"inner","","",240,[[]]],[11,"inner_mut","","",240,[[]]],[11,"from","","",240,[[]]],[11,"into","","",240,[[]]],[11,"into_iter","","",240,[[]]],[11,"to_owned","","",240,[[]]],[11,"clone_into","","",240,[[]]],[11,"borrow","","",240,[[]]],[11,"borrow_mut","","",240,[[]]],[11,"try_from","","",240,[[],["result",4]]],[11,"try_into","","",240,[[],["result",4]]],[11,"type_id","","",240,[[],["typeid",3]]],[11,"wrap","","",241,[[]]],[11,"unwrap","","",241,[[]]],[11,"inner","","",241,[[]]],[11,"inner_mut","","",241,[[]]],[11,"from","","",241,[[]]],[11,"into","","",241,[[]]],[11,"into_iter","","",241,[[]]],[11,"to_owned","","",241,[[]]],[11,"clone_into","","",241,[[]]],[11,"borrow","","",241,[[]]],[11,"borrow_mut","","",241,[[]]],[11,"try_from","","",241,[[],["result",4]]],[11,"try_into","","",241,[[],["result",4]]],[11,"type_id","","",241,[[],["typeid",3]]],[11,"wrap","","",242,[[]]],[11,"unwrap","","",242,[[]]],[11,"inner","","",242,[[]]],[11,"inner_mut","","",242,[[]]],[11,"from","","",242,[[]]],[11,"into","","",242,[[]]],[11,"into_iter","","",242,[[]]],[11,"to_owned","","",242,[[]]],[11,"clone_into","","",242,[[]]],[11,"borrow","","",242,[[]]],[11,"borrow_mut","","",242,[[]]],[11,"try_from","","",242,[[],["result",4]]],[11,"try_into","","",242,[[],["result",4]]],[11,"type_id","","",242,[[],["typeid",3]]],[11,"from","skia_safe::rrect","",100,[[]]],[11,"into","","",100,[[]]],[11,"to_owned","","",100,[[]]],[11,"clone_into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"wrap","","",243,[[]]],[11,"unwrap","","",243,[[]]],[11,"inner","","",243,[[]]],[11,"inner_mut","","",243,[[]]],[11,"from","","",243,[[]]],[11,"into","","",243,[[]]],[11,"to_owned","","",243,[[]]],[11,"clone_into","","",243,[[]]],[11,"borrow","","",243,[[]]],[11,"borrow_mut","","",243,[[]]],[11,"try_from","","",243,[[],["result",4]]],[11,"try_into","","",243,[[],["result",4]]],[11,"type_id","","",243,[[],["typeid",3]]],[11,"wrap","skia_safe","",196,[[]]],[11,"unwrap","","",196,[[]]],[11,"inner","","",196,[[]]],[11,"inner_mut","","",196,[[]]],[11,"from","","",196,[[]]],[11,"into","","",196,[[]]],[11,"to_owned","","",196,[[]]],[11,"clone_into","","",196,[[]]],[11,"borrow","","",196,[[]]],[11,"borrow_mut","","",196,[[]]],[11,"try_from","","",196,[[],["result",4]]],[11,"try_into","","",196,[[],["result",4]]],[11,"type_id","","",196,[[],["typeid",3]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"to_owned","","",103,[[]]],[11,"clone_into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"wrap","skia_safe::image","",74,[[]]],[11,"unwrap","","",74,[[]]],[11,"inner","","",74,[[]]],[11,"inner_mut","","",74,[[]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","skia_safe::sampling_options","",104,[[]]],[11,"into","","",104,[[]]],[11,"to_owned","","",104,[[]]],[11,"clone_into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"wrap","","",105,[[]]],[11,"unwrap","","",105,[[]]],[11,"inner","","",105,[[]]],[11,"inner_mut","","",105,[[]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"to_owned","","",105,[[]]],[11,"clone_into","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"wrap","","",106,[[]]],[11,"unwrap","","",106,[[]]],[11,"inner","","",106,[[]]],[11,"inner_mut","","",106,[[]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","skia_safe::shader","",107,[[]]],[11,"into","","",107,[[]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"to_owned","","",108,[[]]],[11,"clone_into","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"to_owned","","",109,[[]]],[11,"clone_into","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"wrap","skia_safe","",199,[[]]],[11,"unwrap","","",199,[[]]],[11,"inner","","",199,[[]]],[11,"inner_mut","","",199,[[]]],[11,"from","","",199,[[]]],[11,"into","","",199,[[]]],[11,"to_owned","","",199,[[]]],[11,"clone_into","","",199,[[]]],[11,"borrow","","",199,[[]]],[11,"borrow_mut","","",199,[[]]],[11,"try_from","","",199,[[],["result",4]]],[11,"try_into","","",199,[[],["result",4]]],[11,"type_id","","",199,[[],["typeid",3]]],[11,"wrap","","",200,[[]]],[11,"unwrap","","",200,[[]]],[11,"inner","","",200,[[]]],[11,"inner_mut","","",200,[[]]],[11,"from","","",200,[[]]],[11,"into","","",200,[[]]],[11,"to_owned","","",200,[[]]],[11,"clone_into","","",200,[[]]],[11,"borrow","","",200,[[]]],[11,"borrow_mut","","",200,[[]]],[11,"try_from","","",200,[[],["result",4]]],[11,"try_into","","",200,[[],["result",4]]],[11,"type_id","","",200,[[],["typeid",3]]],[11,"from","skia_safe::stroke_rec","",110,[[]]],[11,"into","","",110,[[]]],[11,"to_owned","","",110,[[]]],[11,"clone_into","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"to_owned","","",111,[[]]],[11,"clone_into","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"from","skia_safe::surface","",112,[[]]],[11,"into","","",112,[[]]],[11,"to_owned","","",112,[[]]],[11,"clone_into","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"to_owned","","",114,[[]]],[11,"clone_into","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"wrap","skia_safe","",201,[[]]],[11,"unwrap","","",201,[[]]],[11,"inner","","",201,[[]]],[11,"inner_mut","","",201,[[]]],[11,"from","","",201,[[]]],[11,"into","","",201,[[]]],[11,"to_owned","","",201,[[]]],[11,"clone_into","","",201,[[]]],[11,"borrow","","",201,[[]]],[11,"borrow_mut","","",201,[[]]],[11,"try_from","","",201,[[],["result",4]]],[11,"try_into","","",201,[[],["result",4]]],[11,"type_id","","",201,[[],["typeid",3]]],[11,"from","","",244,[[]]],[11,"into","","",244,[[]]],[11,"to_owned","","",244,[[]]],[11,"clone_into","","",244,[[]]],[11,"borrow","","",244,[[]]],[11,"borrow_mut","","",244,[[]]],[11,"try_from","","",244,[[],["result",4]]],[11,"try_into","","",244,[[],["result",4]]],[11,"type_id","","",244,[[],["typeid",3]]],[11,"wrap","","",245,[[]]],[11,"unwrap","","",245,[[]]],[11,"inner","","",245,[[]]],[11,"inner_mut","","",245,[[]]],[11,"from","","",245,[[]]],[11,"into","","",245,[[]]],[11,"to_owned","","",245,[[]]],[11,"clone_into","","",245,[[]]],[11,"borrow","","",245,[[]]],[11,"borrow_mut","","",245,[[]]],[11,"try_from","","",245,[[],["result",4]]],[11,"try_into","","",245,[[],["result",4]]],[11,"type_id","","",245,[[],["typeid",3]]],[11,"from","","",202,[[]]],[11,"into","","",202,[[]]],[11,"borrow","","",202,[[]]],[11,"borrow_mut","","",202,[[]]],[11,"try_from","","",202,[[],["result",4]]],[11,"try_into","","",202,[[],["result",4]]],[11,"type_id","","",202,[[],["typeid",3]]],[11,"from","","",203,[[]]],[11,"into","","",203,[[]]],[11,"to_owned","","",203,[[]]],[11,"clone_into","","",203,[[]]],[11,"borrow","","",203,[[]]],[11,"borrow_mut","","",203,[[]]],[11,"try_from","","",203,[[],["result",4]]],[11,"try_into","","",203,[[],["result",4]]],[11,"type_id","","",203,[[],["typeid",3]]],[11,"wrap","","",204,[[]]],[11,"unwrap","","",204,[[]]],[11,"inner","","",204,[[]]],[11,"inner_mut","","",204,[[]]],[11,"from","","",204,[[]]],[11,"into","","",204,[[]]],[11,"to_owned","","",204,[[]]],[11,"clone_into","","",204,[[]]],[11,"borrow","","",204,[[]]],[11,"borrow_mut","","",204,[[]]],[11,"try_from","","",204,[[],["result",4]]],[11,"try_into","","",204,[[],["result",4]]],[11,"type_id","","",204,[[],["typeid",3]]],[11,"from","skia_safe::typeface","",115,[[]]],[11,"into","","",115,[[]]],[11,"to_owned","","",115,[[]]],[11,"clone_into","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"to_owned","","",116,[[]]],[11,"clone_into","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"wrap","skia_safe","",246,[[]]],[11,"unwrap","","",246,[[]]],[11,"inner","","",246,[[]]],[11,"inner_mut","","",246,[[]]],[11,"from","","",246,[[]]],[11,"into","","",246,[[]]],[11,"to_owned","","",246,[[]]],[11,"clone_into","","",246,[[]]],[11,"borrow","","",246,[[]]],[11,"borrow_mut","","",246,[[]]],[11,"try_from","","",246,[[],["result",4]]],[11,"try_into","","",246,[[],["result",4]]],[11,"type_id","","",246,[[],["typeid",3]]],[11,"wrap","","",247,[[]]],[11,"unwrap","","",247,[[]]],[11,"inner","","",247,[[]]],[11,"inner_mut","","",247,[[]]],[11,"from","","",247,[[]]],[11,"into","","",247,[[]]],[11,"to_owned","","",247,[[]]],[11,"clone_into","","",247,[[]]],[11,"borrow","","",247,[[]]],[11,"borrow_mut","","",247,[[]]],[11,"try_from","","",247,[[],["result",4]]],[11,"try_into","","",247,[[],["result",4]]],[11,"type_id","","",247,[[],["typeid",3]]],[11,"from","skia_safe::vertices","",248,[[]]],[11,"into","","",248,[[]]],[11,"to_owned","","",248,[[]]],[11,"clone_into","","",248,[[]]],[11,"borrow","","",248,[[]]],[11,"borrow_mut","","",248,[[]]],[11,"try_from","","",248,[[],["result",4]]],[11,"try_into","","",248,[[],["result",4]]],[11,"type_id","","",248,[[],["typeid",3]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"to_owned","","",117,[[]]],[11,"clone_into","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"wrap","","",118,[[]]],[11,"unwrap","","",118,[[]]],[11,"inner","","",118,[[]]],[11,"inner_mut","","",118,[[]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"to_owned","","",118,[[]]],[11,"clone_into","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"to_owned","","",119,[[]]],[11,"clone_into","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"wrap","","",120,[[]]],[11,"unwrap","","",120,[[]]],[11,"inner","","",120,[[]]],[11,"inner_mut","","",120,[[]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"to_owned","","",120,[[]]],[11,"clone_into","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"from","","",249,[[]]],[11,"into","","",249,[[]]],[11,"to_owned","","",249,[[]]],[11,"clone_into","","",249,[[]]],[11,"borrow","","",249,[[]]],[11,"borrow_mut","","",249,[[]]],[11,"try_from","","",249,[[],["result",4]]],[11,"try_into","","",249,[[],["result",4]]],[11,"type_id","","",249,[[],["typeid",3]]],[11,"from","skia_safe::yuva_pixmap_info","",121,[[]]],[11,"into","","",121,[[]]],[11,"to_owned","","",121,[[]]],[11,"clone_into","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"wrap","skia_safe::yuva_info","",122,[[]]],[11,"unwrap","","",122,[[]]],[11,"inner","","",122,[[]]],[11,"inner_mut","","",122,[[]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"to_owned","","",122,[[]]],[11,"clone_into","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"from","","",123,[[]]],[11,"into","","",123,[[]]],[11,"to_owned","","",123,[[]]],[11,"clone_into","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"from","skia_safe::yuva_pixmap_info","",124,[[]]],[11,"into","","",124,[[]]],[11,"to_owned","","",124,[[]]],[11,"clone_into","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"from","skia_safe::pdf","",125,[[]]],[11,"into","","",125,[[]]],[11,"to_owned","","",125,[[]]],[11,"clone_into","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"from","","",250,[[]]],[11,"into","","",250,[[]]],[11,"borrow","","",250,[[]]],[11,"borrow_mut","","",250,[[]]],[11,"try_from","","",250,[[],["result",4]]],[11,"try_into","","",250,[[],["result",4]]],[11,"type_id","","",250,[[],["typeid",3]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"from","skia_safe::path_1d_path_effect","",127,[[]]],[11,"into","","",127,[[]]],[11,"to_owned","","",127,[[]]],[11,"clone_into","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"from","skia_safe::gradient_shader","",251,[[]]],[11,"into","","",251,[[]]],[11,"to_owned","","",251,[[]]],[11,"clone_into","","",251,[[]]],[11,"borrow","","",251,[[]]],[11,"borrow_mut","","",251,[[]]],[11,"try_from","","",251,[[],["result",4]]],[11,"try_into","","",251,[[],["result",4]]],[11,"type_id","","",251,[[],["typeid",3]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"from","skia_safe::high_contrast_config","",129,[[]]],[11,"into","","",129,[[]]],[11,"to_owned","","",129,[[]]],[11,"clone_into","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"wrap","skia_safe::high_contrast_filter","",130,[[]]],[11,"unwrap","","",130,[[]]],[11,"inner","","",130,[[]]],[11,"inner_mut","","",130,[[]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"to_owned","","",130,[[]]],[11,"clone_into","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"wrap","skia_safe::image_filters","",252,[[]]],[11,"unwrap","","",252,[[]]],[11,"inner","","",252,[[]]],[11,"inner_mut","","",252,[[]]],[11,"from","","",252,[[]]],[11,"into","","",252,[[]]],[11,"to_owned","","",252,[[]]],[11,"clone_into","","",252,[[]]],[11,"borrow","","",252,[[]]],[11,"borrow_mut","","",252,[[]]],[11,"try_from","","",252,[[],["result",4]]],[11,"try_into","","",252,[[],["result",4]]],[11,"type_id","","",252,[[],["typeid",3]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"to_owned","","",131,[[]]],[11,"clone_into","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"to_owned","","",132,[[]]],[11,"clone_into","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"from","skia_safe::runtime_effect::uniform","",133,[[]]],[11,"into","","",133,[[]]],[11,"to_owned","","",133,[[]]],[11,"clone_into","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"from","","",253,[[]]],[11,"into","","",253,[[]]],[11,"to_owned","","",253,[[]]],[11,"clone_into","","",253,[[]]],[11,"borrow","","",253,[[]]],[11,"borrow_mut","","",253,[[]]],[11,"try_from","","",253,[[],["result",4]]],[11,"try_into","","",253,[[],["result",4]]],[11,"type_id","","",253,[[],["typeid",3]]],[11,"wrap","skia_safe::runtime_effect","",134,[[]]],[11,"unwrap","","",134,[[]]],[11,"inner","","",134,[[]]],[11,"inner_mut","","",134,[[]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"to_owned","","",134,[[]]],[11,"clone_into","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"from","skia_safe::trim_path_effect","",135,[[]]],[11,"into","","",135,[[]]],[11,"to_owned","","",135,[[]]],[11,"clone_into","","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"from","skia_safe::gpu::context_options","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"wrap","","",8,[[]]],[11,"unwrap","","",8,[[]]],[11,"inner","","",8,[[]]],[11,"inner_mut","","",8,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"wrap","skia_safe::gpu::d3d","",9,[[]]],[11,"unwrap","","",9,[[]]],[11,"inner","","",9,[[]]],[11,"inner_mut","","",9,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"wrap","","",254,[[]]],[11,"unwrap","","",254,[[]]],[11,"inner","","",254,[[]]],[11,"inner_mut","","",254,[[]]],[11,"from","","",254,[[]]],[11,"into","","",254,[[]]],[11,"to_owned","","",254,[[]]],[11,"clone_into","","",254,[[]]],[11,"borrow","","",254,[[]]],[11,"borrow_mut","","",254,[[]]],[11,"try_from","","",254,[[],["result",4]]],[11,"try_into","","",254,[[],["result",4]]],[11,"type_id","","",254,[[],["typeid",3]]],[11,"wrap","","",10,[[]]],[11,"unwrap","","",10,[[]]],[11,"inner","","",10,[[]]],[11,"inner_mut","","",10,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","skia_safe::gpu","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","skia_safe::gpu::gl","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"wrap","","",18,[[]]],[11,"unwrap","","",18,[[]]],[11,"inner","","",18,[[]]],[11,"inner_mut","","",18,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"wrap","","",19,[[]]],[11,"unwrap","","",19,[[]]],[11,"inner","","",19,[[]]],[11,"inner_mut","","",19,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",255,[[]]],[11,"into","","",255,[[]]],[11,"to_owned","","",255,[[]]],[11,"clone_into","","",255,[[]]],[11,"borrow","","",255,[[]]],[11,"borrow_mut","","",255,[[]]],[11,"try_from","","",255,[[],["result",4]]],[11,"try_into","","",255,[[],["result",4]]],[11,"type_id","","",255,[[],["typeid",3]]],[11,"from","skia_safe::gpu","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"wrap","","",256,[[]]],[11,"unwrap","","",256,[[]]],[11,"inner","","",256,[[]]],[11,"inner_mut","","",256,[[]]],[11,"from","","",256,[[]]],[11,"into","","",256,[[]]],[11,"borrow","","",256,[[]]],[11,"borrow_mut","","",256,[[]]],[11,"try_from","","",256,[[],["result",4]]],[11,"try_into","","",256,[[],["result",4]]],[11,"type_id","","",256,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"wrap","skia_safe::gpu::vk","",257,[[]]],[11,"unwrap","","",257,[[]]],[11,"inner","","",257,[[]]],[11,"inner_mut","","",257,[[]]],[11,"from","","",257,[[]]],[11,"into","","",257,[[]]],[11,"to_owned","","",257,[[]]],[11,"clone_into","","",257,[[]]],[11,"borrow","","",257,[[]]],[11,"borrow_mut","","",257,[[]]],[11,"try_from","","",257,[[],["result",4]]],[11,"try_into","","",257,[[],["result",4]]],[11,"type_id","","",257,[[],["typeid",3]]],[11,"wrap","","",258,[[]]],[11,"unwrap","","",258,[[]]],[11,"inner","","",258,[[]]],[11,"inner_mut","","",258,[[]]],[11,"from","","",258,[[]]],[11,"into","","",258,[[]]],[11,"to_owned","","",258,[[]]],[11,"clone_into","","",258,[[]]],[11,"borrow","","",258,[[]]],[11,"borrow_mut","","",258,[[]]],[11,"try_from","","",258,[[],["result",4]]],[11,"try_into","","",258,[[],["result",4]]],[11,"type_id","","",258,[[],["typeid",3]]],[11,"from","","",259,[[]]],[11,"into","","",259,[[]]],[11,"borrow","","",259,[[]]],[11,"borrow_mut","","",259,[[]]],[11,"try_from","","",259,[[],["result",4]]],[11,"try_into","","",259,[[],["result",4]]],[11,"type_id","","",259,[[],["typeid",3]]],[11,"wrap","","",20,[[]]],[11,"unwrap","","",20,[[]]],[11,"inner","","",20,[[]]],[11,"inner_mut","","",20,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",260,[[]]],[11,"into","","",260,[[]]],[11,"to_owned","","",260,[[]]],[11,"clone_into","","",260,[[]]],[11,"borrow","","",260,[[]]],[11,"borrow_mut","","",260,[[]]],[11,"try_from","","",260,[[],["result",4]]],[11,"try_into","","",260,[[],["result",4]]],[11,"type_id","","",260,[[],["typeid",3]]],[11,"wrap","","",21,[[]]],[11,"unwrap","","",21,[[]]],[11,"inner","","",21,[[]]],[11,"inner_mut","","",21,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"wrap","","",22,[[]]],[11,"unwrap","","",22,[[]]],[11,"inner","","",22,[[]]],[11,"inner_mut","","",22,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"wrap","","",24,[[]]],[11,"unwrap","","",24,[[]]],[11,"inner","","",24,[[]]],[11,"inner_mut","","",24,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",261,[[]]],[11,"into","","",261,[[]]],[11,"borrow","","",261,[[]]],[11,"borrow_mut","","",261,[[]]],[11,"try_from","","",261,[[],["result",4]]],[11,"try_into","","",261,[[],["result",4]]],[11,"type_id","","",261,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","skia_safe::textlayout","",143,[[]]],[11,"into","","",143,[[]]],[11,"to_owned","","",143,[[]]],[11,"clone_into","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"from","","",144,[[]]],[11,"into","","",144,[[]]],[11,"to_owned","","",144,[[]]],[11,"clone_into","","",144,[[]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"from","","",145,[[]]],[11,"into","","",145,[[]]],[11,"to_owned","","",145,[[]]],[11,"clone_into","","",145,[[]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"to_owned","","",146,[[]]],[11,"clone_into","","",146,[[]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"to_owned","","",147,[[]]],[11,"clone_into","","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"from","","",148,[[]]],[11,"into","","",148,[[]]],[11,"to_owned","","",148,[[]]],[11,"clone_into","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"wrap","","",149,[[]]],[11,"unwrap","","",149,[[]]],[11,"inner","","",149,[[]]],[11,"inner_mut","","",149,[[]]],[11,"from","","",149,[[]]],[11,"into","","",149,[[]]],[11,"to_owned","","",149,[[]]],[11,"clone_into","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"from","","",151,[[]]],[11,"into","","",151,[[]]],[11,"to_owned","","",151,[[]]],[11,"clone_into","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"from","","",152,[[]]],[11,"into","","",152,[[]]],[11,"to_owned","","",152,[[]]],[11,"clone_into","","",152,[[]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"from","","",153,[[]]],[11,"into","","",153,[[]]],[11,"to_owned","","",153,[[]]],[11,"clone_into","","",153,[[]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"wrap","","",154,[[]]],[11,"unwrap","","",154,[[]]],[11,"inner","","",154,[[]]],[11,"inner_mut","","",154,[[]]],[11,"from","","",154,[[]]],[11,"into","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"wrap","","",155,[[]]],[11,"unwrap","","",155,[[]]],[11,"inner","","",155,[[]]],[11,"inner_mut","","",155,[[]]],[11,"from","","",155,[[]]],[11,"into","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"wrap","","",156,[[]]],[11,"unwrap","","",156,[[]]],[11,"inner","","",156,[[]]],[11,"inner_mut","","",156,[[]]],[11,"from","","",156,[[]]],[11,"into","","",156,[[]]],[11,"to_owned","","",156,[[]]],[11,"clone_into","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"from","","",262,[[]]],[11,"into","","",262,[[]]],[11,"to_owned","","",262,[[]]],[11,"clone_into","","",262,[[]]],[11,"borrow","","",262,[[]]],[11,"borrow_mut","","",262,[[]]],[11,"try_from","","",262,[[],["result",4]]],[11,"try_into","","",262,[[],["result",4]]],[11,"type_id","","",262,[[],["typeid",3]]],[11,"from","","",157,[[]]],[11,"into","","",157,[[]]],[11,"to_owned","","",157,[[]]],[11,"clone_into","","",157,[[]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"from","","",158,[[]]],[11,"into","","",158,[[]]],[11,"to_owned","","",158,[[]]],[11,"clone_into","","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"to_owned","","",159,[[]]],[11,"clone_into","","",159,[[]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"wrap","","",160,[[]]],[11,"unwrap","","",160,[[]]],[11,"inner","","",160,[[]]],[11,"inner_mut","","",160,[[]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"to_owned","","",160,[[]]],[11,"clone_into","","",160,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"from","","",161,[[]]],[11,"into","","",161,[[]]],[11,"to_owned","","",161,[[]]],[11,"clone_into","","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"wrap","","",162,[[]]],[11,"unwrap","","",162,[[]]],[11,"inner","","",162,[[]]],[11,"inner_mut","","",162,[[]]],[11,"from","","",162,[[]]],[11,"into","","",162,[[]]],[11,"to_owned","","",162,[[]]],[11,"clone_into","","",162,[[]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"wrap","","",163,[[]]],[11,"unwrap","","",163,[[]]],[11,"inner","","",163,[[]]],[11,"inner_mut","","",163,[[]]],[11,"from","","",163,[[]]],[11,"into","","",163,[[]]],[11,"to_owned","","",163,[[]]],[11,"clone_into","","",163,[[]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"wrap","","",164,[[]]],[11,"unwrap","","",164,[[]]],[11,"inner","","",164,[[]]],[11,"inner_mut","","",164,[[]]],[11,"from","","",164,[[]]],[11,"into","","",164,[[]]],[11,"to_owned","","",164,[[]]],[11,"clone_into","","",164,[[]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"from","","",263,[[]]],[11,"into","","",263,[[]]],[11,"borrow","","",263,[[]]],[11,"borrow_mut","","",263,[[]]],[11,"try_from","","",263,[[],["result",4]]],[11,"try_into","","",263,[[],["result",4]]],[11,"type_id","","",263,[[],["typeid",3]]],[11,"from","skia_safe::shaper::run_handler","",137,[[]]],[11,"into","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"from","","",138,[[]]],[11,"into","","",138,[[]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"from","skia_safe::shaper","",139,[[]]],[11,"into","","",139,[[]]],[11,"to_owned","","",139,[[]]],[11,"clone_into","","",139,[[]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"from","","",264,[[]]],[11,"into","","",264,[[]]],[11,"borrow","","",264,[[]]],[11,"borrow_mut","","",264,[[]]],[11,"try_from","","",264,[[],["result",4]]],[11,"try_into","","",264,[[],["result",4]]],[11,"type_id","","",264,[[],["typeid",3]]],[11,"from","skia_safe","",207,[[]]],[11,"into","","",207,[[]]],[11,"to_owned","","",207,[[]]],[11,"clone_into","","",207,[[]]],[11,"borrow","","",207,[[]]],[11,"borrow_mut","","",207,[[]]],[11,"try_from","","",207,[[],["result",4]]],[11,"try_into","","",207,[[],["result",4]]],[11,"type_id","","",207,[[],["typeid",3]]],[11,"from","","",265,[[]]],[11,"into","","",265,[[]]],[11,"into_iter","","",265,[[]]],[11,"to_owned","","",265,[[]]],[11,"clone_into","","",265,[[]]],[11,"borrow","","",265,[[]]],[11,"borrow_mut","","",265,[[]]],[11,"try_from","","",265,[[],["result",4]]],[11,"try_into","","",265,[[],["result",4]]],[11,"type_id","","",265,[[],["typeid",3]]],[11,"from","","",266,[[]]],[11,"into","","",266,[[]]],[11,"into_iter","","",266,[[]]],[11,"to_owned","","",266,[[]]],[11,"clone_into","","",266,[[]]],[11,"borrow","","",266,[[]]],[11,"borrow_mut","","",266,[[]]],[11,"try_from","","",266,[[],["result",4]]],[11,"try_into","","",266,[[],["result",4]]],[11,"type_id","","",266,[[],["typeid",3]]],[11,"from","","",267,[[]]],[11,"into","","",267,[[]]],[11,"to_owned","","",267,[[]]],[11,"clone_into","","",267,[[]]],[11,"borrow","","",267,[[]]],[11,"borrow_mut","","",267,[[]]],[11,"try_from","","",267,[[],["result",4]]],[11,"try_into","","",267,[[],["result",4]]],[11,"type_id","","",267,[[],["typeid",3]]],[11,"from","","",268,[[]]],[11,"into","","",268,[[]]],[11,"into_iter","","",268,[[]]],[11,"borrow","","",268,[[]]],[11,"borrow_mut","","",268,[[]]],[11,"try_from","","",268,[[],["result",4]]],[11,"try_into","","",268,[[],["result",4]]],[11,"type_id","","",268,[[],["typeid",3]]],[11,"from","","",269,[[]]],[11,"into","","",269,[[]]],[11,"borrow","","",269,[[]]],[11,"borrow_mut","","",269,[[]]],[11,"try_from","","",269,[[],["result",4]]],[11,"try_into","","",269,[[],["result",4]]],[11,"type_id","","",269,[[],["typeid",3]]],[11,"from","skia_safe::svg::canvas","",53,[[]]],[11,"into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"wrap","skia_safe::utils","",58,[[]]],[11,"unwrap","","",58,[[]]],[11,"inner","","",58,[[]]],[11,"inner_mut","","",58,[[]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"wrap","","",59,[[]]],[11,"unwrap","","",59,[[]]],[11,"inner","","",59,[[]]],[11,"inner_mut","","",59,[[]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","skia_safe::utils::interpolator","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","skia_safe::utils::shadow_utils","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","skia_safe::utils::text_utils","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"fmt","skia_safe","",103,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::gpu::gl","",16,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::gpu","",47,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::textlayout","",144,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::gpu::vk","",35,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",33,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::utils::interpolator","",54,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::rrect","",101,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::typeface","",115,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::trim_path_effect","",135,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::yuva_pixmap_info","",124,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe","",185,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::matrix","",79,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe","",102,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::canvas","",65,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::image","",77,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::textlayout","",158,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::stroke_rec","",110,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",166,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::gpu::vk","",26,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",25,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::gpu::gl","",17,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::gpu","",42,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",46,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::image","",76,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::gpu::context_options","",7,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::textlayout","",151,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::gpu::vk","",31,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::gpu","",44,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::surface","",114,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe","",183,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::rrect","",100,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe","",176,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",182,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::textlayout","",157,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::codec","",2,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::gpu::vk","",27,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::textlayout","",152,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::gpu::vk","",34,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",37,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::codec","",4,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::vertices","",117,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe","",203,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::gpu::vk","",29,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::gpu","",43,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::gpu::vk","",30,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::stroke_rec","",111,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::image_filters","",131,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe","",168,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::textlayout","",143,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::path","",92,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::image_filter","",78,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::gpu::vk","",36,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::matrix","",80,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::vertices","",119,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::gpu::vk","",28,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::utils::text_utils","",57,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe","",172,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::region","",97,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::textlayout","",145,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",153,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe","",207,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::canvas","",64,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe","",90,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::textlayout","",161,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe","",178,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::textlayout","",148,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe","",87,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::pdf","",125,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::gpu","",41,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::codec","",1,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::image","",75,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::font","",68,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::shaper","",139,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe","",89,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::high_contrast_config","",129,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::path_1d_path_effect","",127,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe","",88,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::textlayout","",159,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe","",167,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::gpu","",45,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::shader","",107,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::yuva_pixmap_info","",121,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::gpu::context_options","",6,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe","",177,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::surface","",113,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",112,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe","",169,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::font_style","",73,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::runtime_effect::uniform","",133,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::textlayout","",146,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",147,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::path","",93,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::canvas::lattice","",63,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe","",96,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::yuva_info","",123,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe","",86,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::path","",91,[[["formatter",3]],[["result",4],["error",3]]]],[11,"default","skia_safe","",169,[[],["skclipop",4]]],[11,"default","skia_safe::textlayout","",148,[[],["skia_textlayout_positionwithaffinity",3]]],[11,"default","","",157,[[],["skia_textlayout_textdecorationstyle",4]]],[11,"default","","",161,[[],["skia_textlayout_placeholderalignment",4]]],[11,"default","skia_safe::canvas::lattice","",63,[[],["skcanvas_lattice_recttype",4]]],[11,"default","skia_safe","",88,[[],["skpaint_join",4]]],[11,"default","skia_safe::textlayout","",145,[[],["skia_textlayout_rectwidthstyle",4]]],[11,"default","","",159,[[],["skia_textlayout_styletype",4]]],[11,"default","","",144,[[],["skia_textlayout_rectheightstyle",4]]],[11,"default","","",143,[[],["skia_textlayout_affinity",4]]],[11,"default","skia_safe","",168,[[],["skblurstyle",4]]],[11,"default","skia_safe::textlayout","",151,[[],["skia_textlayout_textbaseline",4]]],[11,"default","skia_safe","",166,[[],["skblendmode",4]]],[11,"default","","",89,[[],["skpathdirection",4]]],[11,"default","skia_safe::textlayout","",158,[[],["skia_textlayout_textdecorationmode",4]]],[11,"default","skia_safe","",87,[[],["skpaint_cap",4]]],[11,"default","skia_safe::textlayout","",146,[[],["skia_textlayout_textalign",4]]],[11,"default","skia_safe","",185,[[],["skyuvcolorspace",4]]],[11,"default","","",203,[[],["sktilemode",4]]],[11,"clone","","",172,[[],["skcolorchannel",4]]],[11,"clone","","",178,[[],["skfilterquality",4]]],[11,"clone","skia_safe::gpu::gl","",16,[[],["grglformat",4]]],[11,"clone","skia_safe::textlayout","",147,[[],["skia_textlayout_textdirection",4]]],[11,"clone","skia_safe::gpu","",43,[[],["grmipmapped",4]]],[11,"clone","skia_safe::textlayout","",158,[[],["skia_textlayout_textdecorationmode",4]]],[11,"clone","skia_safe::path_1d_path_effect","",127,[[],["skpath1dpatheffect_style",4]]],[11,"clone","skia_safe::gpu","",46,[[],["grsurfaceorigin",4]]],[11,"clone","skia_safe::typeface","",115,[[],["sktypeface_serializebehavior",4]]],[11,"clone","skia_safe","",86,[[],["skpaint_style",4]]],[11,"clone","skia_safe::gpu::context_options","",7,[[],["grcontextoptions_shadercachestrategy",4]]],[11,"clone","skia_safe::textlayout","",153,[[],["skia_textlayout_drawoptions",4]]],[11,"clone","skia_safe::gpu::vk","",37,[[],["vksharingmode",4]]],[11,"clone","skia_safe::gpu","",42,[[],["grbackendapi",4]]],[11,"clone","skia_safe::gpu::vk","",33,[[],["vkphysicaldevicefeatures2",3]]],[11,"clone","skia_safe::path","",91,[[],["skpath_arcsize",4]]],[11,"clone","skia_safe::image","",75,[[],["skimage_bitdepth",4]]],[11,"clone","skia_safe::textlayout","",151,[[],["skia_textlayout_textbaseline",4]]],[11,"clone","skia_safe::gpu::vk","",36,[[],["vksamplerycbcrrange",4]]],[11,"clone","","",28,[[],["vkformat",4]]],[11,"clone","","",26,[[],["vkextent2d",3]]],[11,"clone","skia_safe::gpu","",44,[[],["grrenderable",4]]],[11,"clone","skia_safe::gpu::gl","",17,[[],["grglstandard",4]]],[11,"clone","skia_safe::gpu::vk","",34,[[],["vkrect2d",3]]],[11,"clone","skia_safe","",88,[[],["skpaint_join",4]]],[11,"clone","skia_safe::matrix","",80,[[],["skmatrix_scaletofit",4]]],[11,"clone","skia_safe::gpu::vk","",31,[[],["vkoffset2d",3]]],[11,"clone","skia_safe","",96,[[],["skpathverb",4]]],[11,"clone","","",103,[[],["skmipmapmode",4]]],[11,"clone","","",89,[[],["skpathdirection",4]]],[11,"clone","skia_safe::gpu","",47,[[],["grsemaphoressubmitted",4]]],[11,"clone","skia_safe::pdf","",125,[[],["skpdf_documentstructuretype",4]]],[11,"clone","skia_safe","",182,[[],["skfonthinting",4]]],[11,"clone","skia_safe::font_style","",73,[[],["skfontstyle_slant",4]]],[11,"clone","skia_safe","",167,[[],["skblendmodecoeff",4]]],[11,"clone","skia_safe::runtime_effect::uniform","",133,[[],["skruntimeeffect_uniform_type",4]]],[11,"clone","skia_safe::image","",77,[[],["skimage_compressiontype",4]]],[11,"clone","skia_safe::gpu::context_options","",6,[[],["grcontextoptions_enable",4]]],[11,"clone","skia_safe::textlayout","",159,[[],["skia_textlayout_styletype",4]]],[11,"clone","skia_safe::path","",92,[[],["skpath_addpathmode",4]]],[11,"clone","skia_safe::shader","",107,[[],["skshader_gradienttype",4]]],[11,"clone","skia_safe::textlayout","",146,[[],["skia_textlayout_textalign",4]]],[11,"clone","skia_safe::gpu::vk","",35,[[],["vksamplerycbcrmodelconversion",4]]],[11,"clone","skia_safe::rrect","",101,[[],["skrrect_corner",4]]],[11,"clone","skia_safe::font","",68,[[],["skfont_edging",4]]],[11,"clone","skia_safe::rrect","",100,[[],["skrrect_type",4]]],[11,"clone","skia_safe::image_filter","",78,[[],["skimagefilter_mapdirection",4]]],[11,"clone","skia_safe::shaper","",139,[[],["skshaper_feature",3]]],[11,"clone","skia_safe::image","",76,[[],["skimage_cachinghint",4]]],[11,"clone","skia_safe","",87,[[],["skpaint_cap",4]]],[11,"clone","skia_safe::textlayout","",152,[[],["skia_textlayout_textheightbehavior",4]]],[11,"clone","skia_safe::utils::interpolator","",54,[[],["skinterpolatorbase_result",4]]],[11,"clone","skia_safe","",183,[[],["skalphatype",4]]],[11,"clone","","",166,[[],["skblendmode",4]]],[11,"clone","skia_safe::yuva_pixmap_info","",121,[[],["skyuvainfo_planeconfig",4]]],[11,"clone","skia_safe","",177,[[],["skencodedimageformat",4]]],[11,"clone","skia_safe::gpu::vk","",29,[[],["vkimagelayout",4]]],[11,"clone","skia_safe::textlayout","",157,[[],["skia_textlayout_textdecorationstyle",4]]],[11,"clone","skia_safe::matrix","",79,[[],["skapplyperspectiveclip",4]]],[11,"clone","skia_safe::textlayout","",145,[[],["skia_textlayout_rectwidthstyle",4]]],[11,"clone","skia_safe::surface","",112,[[],["sksurface_contentchangemode",4]]],[11,"clone","skia_safe::codec","",4,[[],["skcodec_skscanlineorder",4]]],[11,"clone","skia_safe::image_filters","",131,[[],["skimagefilters_dither",4]]],[11,"clone","skia_safe::vertices","",117,[[],["skvertices_vertexmode",4]]],[11,"clone","skia_safe::stroke_rec","",110,[[],["skstrokerec_initstyle",4]]],[11,"clone","skia_safe::yuva_info","",123,[[],["skyuvainfo_siting",4]]],[11,"clone","skia_safe::region","",97,[[],["skregion_op",4]]],[11,"clone","skia_safe::codec","",2,[[],["skcodec_zeroinitialized",4]]],[11,"clone","skia_safe::surface","",114,[[],["sksurface_backendsurfaceaccess",4]]],[11,"clone","skia_safe::path","",93,[[],["skpath_verb",4]]],[11,"clone","skia_safe::canvas","",64,[[],["skcanvas_pointmode",4]]],[11,"clone","skia_safe::textlayout","",161,[[],["skia_textlayout_placeholderalignment",4]]],[11,"clone","skia_safe::high_contrast_config","",129,[[],["skhighcontrastconfig_invertstyle",4]]],[11,"clone","skia_safe::codec","",1,[[],["skcodec_selectionpolicy",4]]],[11,"clone","skia_safe::canvas::lattice","",63,[[],["skcanvas_lattice_recttype",4]]],[11,"clone","skia_safe::gpu::vk","",27,[[],["vkfilter",4]]],[11,"clone","","",25,[[],["vkchromalocation",4]]],[11,"clone","skia_safe::yuva_pixmap_info","",124,[[],["skyuvapixmapinfo_datatype",4]]],[11,"clone","skia_safe::surface","",113,[[],["sksurface_backendhandleaccess",4]]],[11,"clone","skia_safe::stroke_rec","",111,[[],["skstrokerec_style",4]]],[11,"clone","skia_safe::textlayout","",148,[[],["skia_textlayout_positionwithaffinity",3]]],[11,"clone","","",143,[[],["skia_textlayout_affinity",4]]],[11,"clone","skia_safe","",102,[[],["skfiltermode",4]]],[11,"clone","","",176,[[],["skcoveragemode",4]]],[11,"clone","skia_safe::vertices","",119,[[],["skvertices_attribute_usage",4]]],[11,"clone","skia_safe::canvas","",65,[[],["skcanvas_srcrectconstraint",4]]],[11,"clone","skia_safe","",168,[[],["skblurstyle",4]]],[11,"clone","","",203,[[],["sktilemode",4]]],[11,"clone","skia_safe::textlayout","",144,[[],["skia_textlayout_rectheightstyle",4]]],[11,"clone","skia_safe::utils::text_utils","",57,[[],["sktextutils_align",4]]],[11,"clone","skia_safe","",207,[[],["skpathop",4]]],[11,"clone","","",169,[[],["skclipop",4]]],[11,"clone","","",0,[[],["skcodec_result",4]]],[11,"clone","","",185,[[],["skyuvcolorspace",4]]],[11,"clone","skia_safe::gpu::vk","",30,[[],["vkimagetiling",4]]],[11,"clone","skia_safe","",90,[[],["skpathfilltype",4]]],[11,"clone","skia_safe::trim_path_effect","",135,[[],["sktrimpatheffect_mode",4]]],[11,"clone","skia_safe::gpu","",45,[[],["grprotected",4]]],[11,"hash","skia_safe::gpu::vk","",28,[[]]],[11,"hash","skia_safe::textlayout","",143,[[]]],[11,"hash","skia_safe::matrix","",80,[[]]],[11,"hash","","",79,[[]]],[11,"hash","skia_safe::path_1d_path_effect","",127,[[]]],[11,"hash","skia_safe","",185,[[]]],[11,"hash","skia_safe::utils::interpolator","",54,[[]]],[11,"hash","skia_safe::gpu::vk","",37,[[]]],[11,"hash","skia_safe::yuva_info","",123,[[]]],[11,"hash","skia_safe::codec","",4,[[]]],[11,"hash","skia_safe::textlayout","",145,[[]]],[11,"hash","skia_safe::rrect","",100,[[]]],[11,"hash","skia_safe::textlayout","",151,[[]]],[11,"hash","skia_safe::gpu::context_options","",7,[[]]],[11,"hash","skia_safe","",166,[[]]],[11,"hash","skia_safe::image","",76,[[]]],[11,"hash","skia_safe::textlayout","",147,[[]]],[11,"hash","skia_safe::vertices","",117,[[]]],[11,"hash","skia_safe","",88,[[]]],[11,"hash","skia_safe::gpu","",45,[[]]],[11,"hash","skia_safe","",182,[[]]],[11,"hash","skia_safe::image_filters","",131,[[]]],[11,"hash","skia_safe::typeface","",115,[[]]],[11,"hash","skia_safe::textlayout","",161,[[]]],[11,"hash","skia_safe::path","",93,[[]]],[11,"hash","skia_safe::font","",68,[[]]],[11,"hash","skia_safe::canvas::lattice","",63,[[]]],[11,"hash","skia_safe::canvas","",65,[[]]],[11,"hash","skia_safe::codec","",1,[[]]],[11,"hash","skia_safe::image","",77,[[]]],[11,"hash","skia_safe::region","",97,[[]]],[11,"hash","skia_safe","",172,[[]]],[11,"hash","","",176,[[]]],[11,"hash","skia_safe::surface","",112,[[]]],[11,"hash","skia_safe::shader","",107,[[]]],[11,"hash","skia_safe::image_filter","",78,[[]]],[11,"hash","skia_safe::yuva_pixmap_info","",121,[[]]],[11,"hash","skia_safe::textlayout","",152,[[]]],[11,"hash","skia_safe::gpu::vk","",25,[[]]],[11,"hash","skia_safe::gpu::gl","",16,[[]]],[11,"hash","skia_safe::rrect","",101,[[]]],[11,"hash","skia_safe","",178,[[]]],[11,"hash","","",102,[[]]],[11,"hash","skia_safe::path","",91,[[]]],[11,"hash","skia_safe::gpu::vk","",29,[[]]],[11,"hash","skia_safe","",169,[[]]],[11,"hash","skia_safe::gpu","",46,[[]]],[11,"hash","skia_safe::codec","",2,[[]]],[11,"hash","skia_safe::gpu::context_options","",6,[[]]],[11,"hash","skia_safe::textlayout","",159,[[]]],[11,"hash","skia_safe::gpu::gl","",17,[[]]],[11,"hash","skia_safe::high_contrast_config","",129,[[]]],[11,"hash","skia_safe::gpu","",43,[[]]],[11,"hash","skia_safe::utils::text_utils","",57,[[]]],[11,"hash","skia_safe","",203,[[]]],[11,"hash","skia_safe::trim_path_effect","",135,[[]]],[11,"hash","skia_safe::textlayout","",153,[[]]],[11,"hash","skia_safe::gpu","",44,[[]]],[11,"hash","skia_safe","",183,[[]]],[11,"hash","","",87,[[]]],[11,"hash","","",89,[[]]],[11,"hash","skia_safe::textlayout","",158,[[]]],[11,"hash","skia_safe::gpu::vk","",35,[[]]],[11,"hash","","",27,[[]]],[11,"hash","skia_safe::canvas","",64,[[]]],[11,"hash","skia_safe::surface","",114,[[]]],[11,"hash","skia_safe::gpu","",47,[[]]],[11,"hash","skia_safe::gpu::vk","",30,[[]]],[11,"hash","skia_safe::stroke_rec","",111,[[]]],[11,"hash","","",110,[[]]],[11,"hash","skia_safe::textlayout","",146,[[]]],[11,"hash","skia_safe::gpu","",42,[[]]],[11,"hash","skia_safe::runtime_effect::uniform","",133,[[]]],[11,"hash","skia_safe::font_style","",73,[[]]],[11,"hash","skia_safe","",0,[[]]],[11,"hash","skia_safe::pdf","",125,[[]]],[11,"hash","skia_safe::textlayout","",157,[[]]],[11,"hash","skia_safe","",96,[[]]],[11,"hash","","",168,[[]]],[11,"hash","skia_safe::path","",92,[[]]],[11,"hash","skia_safe::textlayout","",144,[[]]],[11,"hash","skia_safe","",177,[[]]],[11,"hash","skia_safe::surface","",113,[[]]],[11,"hash","skia_safe::yuva_pixmap_info","",124,[[]]],[11,"hash","skia_safe","",207,[[]]],[11,"hash","skia_safe::image","",75,[[]]],[11,"hash","skia_safe","",167,[[]]],[11,"hash","","",103,[[]]],[11,"hash","","",90,[[]]],[11,"hash","skia_safe::gpu::vk","",36,[[]]],[11,"hash","skia_safe","",86,[[]]],[11,"hash","skia_safe::vertices","",119,[[]]],[11,"from","skia_safe::path","",93,[[["skpathverb",4]],["skpath_verb",4]]],[11,"from","skia_safe::gpu::gl","",16,[[["u32",15]],["grglformat",4]]],[11,"eq","skia_safe::path","",92,[[["skpath_addpathmode",4]],["bool",15]]],[11,"eq","skia_safe::codec","",1,[[["skcodec_selectionpolicy",4]],["bool",15]]],[11,"eq","skia_safe::surface","",113,[[["sksurface_backendhandleaccess",4]],["bool",15]]],[11,"eq","skia_safe::rrect","",101,[[["skrrect_corner",4]],["bool",15]]],[11,"eq","skia_safe::gpu::vk","",36,[[["vksamplerycbcrrange",4]],["bool",15]]],[11,"eq","skia_safe::canvas::lattice","",63,[[["skcanvas_lattice_recttype",4]],["bool",15]]],[11,"eq","skia_safe","",166,[[["skblendmode",4]],["bool",15]]],[11,"eq","","",183,[[["skalphatype",4]],["bool",15]]],[11,"eq","skia_safe::gpu","",43,[[["grmipmapped",4]],["bool",15]]],[11,"eq","skia_safe::image","",76,[[["skimage_cachinghint",4]],["bool",15]]],[11,"eq","skia_safe::path","",93,[[["skpath_verb",4]],["bool",15]]],[11,"eq","skia_safe","",88,[[["skpaint_join",4]],["bool",15]]],[11,"eq","skia_safe::gpu","",47,[[["grsemaphoressubmitted",4]],["bool",15]]],[11,"eq","skia_safe::vertices","",119,[[["skvertices_attribute_usage",4]],["bool",15]]],[11,"eq","skia_safe","",103,[[["skmipmapmode",4]],["bool",15]]],[11,"eq","skia_safe::utils::text_utils","",57,[[["sktextutils_align",4]],["bool",15]]],[11,"eq","skia_safe::surface","",112,[[["sksurface_contentchangemode",4]],["bool",15]]],[11,"eq","skia_safe::vertices","",117,[[["skvertices_vertexmode",4]],["bool",15]]],[11,"eq","skia_safe::textlayout","",161,[[["skia_textlayout_placeholderalignment",4]],["bool",15]]],[11,"eq","skia_safe::codec","",2,[[["skcodec_zeroinitialized",4]],["bool",15]]],[11,"eq","skia_safe::stroke_rec","",111,[[["skstrokerec_style",4]],["bool",15]]],[11,"eq","skia_safe::textlayout","",152,[[["skia_textlayout_textheightbehavior",4]],["bool",15]]],[11,"eq","skia_safe","",102,[[["skfiltermode",4]],["bool",15]]],[11,"eq","skia_safe::utils::interpolator","",54,[[["skinterpolatorbase_result",4]],["bool",15]]],[11,"eq","skia_safe::gpu","",45,[[["grprotected",4]],["bool",15]]],[11,"eq","skia_safe::canvas","",65,[[["skcanvas_srcrectconstraint",4]],["bool",15]]],[11,"eq","skia_safe::textlayout","",145,[[["skia_textlayout_rectwidthstyle",4]],["bool",15]]],[11,"eq","skia_safe::path_1d_path_effect","",127,[[["skpath1dpatheffect_style",4]],["bool",15]]],[11,"eq","skia_safe::image_filters","",131,[[["skimagefilters_dither",4]],["bool",15]]],[11,"eq","skia_safe::rrect","",100,[[["skrrect_type",4]],["bool",15]]],[11,"eq","skia_safe","",167,[[["skblendmodecoeff",4]],["bool",15]]],[11,"eq","skia_safe::gpu::vk","",30,[[["vkimagetiling",4]],["bool",15]]],[11,"eq","","",37,[[["vksharingmode",4]],["bool",15]]],[11,"eq","skia_safe::runtime_effect::uniform","",133,[[["skruntimeeffect_uniform_type",4]],["bool",15]]],[11,"eq","skia_safe","",172,[[["skcolorchannel",4]],["bool",15]]],[11,"eq","skia_safe::yuva_info","",123,[[["skyuvainfo_siting",4]],["bool",15]]],[11,"eq","skia_safe","",0,[[["skcodec_result",4]],["bool",15]]],[11,"eq","skia_safe::canvas","",64,[[["skcanvas_pointmode",4]],["bool",15]]],[11,"eq","skia_safe::gpu::context_options","",7,[[["grcontextoptions_shadercachestrategy",4]],["bool",15]]],[11,"eq","skia_safe::font","",68,[[["skfont_edging",4]],["bool",15]]],[11,"eq","skia_safe::textlayout","",151,[[["skia_textlayout_textbaseline",4]],["bool",15]]],[11,"eq","skia_safe::path","",91,[[["skpath_arcsize",4]],["bool",15]]],[11,"eq","skia_safe","",86,[[["skpaint_style",4]],["bool",15]]],[11,"eq","skia_safe::codec","",4,[[["skcodec_skscanlineorder",4]],["bool",15]]],[11,"eq","skia_safe::yuva_pixmap_info","",121,[[["skyuvainfo_planeconfig",4]],["bool",15]]],[11,"eq","skia_safe::gpu","",42,[[["grbackendapi",4]],["bool",15]]],[11,"eq","skia_safe::typeface","",115,[[["sktypeface_serializebehavior",4]],["bool",15]]],[11,"eq","skia_safe::gpu::vk","",25,[[["vkchromalocation",4]],["bool",15]]],[11,"eq","skia_safe::matrix","",79,[[["skapplyperspectiveclip",4]],["bool",15]]],[11,"eq","skia_safe::textlayout","",143,[[["skia_textlayout_affinity",4]],["bool",15]]],[11,"eq","skia_safe","",207,[[["skpathop",4]],["bool",15]]],[11,"eq","skia_safe::gpu::context_options","",6,[[["grcontextoptions_enable",4]],["bool",15]]],[11,"eq","skia_safe::textlayout","",146,[[["skia_textlayout_textalign",4]],["bool",15]]],[11,"eq","skia_safe::matrix","",80,[[["skmatrix_scaletofit",4]],["bool",15]]],[11,"eq","skia_safe::surface","",114,[[["sksurface_backendsurfaceaccess",4]],["bool",15]]],[11,"eq","skia_safe::image","",77,[[["skimage_compressiontype",4]],["bool",15]]],[11,"eq","skia_safe::gpu::gl","",17,[[["grglstandard",4]],["bool",15]]],[11,"eq","skia_safe","",176,[[["skcoveragemode",4]],["bool",15]]],[11,"eq","skia_safe::textlayout","",158,[[["skia_textlayout_textdecorationmode",4]],["bool",15]]],[11,"eq","skia_safe","",178,[[["skfilterquality",4]],["bool",15]]],[11,"eq","skia_safe::gpu","",46,[[["grsurfaceorigin",4]],["bool",15]]],[11,"eq","skia_safe::font_style","",73,[[["skfontstyle_slant",4]],["bool",15]]],[11,"eq","skia_safe::gpu::gl","",16,[[["grglformat",4]],["bool",15]]],[11,"eq","skia_safe","",177,[[["skencodedimageformat",4]],["bool",15]]],[11,"eq","skia_safe::trim_path_effect","",135,[[["sktrimpatheffect_mode",4]],["bool",15]]],[11,"eq","skia_safe::shader","",107,[[["skshader_gradienttype",4]],["bool",15]]],[11,"eq","skia_safe","",169,[[["skclipop",4]],["bool",15]]],[11,"eq","skia_safe::region","",97,[[["skregion_op",4]],["bool",15]]],[11,"eq","skia_safe::textlayout","",147,[[["skia_textlayout_textdirection",4]],["bool",15]]],[11,"eq","skia_safe","",90,[[["skpathfilltype",4]],["bool",15]]],[11,"eq","skia_safe::image_filter","",78,[[["skimagefilter_mapdirection",4]],["bool",15]]],[11,"eq","skia_safe::textlayout","",159,[[["skia_textlayout_styletype",4]],["bool",15]]],[11,"eq","skia_safe::gpu","",44,[[["grrenderable",4]],["bool",15]]],[11,"eq","skia_safe::textlayout","",153,[[["skia_textlayout_drawoptions",4]],["bool",15]]],[11,"eq","skia_safe::pdf","",125,[[["skpdf_documentstructuretype",4]],["bool",15]]],[11,"eq","skia_safe::high_contrast_config","",129,[[["skhighcontrastconfig_invertstyle",4]],["bool",15]]],[11,"eq","skia_safe::gpu::vk","",27,[[["vkfilter",4]],["bool",15]]],[11,"eq","skia_safe::yuva_pixmap_info","",124,[[["skyuvapixmapinfo_datatype",4]],["bool",15]]],[11,"eq","skia_safe::image","",75,[[["skimage_bitdepth",4]],["bool",15]]],[11,"eq","skia_safe","",203,[[["sktilemode",4]],["bool",15]]],[11,"eq","","",168,[[["skblurstyle",4]],["bool",15]]],[11,"eq","","",182,[[["skfonthinting",4]],["bool",15]]],[11,"eq","","",185,[[["skyuvcolorspace",4]],["bool",15]]],[11,"eq","skia_safe::gpu::vk","",28,[[["vkformat",4]],["bool",15]]],[11,"eq","skia_safe","",89,[[["skpathdirection",4]],["bool",15]]],[11,"eq","skia_safe::textlayout","",157,[[["skia_textlayout_textdecorationstyle",4]],["bool",15]]],[11,"eq","","",144,[[["skia_textlayout_rectheightstyle",4]],["bool",15]]],[11,"eq","skia_safe::gpu::vk","",29,[[["vkimagelayout",4]],["bool",15]]],[11,"eq","skia_safe","",96,[[["skpathverb",4]],["bool",15]]],[11,"eq","skia_safe::stroke_rec","",110,[[["skstrokerec_initstyle",4]],["bool",15]]],[11,"eq","skia_safe::gpu::vk","",35,[[["vksamplerycbcrmodelconversion",4]],["bool",15]]],[11,"eq","skia_safe","",87,[[["skpaint_cap",4]],["bool",15]]],[11,"uuidof","skia_safe::gpu::d3d","",12,[[],["guid",3]]],[11,"uuidof","","",15,[[],["guid",3]]],[11,"uuidof","","",14,[[],["guid",3]]],[11,"uuidof","","",13,[[],["guid",3]]],[11,"deref","","",12,[[],["id3d12pageable",3]]],[11,"deref","","",15,[[],["idxgiadapter",3]]],[11,"deref","","",14,[[],["id3d12pageable",3]]],[11,"deref","","",13,[[],["id3d12object",3]]],[11,"deref","","",254,[[]]],[11,"fmt","","",254,[[["formatter",3]],[["result",4],["error",3]]]],[11,"clone","","",254,[[],["comptr",3]]],[11,"drop","","",254,[[]]],[11,"eq","","",254,[[["comptr",3]],["bool",15]]],[11,"set_matrix","skia_safe::canvas","",210,[[["matrix",3]]]],[11,"type_name","skia_safe","",267,[[],["cstr",3]]],[11,"serialize","","",267,[[],["data",6]]],[11,"deserialize","","",267,[[],["option",4]]],[11,"set_scale","skia_safe::matrix44","",234,[[["scalar",6]]]],[11,"pre_scale","","",234,[[["scalar",6]]]],[11,"post_scale","","",234,[[["scalar",6]]]],[11,"set_scale","","",234,[[]]],[11,"pre_scale","","",234,[[]]],[11,"post_scale","","",234,[[]]],[11,"map_scalars","","",234,[[]]],[11,"map_scalars","","",234,[[]]],[11,"map2","","",234,[[]]],[11,"map2","","",234,[[]]],[11,"matches_color_type","skia_safe","",214,[[["colortype",4]],["bool",15]]],[11,"matches_color_type","","",173,[[["colortype",4]],["bool",15]]],[11,"round_out","","",194,[[],["irect",3]]],[11,"round_out","","",194,[[],["rect",3]]],[11,"combine","","",265,[[["regionop",4],["region",6],["irect",3]]]],[11,"combine","","",265,[[["region",6],["regionop",4],["irect",3]]]],[11,"combine","","",265,[[["region",6],["regionop",4]]]],[11,"intersects","","",270,[[["irect",3]],["bool",15]]],[11,"intersects","","",270,[[["region",6]],["bool",15]]],[11,"nearly_equal","","",271,[[["scalar",6]],["bool",15]]],[11,"nearly_zero","","",271,[[],["bool",15]]],[11,"contains","","",193,[[["ipoint",3]],["bool",15]]],[11,"contains","","",193,[[["irect",3]],["bool",15]]],[11,"contains","","",193,[[["rect",3]],["bool",15]]],[11,"contains","","",193,[[["irect",3]],["bool",15]]],[11,"contains","","",193,[[["rect",3]],["bool",15]]],[11,"contains","","",194,[[["point",3]],["bool",15]]],[11,"contains","","",194,[[["rect",3]],["bool",15]]],[11,"contains","","",194,[[["irect",3]],["bool",15]]],[11,"contains","","",270,[[["ipoint",3]],["bool",15]]],[11,"contains","","",270,[[["irect",3]],["bool",15]]],[11,"contains","","",270,[[["region",6]],["bool",15]]],[11,"quick_reject","skia_safe::canvas","",210,[[["rect",3]],["bool",15]]],[11,"quick_reject","","",210,[[["path",6]],["bool",15]]],[11,"quick_reject","skia_safe","",270,[[["irect",3]],["bool",15]]],[11,"quick_reject","","",270,[[["region",6]],["bool",15]]],[11,"consume","","",266,[[]]],[11,"end_of_current_run","","",266,[[],["usize",15]]],[11,"at_end","","",266,[[],["bool",15]]],[11,"as_run_handler","skia_safe::shaper","",264,[[]]],[11,"as_native_run_handler","","",264,[[],["skshaper_runhandler",3]]],[11,"can_send","skia_safe","",267,[[],["bool",15]]],[11,"wrap_send","","",267,[[],[["result",4],["sendable",3]]]],[11,"wrap","","",266,[[],["option",4]]],[11,"unwrap","","",266,[[]]],[11,"inner","","",266,[[]]],[11,"inner_mut","","",266,[[]]],[11,"wrap","","",267,[[],["option",4]]],[11,"unwrap","","",267,[[]]],[11,"inner","","",267,[[]]],[11,"inner_mut","","",267,[[]]],[11,"wrap","","",265,[[]]],[11,"unwrap","","",265,[[]]],[11,"inner","","",265,[[]]],[11,"inner_mut","","",265,[[]]],[11,"wrap_ref","","",265,[[]]],[11,"wrap_mut","","",265,[[]]],[11,"inner","","",265,[[]]],[11,"inner_mut","","",265,[[]]],[11,"drop","skia_safe::canvas","",211,[[]]],[11,"drop","","",212,[[]]],[11,"drop","skia_safe::font_arguments","",224,[[]]],[11,"drop","skia_safe::path","",235,[[]]],[11,"drop","","",236,[[]]],[11,"drop","skia_safe::path_effect","",94,[[]]],[11,"drop","skia_safe::region","",241,[[]]],[11,"drop","","",242,[[]]],[11,"drop","skia_safe::pdf","",250,[[]]],[11,"drop","skia_safe::gpu::vk","",259,[[]]],[11,"drop","skia_safe","",265,[[]]],[11,"drop","","",266,[[]]],[11,"drop","","",267,[[]]],[11,"drop","skia_safe::svg::canvas","",53,[[]]],[11,"as_mut","skia_safe::canvas","",210,[[],["canvas",3]]],[11,"as_mut","","",211,[[],["canvas",3]]],[11,"as_ref","skia_safe","",173,[[]]],[11,"as_ref","","",193,[[],["irect",3]]],[11,"as_ref","","",194,[[],["rect",3]]],[11,"as_ref","skia_safe::rrect","",243,[[],["rrect",3]]],[11,"as_ref","skia_safe","",265,[[],["str",15]]],[11,"as_ref","","",272,[[]]],[11,"as_ref","","",268,[[]]],[11,"as_ref","","",265,[[]]],[11,"as_ref","","",267,[[]]],[11,"from","","",214,[[["u32",15]]]],[11,"from","","",214,[[["rgb",3]]]],[11,"from","","",170,[[]]],[11,"from","","",171,[[]]],[11,"from","","",173,[[["color",3]]]],[11,"from","","",173,[[["u32",15]]]],[11,"from","","",173,[[["rgb",3]]]],[11,"from","skia_safe::font_style","",226,[[["i32",15]]]],[11,"from","","",227,[[["i32",15]]]],[11,"from","skia_safe","",229,[[["matrix",3]]]],[11,"from","","",229,[[["matrix",3]]]],[11,"from","","",229,[[["matrix44",3]]]],[11,"from","skia_safe::matrix44","",232,[[]]],[11,"from","","",232,[[]]],[11,"from","","",232,[[]]],[11,"from","","",232,[[]]],[11,"from","skia_safe::matrix","",231,[[["matrix44",3]]]],[11,"from","skia_safe","",190,[[]]],[11,"from","","",191,[[]]],[11,"from","","",191,[[["ipoint",3]]]],[11,"from","","",191,[[]]],[11,"from","","",192,[[]]],[11,"from","","",193,[[]]],[11,"from","","",194,[[]]],[11,"from","","",194,[[["isize",3]]]],[11,"from","","",194,[[["irect",3]]]],[11,"from","skia_safe::sampling_options","",106,[[["filtermode",4]]]],[11,"from","","",106,[[["filteroptions",3]]]],[11,"from","","",106,[[["cubicresampler",3]]]],[11,"from","","",106,[[["filterquality",4]]]],[11,"from","skia_safe","",199,[[]]],[11,"from","","",200,[[]]],[11,"from","","",200,[[["isize",3]]]],[11,"from","","",200,[[]]],[11,"from","","",246,[[]]],[11,"from","","",246,[[["u32",15]]]],[11,"from","skia_safe::gradient_shader","",128,[[]]],[11,"from","","",128,[[]]],[11,"from","skia_safe::image_filters","",252,[[["option",4],["croprect",3]]]],[11,"from","","",252,[[["croprect",3]]]],[11,"from","","",252,[[["irect",3]]]],[11,"from","","",252,[[["irect",3]]]],[11,"from","","",252,[[["rect",3]]]],[11,"from","","",252,[[["rect",3]]]],[11,"from","","",132,[[]]],[11,"from","skia_safe::gpu::d3d","",10,[[["cp",3],["id3d12resource",3]]]],[11,"from","skia_safe","",267,[[["grdirectcontext",3],["rchandle",3]]]],[11,"from","","",273,[[["nullhandle",3]]]],[11,"from","","",274,[[["nullhandle",3]]]],[11,"from","","",275,[[["nullhandle",3]]]],[11,"from","","",276,[[["nullhandle",3]]]],[11,"from","","",277,[[["nullhandle",3]]]],[11,"from","","",278,[[["nullhandle",3]]]],[11,"from","","",279,[[["nullhandle",3]]]],[11,"from","","",280,[[["nullhandle",3]]]],[11,"from","","",281,[[["nullhandle",3]]]],[11,"from","skia_safe::gpu::vk","",38,[[["u32",15]]]],[11,"from","","",38,[[]]],[11,"from","skia_safe","",282,[[["typefacefontprovider",6]]]],[11,"from","","",267,[[["rchandle",3]]]],[11,"from","skia_safe::utils","",60,[[["path",6]]]],[11,"from","","",60,[[]]],[11,"from","","",60,[[]]],[11,"from","","",60,[[]]],[11,"extend","skia_safe::canvas","",208,[[["intoiterator",8]]]],[11,"extend","skia_safe","",215,[[["intoiterator",8]]]],[11,"extend","skia_safe::color_filter","",216,[[["intoiterator",8]]]],[11,"extend","skia_safe::contour_measure","",218,[[["intoiterator",8]]]],[11,"extend","skia_safe::font_metrics","",225,[[["intoiterator",8]]]],[11,"extend","skia_safe::matrix","",230,[[["intoiterator",8]]]],[11,"extend","skia_safe::matrix44","",233,[[["intoiterator",8]]]],[11,"extend","skia_safe::path_effect::point_data","",237,[[["intoiterator",8]]]],[11,"extend","skia_safe::path_measure","",238,[[["intoiterator",8]]]],[11,"extend","skia_safe::path","",239,[[["intoiterator",8]]]],[11,"extend","skia_safe","",244,[[["intoiterator",8]]]],[11,"extend","skia_safe::vertices","",249,[[["intoiterator",8]]]],[11,"extend","skia_safe::gradient_shader","",251,[[["intoiterator",8]]]],[11,"extend","skia_safe::runtime_effect::uniform","",253,[[["intoiterator",8]]]],[11,"extend","skia_safe::gpu::gl","",255,[[["intoiterator",8]]]],[11,"extend","skia_safe::gpu::vk","",257,[[["intoiterator",8]]]],[11,"extend","","",258,[[["intoiterator",8]]]],[11,"extend","","",260,[[["intoiterator",8]]]],[11,"extend","skia_safe::textlayout","",262,[[["intoiterator",8]]]],[11,"extend","skia_safe::svg::canvas","",52,[[["intoiterator",8]]]],[11,"extend","skia_safe::utils::shadow_utils","",56,[[["intoiterator",8]]]],[11,"next","skia_safe","",265,[[],["option",4]]],[11,"next","","",220,[[],["option",4]]],[11,"next","skia_safe::path","",235,[[],["option",4]]],[11,"next","","",236,[[],["option",4]]],[11,"next","skia_safe::region","",240,[[],["option",4]]],[11,"next","","",241,[[],["option",4]]],[11,"next","","",242,[[],["option",4]]],[11,"next","skia_safe","",268,[[],["option",4]]],[11,"next","","",266,[[],["option",4]]],[11,"clone","skia_safe::codec","",3,[[],["options",3]]],[11,"clone","","",5,[[],["encodedorigin",4]]],[11,"clone","skia_safe::canvas","",208,[[],["savelayerflags",3]]],[11,"clone","skia_safe","",214,[[],["color",3]]],[11,"clone","","",170,[[],["rgb",3]]],[11,"clone","","",171,[[],["hsv",3]]],[11,"clone","","",215,[[],["colorchannelflag",3]]],[11,"clone","","",173,[[],["color4f",3]]],[11,"clone","skia_safe::color_filter","",216,[[],["flags",3]]],[11,"clone","skia_safe","",217,[[],["colorspaceprimaries",3]]],[11,"clone","","",174,[[],["colorspacetransferfn",3]]],[11,"clone","","",175,[[],["xyzd50hash",3]]],[11,"clone","skia_safe::contour_measure","",218,[[],["matrixflags",3]]],[11,"clone","skia_safe","",219,[[],["cubicmap",3]]],[11,"clone","skia_safe::font_arguments::variation_position","",69,[[],["coordinate",3]]],[11,"clone","skia_safe::font_metrics","",225,[[],["flags",3]]],[11,"clone","","",71,[[],["fontmetrics",3]]],[11,"clone","skia_safe::font_parameters::variation","",72,[[],["axis",3]]],[11,"clone","skia_safe::font_style","",226,[[],["weight",3]]],[11,"clone","","",227,[[],["width",3]]],[11,"clone","","",228,[[],["fontstyle",3]]],[11,"clone","skia_safe","",181,[[],["textencoding",4]]],[11,"clone","","",184,[[],["colortype",4]]],[11,"clone","","",186,[[],["v2",3]]],[11,"clone","","",187,[[],["v3",3]]],[11,"clone","","",188,[[],["v4",3]]],[11,"clone","","",229,[[],["m44",3]]],[11,"clone","skia_safe::matrix","",230,[[],["typemask",3]]],[11,"clone","","",231,[[],["matrix",3]]],[11,"clone","","",81,[[],["member",4]]],[11,"clone","","",82,[[],["affinemember",4]]],[11,"clone","skia_safe::matrix44","",232,[[],["vector4",3]]],[11,"clone","","",233,[[],["typemask",3]]],[11,"clone","","",234,[[],["matrix44",3]]],[11,"clone","skia_safe","",283,[[]]],[11,"clone","skia_safe::path_effect::point_data","",237,[[],["pointflags",3]]],[11,"clone","skia_safe::path_effect","",95,[[],["dashinfo",3]]],[11,"clone","skia_safe::path_measure","",238,[[],["matrixflags",3]]],[11,"clone","skia_safe::path","",239,[[],["pathsegmentmask",3]]],[11,"clone","skia_safe","",190,[[],["ipoint",3]]],[11,"clone","","",191,[[],["point",3]]],[11,"clone","","",192,[[],["point3",3]]],[11,"clone","","",193,[[],["irect",3]]],[11,"clone","","",194,[[],["rect",3]]],[11,"clone","skia_safe::region","",240,[[],["iterator",3]]],[11,"clone","","",241,[[],["cliperator",3]]],[11,"clone","","",242,[[],["spanerator",3]]],[11,"clone","skia_safe::rrect","",243,[[],["rrect",3]]],[11,"clone","skia_safe","",196,[[],["rsxform",3]]],[11,"clone","skia_safe::image","",74,[[],["cubicresampler",3]]],[11,"clone","skia_safe::sampling_options","",104,[[],["filteroptions",3]]],[11,"clone","","",105,[[],["mediumbehavior",4]]],[11,"clone","","",106,[[],["samplingoptions",3]]],[11,"clone","skia_safe::shader","",108,[[],["gradienttype",4]]],[11,"clone","","",109,[[],["gradientinfo",3]]],[11,"clone","skia_safe","",199,[[],["isize",3]]],[11,"clone","","",200,[[],["size",3]]],[11,"clone","","",201,[[],["pixelgeometry",4]]],[11,"clone","","",244,[[],["surfacepropsflags",3]]],[11,"clone","","",245,[[]]],[11,"clone","","",204,[[],["datetime",3]]],[11,"clone","skia_safe::typeface","",116,[[],["localizedstring",3]]],[11,"clone","skia_safe","",246,[[],["fourbytetag",3]]],[11,"clone","","",247,[[],["budgeted",3]]],[11,"clone","skia_safe::vertices","",248,[[],["bone",3]]],[11,"clone","","",118,[[],["attributetype",4]]],[11,"clone","","",120,[[],["attribute",3]]],[11,"clone","","",249,[[],["builderflags",3]]],[11,"clone","skia_safe::yuva_info","",122,[[],["subsampling",4]]],[11,"clone","skia_safe::gradient_shader","",251,[[],["flags",3]]],[11,"clone","skia_safe::high_contrast_filter","",130,[[],["highcontrastconfig",3]]],[11,"clone","skia_safe::image_filters","",252,[[],["croprect",3]]],[11,"clone","","",132,[[],["arithmeticfpinputs",3]]],[11,"clone","skia_safe::runtime_effect::uniform","",253,[[],["flags",3]]],[11,"clone","skia_safe::runtime_effect","",134,[[],["options",3]]],[11,"clone","skia_safe::gpu::d3d","",9,[[],["backendcontext",3]]],[11,"clone","","",10,[[],["textureresourceinfo",3]]],[11,"clone","","",11,[[],["fenceinfo",3]]],[11,"clone","skia_safe::gpu","",39,[[],["resourcecachelimits",3]]],[11,"clone","","",40,[[],["resourcecacheusage",3]]],[11,"clone","skia_safe::gpu::gl","",18,[[],["textureinfo",3]]],[11,"clone","","",19,[[],["framebufferinfo",3]]],[11,"clone","","",255,[[],["backendstate",3]]],[11,"clone","skia_safe::gpu::vk","",257,[[],["extensionflags",3]]],[11,"clone","","",258,[[],["featureflags",3]]],[11,"clone","","",20,[[],["alloc",3]]],[11,"clone","","",260,[[],["allocflag",3]]],[11,"clone","","",21,[[],["ycbcrconversioninfo",3]]],[11,"clone","","",22,[[],["imageinfo",3]]],[11,"clone","","",23,[[],["getprocof",4]]],[11,"clone","","",24,[[],["drawableinfo",3]]],[11,"clone","","",38,[[],["version",3]]],[11,"clone","skia_safe::textlayout","",149,[[],["textbox",3]]],[11,"clone","skia_safe","",284,[[]]],[11,"clone","skia_safe::textlayout","",156,[[],["textshadow",3]]],[11,"clone","","",262,[[],["textdecoration",3]]],[11,"clone","","",160,[[],["decoration",3]]],[11,"clone","","",162,[[],["placeholderstyle",3]]],[11,"clone","","",163,[[],["block",3]]],[11,"clone","","",164,[[],["placeholder",3]]],[11,"clone","skia_safe","",265,[[]]],[11,"clone","","",267,[[]]],[11,"clone","skia_safe::svg::canvas","",52,[[],["flags",3]]],[11,"clone","skia_safe::utils","",58,[[],["patch3d",3]]],[11,"clone","","",59,[[],["camera3d",3]]],[11,"clone","skia_safe::utils::interpolator","",55,[[],["timetot",3]]],[11,"clone","skia_safe::utils::shadow_utils","",56,[[],["shadowflags",3]]],[11,"default","skia_safe::codec","",5,[[]]],[11,"default","skia_safe","See [RCHandle::new()].",285,[[]]],[11,"default","skia_safe::canvas","",209,[[]]],[11,"default","","",211,[[]]],[11,"default","skia_safe","",214,[[],["color",3]]],[11,"default","skia_safe::contour_measure","",218,[[]]],[11,"default","skia_safe","",286,[[]]],[11,"default","skia_safe::font_arguments::variation_position","",69,[[],["coordinate",3]]],[11,"default","skia_safe::font_arguments","",224,[[]]],[11,"default","skia_safe::font_metrics","",225,[[],["flags",3]]],[11,"default","","",71,[[],["fontmetrics",3]]],[11,"default","skia_safe","",267,[[]]],[11,"default","","",267,[[]]],[11,"default","skia_safe::font_parameters::variation","",72,[[],["axis",3]]],[11,"default","skia_safe::font_style","",228,[[]]],[11,"default","skia_safe","",181,[[]]],[11,"default","","",265,[[]]],[11,"default","","",265,[[]]],[11,"default","","",186,[[],["v2",3]]],[11,"default","","",187,[[],["v3",3]]],[11,"default","","",188,[[],["v4",3]]],[11,"default","","",229,[[]]],[11,"default","skia_safe::matrix","",231,[[]]],[11,"default","skia_safe::matrix44","",232,[[]]],[11,"default","","",234,[[]]],[11,"default","skia_safe","",265,[[]]],[11,"default","skia_safe::path","",235,[[]]],[11,"default","","",236,[[]]],[11,"default","skia_safe","",265,[[]]],[11,"default","skia_safe::path_effect","",94,[[]]],[11,"default","skia_safe::path_measure","",238,[[]]],[11,"default","skia_safe","",265,[[]]],[11,"default","","",287,[[]]],[11,"default","","",190,[[],["ipoint",3]]],[11,"default","","",191,[[],["point",3]]],[11,"default","","",192,[[],["point3",3]]],[11,"default","","",193,[[],["irect",3]]],[11,"default","","",194,[[],["rect",3]]],[11,"default","skia_safe::rrect","",243,[[]]],[11,"default","skia_safe::sampling_options","",106,[[]]],[11,"default","skia_safe","",267,[[]]],[11,"default","","",199,[[],["isize",3]]],[11,"default","","",200,[[],["size",3]]],[11,"default","","",265,[[]]],[11,"default","","",201,[[]]],[11,"default","","",244,[[]]],[11,"default","","",245,[[]]],[11,"default","","",267,[[]]],[11,"default","","",246,[[],["fourbytetag",3]]],[11,"default","skia_safe::vertices","",120,[[]]],[11,"default","skia_safe","",288,[[]]],[11,"default","","Defaults to nothing supported.",289,[[]]],[11,"default","","",290,[[]]],[11,"default","skia_safe::pdf","",250,[[]]],[11,"default","","",126,[[],["metadata",3]]],[11,"default","skia_safe","",265,[[]]],[11,"default","","",265,[[]]],[11,"default","skia_safe::gradient_shader","",251,[[]]],[11,"default","skia_safe::high_contrast_filter","",130,[[]]],[11,"default","skia_safe::image_filters","",252,[[]]],[11,"default","skia_safe::runtime_effect","",134,[[],["options",3]]],[11,"default","skia_safe","",291,[[]]],[11,"default","skia_safe::gpu::context_options","",8,[[]]],[11,"default","skia_safe::gpu::gl","",18,[[]]],[11,"default","","",19,[[]]],[11,"default","skia_safe::gpu","",256,[[]]],[11,"default","skia_safe::gpu::vk","",20,[[]]],[11,"default","","",21,[[]]],[11,"default","","",22,[[]]],[11,"default","","",24,[[]]],[11,"default","skia_safe","",265,[[]]],[11,"default","","",265,[[]]],[11,"default","","",266,[[]]],[11,"default","skia_safe::textlayout","",156,[[]]],[11,"default","","",262,[[]]],[11,"default","","",160,[[],["decoration",3]]],[11,"default","","",162,[[],["placeholderstyle",3]]],[11,"default","skia_safe","",265,[[]]],[11,"default","skia_safe::textlayout","",163,[[]]],[11,"default","","",164,[[]]],[11,"default","skia_safe","",267,[[]]],[11,"default","","",292,[[]]],[11,"default","","",265,[[]]],[11,"default","skia_safe::svg::canvas","",52,[[],["flags",3]]],[11,"default","skia_safe::utils","",58,[[]]],[11,"default","","",59,[[]]],[11,"default","skia_safe","",293,[[]]],[11,"default","","",265,[[]]],[11,"cmp","skia_safe::canvas","",208,[[["savelayerflags",3]],["ordering",4]]],[11,"cmp","skia_safe","",215,[[["colorchannelflag",3]],["ordering",4]]],[11,"cmp","skia_safe::color_filter","",216,[[["flags",3]],["ordering",4]]],[11,"cmp","skia_safe::contour_measure","",218,[[["matrixflags",3]],["ordering",4]]],[11,"cmp","skia_safe::font_metrics","",225,[[["flags",3]],["ordering",4]]],[11,"cmp","skia_safe::matrix","",230,[[["typemask",3]],["ordering",4]]],[11,"cmp","skia_safe::matrix44","",233,[[["typemask",3]],["ordering",4]]],[11,"cmp","skia_safe::path_effect::point_data","",237,[[["pointflags",3]],["ordering",4]]],[11,"cmp","skia_safe::path_measure","",238,[[["matrixflags",3]],["ordering",4]]],[11,"cmp","skia_safe::path","",239,[[["pathsegmentmask",3]],["ordering",4]]],[11,"cmp","skia_safe","",244,[[["surfacepropsflags",3]],["ordering",4]]],[11,"cmp","skia_safe::vertices","",249,[[["builderflags",3]],["ordering",4]]],[11,"cmp","skia_safe::gradient_shader","",251,[[["flags",3]],["ordering",4]]],[11,"cmp","skia_safe::runtime_effect::uniform","",253,[[["flags",3]],["ordering",4]]],[11,"cmp","skia_safe::gpu::gl","",255,[[["backendstate",3]],["ordering",4]]],[11,"cmp","skia_safe::gpu::vk","",257,[[["extensionflags",3]],["ordering",4]]],[11,"cmp","","",258,[[["featureflags",3]],["ordering",4]]],[11,"cmp","","",260,[[["allocflag",3]],["ordering",4]]],[11,"cmp","","",38,[[["version",3]],["ordering",4]]],[11,"cmp","skia_safe::textlayout","",262,[[["textdecoration",3]],["ordering",4]]],[11,"cmp","skia_safe::svg::canvas","",52,[[["flags",3]],["ordering",4]]],[11,"cmp","skia_safe::utils::shadow_utils","",56,[[["shadowflags",3]],["ordering",4]]],[11,"eq","skia_safe::codec","",3,[[["options",3]],["bool",15]]],[11,"ne","","",3,[[["options",3]],["bool",15]]],[11,"eq","","",5,[[["encodedorigin",4]],["bool",15]]],[11,"eq","skia_safe::canvas","",208,[[["savelayerflags",3]],["bool",15]]],[11,"ne","","",208,[[["savelayerflags",3]],["bool",15]]],[11,"eq","skia_safe","",214,[[["color",3]],["bool",15]]],[11,"ne","","",214,[[["color",3]],["bool",15]]],[11,"eq","","",170,[[["rgb",3]],["bool",15]]],[11,"ne","","",170,[[["rgb",3]],["bool",15]]],[11,"eq","","",171,[[["hsv",3]],["bool",15]]],[11,"ne","","",171,[[["hsv",3]],["bool",15]]],[11,"eq","","",215,[[["colorchannelflag",3]],["bool",15]]],[11,"ne","","",215,[[["colorchannelflag",3]],["bool",15]]],[11,"eq","","",173,[[["color4f",3]],["bool",15]]],[11,"ne","","",173,[[["color4f",3]],["bool",15]]],[11,"eq","skia_safe::color_filter","",216,[[["flags",3]],["bool",15]]],[11,"ne","","",216,[[["flags",3]],["bool",15]]],[11,"eq","skia_safe","",217,[[["colorspaceprimaries",3]],["bool",15]]],[11,"ne","","",217,[[["colorspaceprimaries",3]],["bool",15]]],[11,"eq","","",174,[[["colorspacetransferfn",3]],["bool",15]]],[11,"ne","","",174,[[["colorspacetransferfn",3]],["bool",15]]],[11,"eq","","",175,[[["xyzd50hash",3]],["bool",15]]],[11,"ne","","",175,[[["xyzd50hash",3]],["bool",15]]],[11,"eq","skia_safe::contour_measure","",218,[[["matrixflags",3]],["bool",15]]],[11,"ne","","",218,[[["matrixflags",3]],["bool",15]]],[11,"eq","skia_safe","",267,[[],["bool",15]]],[11,"eq","skia_safe::font_arguments::variation_position","",69,[[["coordinate",3]],["bool",15]]],[11,"ne","","",69,[[["coordinate",3]],["bool",15]]],[11,"eq","skia_safe::font_metrics","",225,[[["flags",3]],["bool",15]]],[11,"ne","","",225,[[["flags",3]],["bool",15]]],[11,"eq","","",71,[[["fontmetrics",3]],["bool",15]]],[11,"ne","","",71,[[["fontmetrics",3]],["bool",15]]],[11,"eq","skia_safe::font_parameters::variation","",72,[[["axis",3]],["bool",15]]],[11,"ne","","",72,[[["axis",3]],["bool",15]]],[11,"eq","skia_safe::font_style","",226,[[["weight",3]],["bool",15]]],[11,"ne","","",226,[[["weight",3]],["bool",15]]],[11,"eq","","",227,[[["width",3]],["bool",15]]],[11,"ne","","",227,[[["width",3]],["bool",15]]],[11,"eq","","",228,[[],["bool",15]]],[11,"eq","skia_safe","",181,[[["textencoding",4]],["bool",15]]],[11,"eq","","",184,[[["colortype",4]],["bool",15]]],[11,"eq","","",186,[[["v2",3]],["bool",15]]],[11,"ne","","",186,[[["v2",3]],["bool",15]]],[11,"eq","","",187,[[["v3",3]],["bool",15]]],[11,"ne","","",187,[[["v3",3]],["bool",15]]],[11,"eq","","",188,[[["v4",3]],["bool",15]]],[11,"ne","","",188,[[["v4",3]],["bool",15]]],[11,"eq","","",229,[[],["bool",15]]],[11,"eq","skia_safe::matrix","",230,[[["typemask",3]],["bool",15]]],[11,"ne","","",230,[[["typemask",3]],["bool",15]]],[11,"eq","","",231,[[],["bool",15]]],[11,"eq","","",81,[[["member",4]],["bool",15]]],[11,"eq","","",82,[[["affinemember",4]],["bool",15]]],[11,"eq","skia_safe::matrix44","",232,[[["vector4",3]],["bool",15]]],[11,"ne","","",232,[[["vector4",3]],["bool",15]]],[11,"eq","","",233,[[["typemask",3]],["bool",15]]],[11,"ne","","",233,[[["typemask",3]],["bool",15]]],[11,"eq","","",234,[[],["bool",15]]],[11,"eq","skia_safe::path_effect::point_data","",237,[[["pointflags",3]],["bool",15]]],[11,"ne","","",237,[[["pointflags",3]],["bool",15]]],[11,"eq","skia_safe::path_effect","",95,[[["dashinfo",3]],["bool",15]]],[11,"ne","","",95,[[["dashinfo",3]],["bool",15]]],[11,"eq","skia_safe::path_measure","",238,[[["matrixflags",3]],["bool",15]]],[11,"ne","","",238,[[["matrixflags",3]],["bool",15]]],[11,"eq","skia_safe::path","",239,[[["pathsegmentmask",3]],["bool",15]]],[11,"ne","","",239,[[["pathsegmentmask",3]],["bool",15]]],[11,"eq","skia_safe","",190,[[["ipoint",3]],["bool",15]]],[11,"ne","","",190,[[["ipoint",3]],["bool",15]]],[11,"eq","","",191,[[["point",3]],["bool",15]]],[11,"ne","","",191,[[["point",3]],["bool",15]]],[11,"eq","","",192,[[["point3",3]],["bool",15]]],[11,"ne","","",192,[[["point3",3]],["bool",15]]],[11,"eq","","",193,[[["irect",3]],["bool",15]]],[11,"ne","","",193,[[["irect",3]],["bool",15]]],[11,"eq","","",194,[[["rect",3]],["bool",15]]],[11,"ne","","",194,[[["rect",3]],["bool",15]]],[11,"eq","skia_safe::rrect","",243,[[],["bool",15]]],[11,"eq","skia_safe","",196,[[["rsxform",3]],["bool",15]]],[11,"ne","","",196,[[["rsxform",3]],["bool",15]]],[11,"eq","skia_safe::image","",74,[[["cubicresampler",3]],["bool",15]]],[11,"ne","","",74,[[["cubicresampler",3]],["bool",15]]],[11,"eq","skia_safe::sampling_options","",104,[[["filteroptions",3]],["bool",15]]],[11,"ne","","",104,[[["filteroptions",3]],["bool",15]]],[11,"eq","","",105,[[["mediumbehavior",4]],["bool",15]]],[11,"eq","","",106,[[["samplingoptions",3]],["bool",15]]],[11,"ne","","",106,[[["samplingoptions",3]],["bool",15]]],[11,"eq","skia_safe::shader","",108,[[["gradienttype",4]],["bool",15]]],[11,"ne","","",108,[[["gradienttype",4]],["bool",15]]],[11,"eq","","",109,[[["gradientinfo",3]],["bool",15]]],[11,"ne","","",109,[[["gradientinfo",3]],["bool",15]]],[11,"eq","skia_safe","",199,[[["isize",3]],["bool",15]]],[11,"ne","","",199,[[["isize",3]],["bool",15]]],[11,"eq","","",200,[[["size",3]],["bool",15]]],[11,"ne","","",200,[[["size",3]],["bool",15]]],[11,"eq","","",201,[[["pixelgeometry",4]],["bool",15]]],[11,"eq","","",244,[[["surfacepropsflags",3]],["bool",15]]],[11,"ne","","",244,[[["surfacepropsflags",3]],["bool",15]]],[11,"eq","","",245,[[],["bool",15]]],[11,"eq","","",204,[[["datetime",3]],["bool",15]]],[11,"ne","","",204,[[["datetime",3]],["bool",15]]],[11,"eq","skia_safe::typeface","",116,[[["localizedstring",3]],["bool",15]]],[11,"ne","","",116,[[["localizedstring",3]],["bool",15]]],[11,"eq","skia_safe","",246,[[["fourbytetag",3]],["bool",15]]],[11,"ne","","",246,[[["fourbytetag",3]],["bool",15]]],[11,"eq","","",247,[[["budgeted",3]],["bool",15]]],[11,"ne","","",247,[[["budgeted",3]],["bool",15]]],[11,"eq","skia_safe::vertices","",248,[[["bone",3]],["bool",15]]],[11,"ne","","",248,[[["bone",3]],["bool",15]]],[11,"eq","","",118,[[["attributetype",4]],["bool",15]]],[11,"eq","","",120,[[],["bool",15]]],[11,"eq","","",249,[[["builderflags",3]],["bool",15]]],[11,"ne","","",249,[[["builderflags",3]],["bool",15]]],[11,"eq","skia_safe::yuva_info","",122,[[["subsampling",4]],["bool",15]]],[11,"eq","skia_safe","",265,[[],["bool",15]]],[11,"eq","skia_safe::gradient_shader","",251,[[["flags",3]],["bool",15]]],[11,"ne","","",251,[[["flags",3]],["bool",15]]],[11,"eq","skia_safe::high_contrast_filter","",130,[[["highcontrastconfig",3]],["bool",15]]],[11,"ne","","",130,[[["highcontrastconfig",3]],["bool",15]]],[11,"eq","skia_safe::image_filters","",252,[[["croprect",3]],["bool",15]]],[11,"ne","","",252,[[["croprect",3]],["bool",15]]],[11,"eq","","",132,[[["arithmeticfpinputs",3]],["bool",15]]],[11,"ne","","",132,[[["arithmeticfpinputs",3]],["bool",15]]],[11,"eq","skia_safe::runtime_effect::uniform","",253,[[["flags",3]],["bool",15]]],[11,"ne","","",253,[[["flags",3]],["bool",15]]],[11,"eq","skia_safe::runtime_effect","",134,[[["options",3]],["bool",15]]],[11,"ne","","",134,[[["options",3]],["bool",15]]],[11,"eq","skia_safe::gpu","",39,[[["resourcecachelimits",3]],["bool",15]]],[11,"ne","","",39,[[["resourcecachelimits",3]],["bool",15]]],[11,"eq","","",40,[[["resourcecacheusage",3]],["bool",15]]],[11,"ne","","",40,[[["resourcecacheusage",3]],["bool",15]]],[11,"eq","skia_safe::gpu::gl","",18,[[],["bool",15]]],[11,"eq","","",19,[[["framebufferinfo",3]],["bool",15]]],[11,"ne","","",19,[[["framebufferinfo",3]],["bool",15]]],[11,"eq","","",255,[[["backendstate",3]],["bool",15]]],[11,"ne","","",255,[[["backendstate",3]],["bool",15]]],[11,"eq","skia_safe::gpu::vk","",257,[[["extensionflags",3]],["bool",15]]],[11,"ne","","",257,[[["extensionflags",3]],["bool",15]]],[11,"eq","","",258,[[["featureflags",3]],["bool",15]]],[11,"ne","","",258,[[["featureflags",3]],["bool",15]]],[11,"eq","","",20,[[],["bool",15]]],[11,"eq","","",260,[[["allocflag",3]],["bool",15]]],[11,"ne","","",260,[[["allocflag",3]],["bool",15]]],[11,"eq","","",21,[[],["bool",15]]],[11,"eq","","",38,[[["version",3]],["bool",15]]],[11,"ne","","",38,[[["version",3]],["bool",15]]],[11,"eq","skia_safe::textlayout","",149,[[["textbox",3]],["bool",15]]],[11,"ne","","",149,[[["textbox",3]],["bool",15]]],[11,"eq","","",156,[[],["bool",15]]],[11,"eq","","",262,[[["textdecoration",3]],["bool",15]]],[11,"ne","","",262,[[["textdecoration",3]],["bool",15]]],[11,"eq","","",160,[[["decoration",3]],["bool",15]]],[11,"ne","","",160,[[["decoration",3]],["bool",15]]],[11,"eq","skia_safe","",265,[[],["bool",15]]],[11,"eq","skia_safe::textlayout","",162,[[],["bool",15]]],[11,"eq","","",163,[[["block",3]],["bool",15]]],[11,"ne","","",163,[[["block",3]],["bool",15]]],[11,"eq","","",164,[[["placeholder",3]],["bool",15]]],[11,"ne","","",164,[[["placeholder",3]],["bool",15]]],[11,"eq","skia_safe","",265,[[],["bool",15]]],[11,"eq","","",267,[[],["bool",15]]],[11,"eq","skia_safe::svg::canvas","",52,[[["flags",3]],["bool",15]]],[11,"ne","","",52,[[["flags",3]],["bool",15]]],[11,"eq","skia_safe::utils","",58,[[["patch3d",3]],["bool",15]]],[11,"ne","","",58,[[["patch3d",3]],["bool",15]]],[11,"eq","","",59,[[["camera3d",3]],["bool",15]]],[11,"ne","","",59,[[["camera3d",3]],["bool",15]]],[11,"eq","skia_safe::utils::interpolator","",55,[[["timetot",3]],["bool",15]]],[11,"ne","","",55,[[["timetot",3]],["bool",15]]],[11,"eq","skia_safe::utils::shadow_utils","",56,[[["shadowflags",3]],["bool",15]]],[11,"ne","","",56,[[["shadowflags",3]],["bool",15]]],[11,"partial_cmp","skia_safe::canvas","",208,[[["savelayerflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",208,[[["savelayerflags",3]],["bool",15]]],[11,"le","","",208,[[["savelayerflags",3]],["bool",15]]],[11,"gt","","",208,[[["savelayerflags",3]],["bool",15]]],[11,"ge","","",208,[[["savelayerflags",3]],["bool",15]]],[11,"partial_cmp","skia_safe","",215,[[["colorchannelflag",3]],[["ordering",4],["option",4]]]],[11,"lt","","",215,[[["colorchannelflag",3]],["bool",15]]],[11,"le","","",215,[[["colorchannelflag",3]],["bool",15]]],[11,"gt","","",215,[[["colorchannelflag",3]],["bool",15]]],[11,"ge","","",215,[[["colorchannelflag",3]],["bool",15]]],[11,"partial_cmp","skia_safe::color_filter","",216,[[["flags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",216,[[["flags",3]],["bool",15]]],[11,"le","","",216,[[["flags",3]],["bool",15]]],[11,"gt","","",216,[[["flags",3]],["bool",15]]],[11,"ge","","",216,[[["flags",3]],["bool",15]]],[11,"partial_cmp","skia_safe::contour_measure","",218,[[["matrixflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",218,[[["matrixflags",3]],["bool",15]]],[11,"le","","",218,[[["matrixflags",3]],["bool",15]]],[11,"gt","","",218,[[["matrixflags",3]],["bool",15]]],[11,"ge","","",218,[[["matrixflags",3]],["bool",15]]],[11,"partial_cmp","skia_safe::font_metrics","",225,[[["flags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",225,[[["flags",3]],["bool",15]]],[11,"le","","",225,[[["flags",3]],["bool",15]]],[11,"gt","","",225,[[["flags",3]],["bool",15]]],[11,"ge","","",225,[[["flags",3]],["bool",15]]],[11,"partial_cmp","skia_safe::font_style","",226,[[["weight",3]],[["ordering",4],["option",4]]]],[11,"lt","","",226,[[["weight",3]],["bool",15]]],[11,"le","","",226,[[["weight",3]],["bool",15]]],[11,"gt","","",226,[[["weight",3]],["bool",15]]],[11,"ge","","",226,[[["weight",3]],["bool",15]]],[11,"partial_cmp","","",227,[[["width",3]],[["ordering",4],["option",4]]]],[11,"lt","","",227,[[["width",3]],["bool",15]]],[11,"le","","",227,[[["width",3]],["bool",15]]],[11,"gt","","",227,[[["width",3]],["bool",15]]],[11,"ge","","",227,[[["width",3]],["bool",15]]],[11,"partial_cmp","skia_safe::matrix","",230,[[["typemask",3]],[["ordering",4],["option",4]]]],[11,"lt","","",230,[[["typemask",3]],["bool",15]]],[11,"le","","",230,[[["typemask",3]],["bool",15]]],[11,"gt","","",230,[[["typemask",3]],["bool",15]]],[11,"ge","","",230,[[["typemask",3]],["bool",15]]],[11,"partial_cmp","skia_safe::matrix44","",233,[[["typemask",3]],[["ordering",4],["option",4]]]],[11,"lt","","",233,[[["typemask",3]],["bool",15]]],[11,"le","","",233,[[["typemask",3]],["bool",15]]],[11,"gt","","",233,[[["typemask",3]],["bool",15]]],[11,"ge","","",233,[[["typemask",3]],["bool",15]]],[11,"partial_cmp","skia_safe::path_effect::point_data","",237,[[["pointflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",237,[[["pointflags",3]],["bool",15]]],[11,"le","","",237,[[["pointflags",3]],["bool",15]]],[11,"gt","","",237,[[["pointflags",3]],["bool",15]]],[11,"ge","","",237,[[["pointflags",3]],["bool",15]]],[11,"partial_cmp","skia_safe::path_measure","",238,[[["matrixflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",238,[[["matrixflags",3]],["bool",15]]],[11,"le","","",238,[[["matrixflags",3]],["bool",15]]],[11,"gt","","",238,[[["matrixflags",3]],["bool",15]]],[11,"ge","","",238,[[["matrixflags",3]],["bool",15]]],[11,"partial_cmp","skia_safe::path","",239,[[["pathsegmentmask",3]],[["ordering",4],["option",4]]]],[11,"lt","","",239,[[["pathsegmentmask",3]],["bool",15]]],[11,"le","","",239,[[["pathsegmentmask",3]],["bool",15]]],[11,"gt","","",239,[[["pathsegmentmask",3]],["bool",15]]],[11,"ge","","",239,[[["pathsegmentmask",3]],["bool",15]]],[11,"partial_cmp","skia_safe","",244,[[["surfacepropsflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",244,[[["surfacepropsflags",3]],["bool",15]]],[11,"le","","",244,[[["surfacepropsflags",3]],["bool",15]]],[11,"gt","","",244,[[["surfacepropsflags",3]],["bool",15]]],[11,"ge","","",244,[[["surfacepropsflags",3]],["bool",15]]],[11,"partial_cmp","skia_safe::vertices","",249,[[["builderflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",249,[[["builderflags",3]],["bool",15]]],[11,"le","","",249,[[["builderflags",3]],["bool",15]]],[11,"gt","","",249,[[["builderflags",3]],["bool",15]]],[11,"ge","","",249,[[["builderflags",3]],["bool",15]]],[11,"partial_cmp","skia_safe::gradient_shader","",251,[[["flags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",251,[[["flags",3]],["bool",15]]],[11,"le","","",251,[[["flags",3]],["bool",15]]],[11,"gt","","",251,[[["flags",3]],["bool",15]]],[11,"ge","","",251,[[["flags",3]],["bool",15]]],[11,"partial_cmp","skia_safe::runtime_effect::uniform","",253,[[["flags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",253,[[["flags",3]],["bool",15]]],[11,"le","","",253,[[["flags",3]],["bool",15]]],[11,"gt","","",253,[[["flags",3]],["bool",15]]],[11,"ge","","",253,[[["flags",3]],["bool",15]]],[11,"partial_cmp","skia_safe::gpu::gl","",255,[[["backendstate",3]],[["ordering",4],["option",4]]]],[11,"lt","","",255,[[["backendstate",3]],["bool",15]]],[11,"le","","",255,[[["backendstate",3]],["bool",15]]],[11,"gt","","",255,[[["backendstate",3]],["bool",15]]],[11,"ge","","",255,[[["backendstate",3]],["bool",15]]],[11,"partial_cmp","skia_safe::gpu::vk","",257,[[["extensionflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",257,[[["extensionflags",3]],["bool",15]]],[11,"le","","",257,[[["extensionflags",3]],["bool",15]]],[11,"gt","","",257,[[["extensionflags",3]],["bool",15]]],[11,"ge","","",257,[[["extensionflags",3]],["bool",15]]],[11,"partial_cmp","","",258,[[["featureflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",258,[[["featureflags",3]],["bool",15]]],[11,"le","","",258,[[["featureflags",3]],["bool",15]]],[11,"gt","","",258,[[["featureflags",3]],["bool",15]]],[11,"ge","","",258,[[["featureflags",3]],["bool",15]]],[11,"partial_cmp","","",260,[[["allocflag",3]],[["ordering",4],["option",4]]]],[11,"lt","","",260,[[["allocflag",3]],["bool",15]]],[11,"le","","",260,[[["allocflag",3]],["bool",15]]],[11,"gt","","",260,[[["allocflag",3]],["bool",15]]],[11,"ge","","",260,[[["allocflag",3]],["bool",15]]],[11,"partial_cmp","","",38,[[["version",3]],[["ordering",4],["option",4]]]],[11,"lt","","",38,[[["version",3]],["bool",15]]],[11,"le","","",38,[[["version",3]],["bool",15]]],[11,"gt","","",38,[[["version",3]],["bool",15]]],[11,"ge","","",38,[[["version",3]],["bool",15]]],[11,"partial_cmp","skia_safe::textlayout","",262,[[["textdecoration",3]],[["ordering",4],["option",4]]]],[11,"lt","","",262,[[["textdecoration",3]],["bool",15]]],[11,"le","","",262,[[["textdecoration",3]],["bool",15]]],[11,"gt","","",262,[[["textdecoration",3]],["bool",15]]],[11,"ge","","",262,[[["textdecoration",3]],["bool",15]]],[11,"partial_cmp","skia_safe::svg::canvas","",52,[[["flags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",52,[[["flags",3]],["bool",15]]],[11,"le","","",52,[[["flags",3]],["bool",15]]],[11,"gt","","",52,[[["flags",3]],["bool",15]]],[11,"ge","","",52,[[["flags",3]],["bool",15]]],[11,"partial_cmp","skia_safe::utils::shadow_utils","",56,[[["shadowflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",56,[[["shadowflags",3]],["bool",15]]],[11,"le","","",56,[[["shadowflags",3]],["bool",15]]],[11,"gt","","",56,[[["shadowflags",3]],["bool",15]]],[11,"ge","","",56,[[["shadowflags",3]],["bool",15]]],[11,"to_string","skia_safe","",265,[[],["string",3]]],[11,"deref","skia_safe::canvas","",211,[[]]],[11,"deref","","",212,[[]]],[11,"deref","skia_safe","",267,[[]]],[11,"deref","skia_safe::font_style","",226,[[]]],[11,"deref","","",227,[[]]],[11,"deref","skia_safe","",246,[[]]],[11,"deref","","",267,[[]]],[11,"deref","skia_safe::gpu::vk","",38,[[]]],[11,"deref","skia_safe","",267,[[]]],[11,"deref","","",267,[[]]],[11,"deref","","",268,[[]]],[11,"deref","skia_safe::svg::canvas","",53,[[]]],[11,"deref_mut","skia_safe::canvas","",211,[[]]],[11,"deref_mut","","",212,[[]]],[11,"deref_mut","skia_safe","",267,[[]]],[11,"deref_mut","","",267,[[]]],[11,"deref_mut","","",267,[[]]],[11,"deref_mut","","",268,[[]]],[11,"deref_mut","skia_safe::svg::canvas","",53,[[]]],[11,"fmt","skia_safe::codec","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::canvas","",208,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::canvas::lattice","",62,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe","",214,[[["formatter",3]],["result",6]]],[11,"fmt","","",170,[[["formatter",3]],["result",6]]],[11,"fmt","","",171,[[["formatter",3]],["result",6]]],[11,"fmt","","",215,[[["formatter",3]],["result",6]]],[11,"fmt","","",173,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::color_filter","",216,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe","",217,[[["formatter",3]],["result",6]]],[11,"fmt","","",174,[[["formatter",3]],["result",6]]],[11,"fmt","","",175,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::contour_measure","",218,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::font_arguments","",70,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::font_arguments::variation_position","",69,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::font_metrics","",225,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::font_parameters::variation","",72,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe","",181,[[["formatter",3]],["result",6]]],[11,"fmt","","",184,[[["formatter",3]],["result",6]]],[11,"fmt","","",186,[[["formatter",3]],["result",6]]],[11,"fmt","","",187,[[["formatter",3]],["result",6]]],[11,"fmt","","",188,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::matrix","",230,[[["formatter",3]],["result",6]]],[11,"fmt","","",231,[[["formatter",3]],["result",6]]],[11,"fmt","","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::matrix44","",232,[[["formatter",3]],["result",6]]],[11,"fmt","","",233,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::path_effect::point_data","",237,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::path_effect","",95,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::path_measure","",238,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::path","",239,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe","",190,[[["formatter",3]],["result",6]]],[11,"fmt","","",191,[[["formatter",3]],["result",6]]],[11,"fmt","","",192,[[["formatter",3]],["result",6]]],[11,"fmt","","",193,[[["formatter",3]],["result",6]]],[11,"fmt","","",194,[[["formatter",3]],["result",6]]],[11,"fmt","","",196,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::image","",74,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::sampling_options","",104,[[["formatter",3]],["result",6]]],[11,"fmt","","",105,[[["formatter",3]],["result",6]]],[11,"fmt","","",106,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::shader","",108,[[["formatter",3]],["result",6]]],[11,"fmt","","",109,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe","",199,[[["formatter",3]],["result",6]]],[11,"fmt","","",200,[[["formatter",3]],["result",6]]],[11,"fmt","","",201,[[["formatter",3]],["result",6]]],[11,"fmt","","",244,[[["formatter",3]],["result",6]]],[11,"fmt","","",204,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::typeface","",116,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe","",246,[[["formatter",3]],["result",6]]],[11,"fmt","","",247,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::vertices","",248,[[["formatter",3]],["result",6]]],[11,"fmt","","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",120,[[["formatter",3]],["result",6]]],[11,"fmt","","",249,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::yuva_info","",122,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::pdf","",250,[[["formatter",3]],["result",6]]],[11,"fmt","","",126,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::gradient_shader","",251,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::high_contrast_filter","",130,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::image_filters","",252,[[["formatter",3]],["result",6]]],[11,"fmt","","",132,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::runtime_effect::uniform","",253,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::runtime_effect","",134,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::gpu","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::gpu::gl","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",255,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::gpu::vk","",257,[[["formatter",3]],["result",6]]],[11,"fmt","","",258,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",260,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::textlayout","",149,[[["formatter",3]],["result",6]]],[11,"fmt","","",156,[[["formatter",3]],["result",6]]],[11,"fmt","","",262,[[["formatter",3]],["result",6]]],[11,"fmt","","",160,[[["formatter",3]],["result",6]]],[11,"fmt","","",162,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::shaper::run_handler","",138,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::svg::canvas","",52,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::utils","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::utils::interpolator","",55,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::utils::shadow_utils","",56,[[["formatter",3]],["result",6]]],[11,"div","skia_safe","",186,[[["scalar",6]]]],[11,"div","","",191,[[["scalar",6]]]],[11,"div","","",200,[[["scalar",6]]]],[11,"sub","skia_safe::canvas","Returns the set difference of the two sets of flags.",208,[[["savelayerflags",3]],["savelayerflags",3]]],[11,"sub","skia_safe","Returns the set difference of the two sets of flags.",215,[[["colorchannelflag",3]],["colorchannelflag",3]]],[11,"sub","skia_safe::color_filter","Returns the set difference of the two sets of flags.",216,[[["flags",3]],["flags",3]]],[11,"sub","skia_safe::contour_measure","Returns the set difference of the two sets of flags.",218,[[["matrixflags",3]],["matrixflags",3]]],[11,"sub","skia_safe::font_metrics","Returns the set difference of the two sets of flags.",225,[[["flags",3]],["flags",3]]],[11,"sub","skia_safe","",186,[[]]],[11,"sub","","",187,[[]]],[11,"sub","","",188,[[]]],[11,"sub","skia_safe::matrix","Returns the set difference of the two sets of flags.",230,[[["typemask",3]],["typemask",3]]],[11,"sub","skia_safe::matrix44","Returns the set difference of the two sets of flags.",233,[[["typemask",3]],["typemask",3]]],[11,"sub","skia_safe::path_effect::point_data","Returns the set difference of the two sets of flags.",237,[[["pointflags",3]],["pointflags",3]]],[11,"sub","skia_safe::path_measure","Returns the set difference of the two sets of flags.",238,[[["matrixflags",3]],["matrixflags",3]]],[11,"sub","skia_safe::path","Returns the set difference of the two sets of flags.",239,[[["pathsegmentmask",3]],["pathsegmentmask",3]]],[11,"sub","skia_safe","",190,[[]]],[11,"sub","","",190,[[["isize",3]]]],[11,"sub","","",191,[[]]],[11,"sub","","",191,[[["size",3]]]],[11,"sub","","",192,[[]]],[11,"sub","","Returns the set difference of the two sets of flags.",244,[[["surfacepropsflags",3]],["surfacepropsflags",3]]],[11,"sub","skia_safe::vertices","Returns the set difference of the two sets of flags.",249,[[["builderflags",3]],["builderflags",3]]],[11,"sub","skia_safe::gradient_shader","Returns the set difference of the two sets of flags.",251,[[["flags",3]],["flags",3]]],[11,"sub","skia_safe::runtime_effect::uniform","Returns the set difference of the two sets of flags.",253,[[["flags",3]],["flags",3]]],[11,"sub","skia_safe::gpu::gl","Returns the set difference of the two sets of flags.",255,[[["backendstate",3]],["backendstate",3]]],[11,"sub","skia_safe::gpu::vk","Returns the set difference of the two sets of flags.",257,[[["extensionflags",3]],["extensionflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",258,[[["featureflags",3]],["featureflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",260,[[["allocflag",3]],["allocflag",3]]],[11,"sub","skia_safe::textlayout","Returns the set difference of the two sets of flags.",262,[[["textdecoration",3]],["textdecoration",3]]],[11,"sub","skia_safe::svg::canvas","Returns the set difference of the two sets of flags.",52,[[["flags",3]],["flags",3]]],[11,"sub","skia_safe::utils::shadow_utils","Returns the set difference of the two sets of flags.",56,[[["shadowflags",3]],["shadowflags",3]]],[11,"add","skia_safe","",186,[[]]],[11,"add","","",187,[[]]],[11,"add","","",188,[[]]],[11,"add","","",190,[[["ivector",3]]]],[11,"add","","",190,[[["isize",3]]]],[11,"add","","",191,[[["vector",6]]]],[11,"add","","",191,[[["size",3]]]],[11,"add","","",192,[[]]],[11,"mul","","",173,[[["f32",15]]]],[11,"mul","","",173,[[]]],[11,"mul","","",173,[[]]],[11,"mul","","",186,[[]]],[11,"mul","","",186,[[["scalar",6]]]],[11,"mul","","",271,[[["v2",3]]]],[11,"mul","","",187,[[]]],[11,"mul","","",187,[[["scalar",6]]]],[11,"mul","","",271,[[["v3",3]]]],[11,"mul","","",188,[[]]],[11,"mul","","",188,[[["scalar",6]]]],[11,"mul","","",271,[[["v4",3]]]],[11,"mul","skia_safe::matrix","",231,[[["matrix",3]]]],[11,"mul","skia_safe::matrix44","",234,[[]]],[11,"mul","","",234,[[["vector4",3]]]],[11,"mul","skia_safe","",191,[[["scalar",6]]]],[11,"mul","","",271,[[["point3",3]]]],[11,"mul","","",200,[[["scalar",6]]]],[11,"neg","","",186,[[]]],[11,"neg","","",187,[[]]],[11,"neg","","",188,[[]]],[11,"neg","","",190,[[]]],[11,"neg","","",191,[[]]],[11,"neg","","",192,[[]]],[11,"add_assign","","",186,[[]]],[11,"add_assign","","",187,[[]]],[11,"add_assign","","",188,[[]]],[11,"add_assign","","",190,[[["ivector",3]]]],[11,"add_assign","","",190,[[["isize",3]]]],[11,"add_assign","","",191,[[["vector",6]]]],[11,"add_assign","","",191,[[["size",3]]]],[11,"add_assign","","",192,[[["point3",3]]]],[11,"sub_assign","skia_safe::canvas","Disables all flags enabled in the set.",208,[[["savelayerflags",3]]]],[11,"sub_assign","skia_safe","Disables all flags enabled in the set.",215,[[["colorchannelflag",3]]]],[11,"sub_assign","skia_safe::color_filter","Disables all flags enabled in the set.",216,[[["flags",3]]]],[11,"sub_assign","skia_safe::contour_measure","Disables all flags enabled in the set.",218,[[["matrixflags",3]]]],[11,"sub_assign","skia_safe::font_metrics","Disables all flags enabled in the set.",225,[[["flags",3]]]],[11,"sub_assign","skia_safe","",186,[[]]],[11,"sub_assign","","",187,[[]]],[11,"sub_assign","","",188,[[]]],[11,"sub_assign","skia_safe::matrix","Disables all flags enabled in the set.",230,[[["typemask",3]]]],[11,"sub_assign","skia_safe::matrix44","Disables all flags enabled in the set.",233,[[["typemask",3]]]],[11,"sub_assign","skia_safe::path_effect::point_data","Disables all flags enabled in the set.",237,[[["pointflags",3]]]],[11,"sub_assign","skia_safe::path_measure","Disables all flags enabled in the set.",238,[[["matrixflags",3]]]],[11,"sub_assign","skia_safe::path","Disables all flags enabled in the set.",239,[[["pathsegmentmask",3]]]],[11,"sub_assign","skia_safe","",190,[[]]],[11,"sub_assign","","",190,[[["isize",3]]]],[11,"sub_assign","","",191,[[["vector",6]]]],[11,"sub_assign","","",191,[[["size",3]]]],[11,"sub_assign","","",192,[[["point3",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",244,[[["surfacepropsflags",3]]]],[11,"sub_assign","skia_safe::vertices","Disables all flags enabled in the set.",249,[[["builderflags",3]]]],[11,"sub_assign","skia_safe::gradient_shader","Disables all flags enabled in the set.",251,[[["flags",3]]]],[11,"sub_assign","skia_safe::runtime_effect::uniform","Disables all flags enabled in the set.",253,[[["flags",3]]]],[11,"sub_assign","skia_safe::gpu::gl","Disables all flags enabled in the set.",255,[[["backendstate",3]]]],[11,"sub_assign","skia_safe::gpu::vk","Disables all flags enabled in the set.",257,[[["extensionflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",258,[[["featureflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",260,[[["allocflag",3]]]],[11,"sub_assign","skia_safe::textlayout","Disables all flags enabled in the set.",262,[[["textdecoration",3]]]],[11,"sub_assign","skia_safe::svg::canvas","Disables all flags enabled in the set.",52,[[["flags",3]]]],[11,"sub_assign","skia_safe::utils::shadow_utils","Disables all flags enabled in the set.",56,[[["shadowflags",3]]]],[11,"mul_assign","skia_safe","",186,[[]]],[11,"mul_assign","","",186,[[["scalar",6]]]],[11,"mul_assign","","",187,[[]]],[11,"mul_assign","","",187,[[["scalar",6]]]],[11,"mul_assign","","",188,[[]]],[11,"mul_assign","","",188,[[["scalar",6]]]],[11,"mul_assign","","",191,[[["scalar",6]]]],[11,"mul_assign","","",200,[[["scalar",6]]]],[11,"div_assign","","",186,[[["scalar",6]]]],[11,"div_assign","","",191,[[["scalar",6]]]],[11,"div_assign","","",200,[[["scalar",6]]]],[11,"not","skia_safe::canvas","Returns the complement of this set of flags.",208,[[],["savelayerflags",3]]],[11,"not","skia_safe","Returns the complement of this set of flags.",215,[[],["colorchannelflag",3]]],[11,"not","skia_safe::color_filter","Returns the complement of this set of flags.",216,[[],["flags",3]]],[11,"not","skia_safe::contour_measure","Returns the complement of this set of flags.",218,[[],["matrixflags",3]]],[11,"not","skia_safe::font_metrics","Returns the complement of this set of flags.",225,[[],["flags",3]]],[11,"not","skia_safe::matrix","Returns the complement of this set of flags.",230,[[],["typemask",3]]],[11,"not","skia_safe::matrix44","Returns the complement of this set of flags.",233,[[],["typemask",3]]],[11,"not","skia_safe::path_effect::point_data","Returns the complement of this set of flags.",237,[[],["pointflags",3]]],[11,"not","skia_safe::path_measure","Returns the complement of this set of flags.",238,[[],["matrixflags",3]]],[11,"not","skia_safe::path","Returns the complement of this set of flags.",239,[[],["pathsegmentmask",3]]],[11,"not","skia_safe","Returns the complement of this set of flags.",244,[[],["surfacepropsflags",3]]],[11,"not","skia_safe::vertices","Returns the complement of this set of flags.",249,[[],["builderflags",3]]],[11,"not","skia_safe::gradient_shader","Returns the complement of this set of flags.",251,[[],["flags",3]]],[11,"not","skia_safe::runtime_effect::uniform","Returns the complement of this set of flags.",253,[[],["flags",3]]],[11,"not","skia_safe::gpu::gl","Returns the complement of this set of flags.",255,[[],["backendstate",3]]],[11,"not","skia_safe::gpu::vk","Returns the complement of this set of flags.",257,[[],["extensionflags",3]]],[11,"not","","Returns the complement of this set of flags.",258,[[],["featureflags",3]]],[11,"not","","Returns the complement of this set of flags.",260,[[],["allocflag",3]]],[11,"not","skia_safe::textlayout","Returns the complement of this set of flags.",262,[[],["textdecoration",3]]],[11,"not","skia_safe::svg::canvas","Returns the complement of this set of flags.",52,[[],["flags",3]]],[11,"not","skia_safe::utils::shadow_utils","Returns the complement of this set of flags.",56,[[],["shadowflags",3]]],[11,"bitand","skia_safe::canvas","Returns the intersection between the two sets of flags.",208,[[["savelayerflags",3]],["savelayerflags",3]]],[11,"bitand","skia_safe","",214,[[]]],[11,"bitand","","",214,[[["u32",15]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",215,[[["colorchannelflag",3]],["colorchannelflag",3]]],[11,"bitand","skia_safe::color_filter","Returns the intersection between the two sets of flags.",216,[[["flags",3]],["flags",3]]],[11,"bitand","skia_safe::contour_measure","Returns the intersection between the two sets of flags.",218,[[["matrixflags",3]],["matrixflags",3]]],[11,"bitand","skia_safe::font_metrics","Returns the intersection between the two sets of flags.",225,[[["flags",3]],["flags",3]]],[11,"bitand","skia_safe::matrix","Returns the intersection between the two sets of flags.",230,[[["typemask",3]],["typemask",3]]],[11,"bitand","skia_safe::matrix44","Returns the intersection between the two sets of flags.",233,[[["typemask",3]],["typemask",3]]],[11,"bitand","skia_safe::path_effect::point_data","Returns the intersection between the two sets of flags.",237,[[["pointflags",3]],["pointflags",3]]],[11,"bitand","skia_safe::path_measure","Returns the intersection between the two sets of flags.",238,[[["matrixflags",3]],["matrixflags",3]]],[11,"bitand","skia_safe::path","Returns the intersection between the two sets of flags.",239,[[["pathsegmentmask",3]],["pathsegmentmask",3]]],[11,"bitand","skia_safe","Returns the intersection between the two sets of flags.",244,[[["surfacepropsflags",3]],["surfacepropsflags",3]]],[11,"bitand","skia_safe::vertices","Returns the intersection between the two sets of flags.",249,[[["builderflags",3]],["builderflags",3]]],[11,"bitand","skia_safe::gradient_shader","Returns the intersection between the two sets of flags.",251,[[["flags",3]],["flags",3]]],[11,"bitand","skia_safe::runtime_effect::uniform","Returns the intersection between the two sets of flags.",253,[[["flags",3]],["flags",3]]],[11,"bitand","skia_safe::gpu::gl","Returns the intersection between the two sets of flags.",255,[[["backendstate",3]],["backendstate",3]]],[11,"bitand","skia_safe::gpu::vk","Returns the intersection between the two sets of flags.",257,[[["extensionflags",3]],["extensionflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",258,[[["featureflags",3]],["featureflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",260,[[["allocflag",3]],["allocflag",3]]],[11,"bitand","skia_safe::textlayout","Returns the intersection between the two sets of flags.",262,[[["textdecoration",3]],["textdecoration",3]]],[11,"bitand","skia_safe::svg::canvas","Returns the intersection between the two sets of flags.",52,[[["flags",3]],["flags",3]]],[11,"bitand","skia_safe::utils::shadow_utils","Returns the intersection between the two sets of flags.",56,[[["shadowflags",3]],["shadowflags",3]]],[11,"bitor","skia_safe::canvas","Returns the union of the two sets of flags.",208,[[["savelayerflags",3]],["savelayerflags",3]]],[11,"bitor","skia_safe","",214,[[]]],[11,"bitor","","",214,[[["u32",15]]]],[11,"bitor","","Returns the union of the two sets of flags.",215,[[["colorchannelflag",3]],["colorchannelflag",3]]],[11,"bitor","skia_safe::color_filter","Returns the union of the two sets of flags.",216,[[["flags",3]],["flags",3]]],[11,"bitor","skia_safe::contour_measure","Returns the union of the two sets of flags.",218,[[["matrixflags",3]],["matrixflags",3]]],[11,"bitor","skia_safe::font_metrics","Returns the union of the two sets of flags.",225,[[["flags",3]],["flags",3]]],[11,"bitor","skia_safe::matrix","Returns the union of the two sets of flags.",230,[[["typemask",3]],["typemask",3]]],[11,"bitor","skia_safe::matrix44","Returns the union of the two sets of flags.",233,[[["typemask",3]],["typemask",3]]],[11,"bitor","skia_safe::path_effect::point_data","Returns the union of the two sets of flags.",237,[[["pointflags",3]],["pointflags",3]]],[11,"bitor","skia_safe::path_measure","Returns the union of the two sets of flags.",238,[[["matrixflags",3]],["matrixflags",3]]],[11,"bitor","skia_safe::path","Returns the union of the two sets of flags.",239,[[["pathsegmentmask",3]],["pathsegmentmask",3]]],[11,"bitor","skia_safe","Returns the union of the two sets of flags.",244,[[["surfacepropsflags",3]],["surfacepropsflags",3]]],[11,"bitor","skia_safe::vertices","Returns the union of the two sets of flags.",249,[[["builderflags",3]],["builderflags",3]]],[11,"bitor","skia_safe::gradient_shader","Returns the union of the two sets of flags.",251,[[["flags",3]],["flags",3]]],[11,"bitor","skia_safe::runtime_effect::uniform","Returns the union of the two sets of flags.",253,[[["flags",3]],["flags",3]]],[11,"bitor","skia_safe::gpu::gl","Returns the union of the two sets of flags.",255,[[["backendstate",3]],["backendstate",3]]],[11,"bitor","skia_safe::gpu::vk","Returns the union of the two sets of flags.",257,[[["extensionflags",3]],["extensionflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",258,[[["featureflags",3]],["featureflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",260,[[["allocflag",3]],["allocflag",3]]],[11,"bitor","skia_safe::textlayout","Returns the union of the two sets of flags.",262,[[["textdecoration",3]],["textdecoration",3]]],[11,"bitor","skia_safe::svg::canvas","Returns the union of the two sets of flags.",52,[[["flags",3]],["flags",3]]],[11,"bitor","skia_safe::utils::shadow_utils","Returns the union of the two sets of flags.",56,[[["shadowflags",3]],["shadowflags",3]]],[11,"bitxor","skia_safe::canvas","Returns the left flags, but with all the right flags â€¦",208,[[["savelayerflags",3]],["savelayerflags",3]]],[11,"bitxor","skia_safe","Returns the left flags, but with all the right flags â€¦",215,[[["colorchannelflag",3]],["colorchannelflag",3]]],[11,"bitxor","skia_safe::color_filter","Returns the left flags, but with all the right flags â€¦",216,[[["flags",3]],["flags",3]]],[11,"bitxor","skia_safe::contour_measure","Returns the left flags, but with all the right flags â€¦",218,[[["matrixflags",3]],["matrixflags",3]]],[11,"bitxor","skia_safe::font_metrics","Returns the left flags, but with all the right flags â€¦",225,[[["flags",3]],["flags",3]]],[11,"bitxor","skia_safe::matrix","Returns the left flags, but with all the right flags â€¦",230,[[["typemask",3]],["typemask",3]]],[11,"bitxor","skia_safe::matrix44","Returns the left flags, but with all the right flags â€¦",233,[[["typemask",3]],["typemask",3]]],[11,"bitxor","skia_safe::path_effect::point_data","Returns the left flags, but with all the right flags â€¦",237,[[["pointflags",3]],["pointflags",3]]],[11,"bitxor","skia_safe::path_measure","Returns the left flags, but with all the right flags â€¦",238,[[["matrixflags",3]],["matrixflags",3]]],[11,"bitxor","skia_safe::path","Returns the left flags, but with all the right flags â€¦",239,[[["pathsegmentmask",3]],["pathsegmentmask",3]]],[11,"bitxor","skia_safe","Returns the left flags, but with all the right flags â€¦",244,[[["surfacepropsflags",3]],["surfacepropsflags",3]]],[11,"bitxor","skia_safe::vertices","Returns the left flags, but with all the right flags â€¦",249,[[["builderflags",3]],["builderflags",3]]],[11,"bitxor","skia_safe::gradient_shader","Returns the left flags, but with all the right flags â€¦",251,[[["flags",3]],["flags",3]]],[11,"bitxor","skia_safe::runtime_effect::uniform","Returns the left flags, but with all the right flags â€¦",253,[[["flags",3]],["flags",3]]],[11,"bitxor","skia_safe::gpu::gl","Returns the left flags, but with all the right flags â€¦",255,[[["backendstate",3]],["backendstate",3]]],[11,"bitxor","skia_safe::gpu::vk","Returns the left flags, but with all the right flags â€¦",257,[[["extensionflags",3]],["extensionflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags â€¦",258,[[["featureflags",3]],["featureflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags â€¦",260,[[["allocflag",3]],["allocflag",3]]],[11,"bitxor","skia_safe::textlayout","Returns the left flags, but with all the right flags â€¦",262,[[["textdecoration",3]],["textdecoration",3]]],[11,"bitxor","skia_safe::svg::canvas","Returns the left flags, but with all the right flags â€¦",52,[[["flags",3]],["flags",3]]],[11,"bitxor","skia_safe::utils::shadow_utils","Returns the left flags, but with all the right flags â€¦",56,[[["shadowflags",3]],["shadowflags",3]]],[11,"bitand_assign","skia_safe::canvas","Disables all flags disabled in the set.",208,[[["savelayerflags",3]]]],[11,"bitand_assign","skia_safe","Disables all flags disabled in the set.",215,[[["colorchannelflag",3]]]],[11,"bitand_assign","skia_safe::color_filter","Disables all flags disabled in the set.",216,[[["flags",3]]]],[11,"bitand_assign","skia_safe::contour_measure","Disables all flags disabled in the set.",218,[[["matrixflags",3]]]],[11,"bitand_assign","skia_safe::font_metrics","Disables all flags disabled in the set.",225,[[["flags",3]]]],[11,"bitand_assign","skia_safe::matrix","Disables all flags disabled in the set.",230,[[["typemask",3]]]],[11,"bitand_assign","skia_safe::matrix44","Disables all flags disabled in the set.",233,[[["typemask",3]]]],[11,"bitand_assign","skia_safe::path_effect::point_data","Disables all flags disabled in the set.",237,[[["pointflags",3]]]],[11,"bitand_assign","skia_safe::path_measure","Disables all flags disabled in the set.",238,[[["matrixflags",3]]]],[11,"bitand_assign","skia_safe::path","Disables all flags disabled in the set.",239,[[["pathsegmentmask",3]]]],[11,"bitand_assign","skia_safe","Disables all flags disabled in the set.",244,[[["surfacepropsflags",3]]]],[11,"bitand_assign","skia_safe::vertices","Disables all flags disabled in the set.",249,[[["builderflags",3]]]],[11,"bitand_assign","skia_safe::gradient_shader","Disables all flags disabled in the set.",251,[[["flags",3]]]],[11,"bitand_assign","skia_safe::runtime_effect::uniform","Disables all flags disabled in the set.",253,[[["flags",3]]]],[11,"bitand_assign","skia_safe::gpu::gl","Disables all flags disabled in the set.",255,[[["backendstate",3]]]],[11,"bitand_assign","skia_safe::gpu::vk","Disables all flags disabled in the set.",257,[[["extensionflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",258,[[["featureflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",260,[[["allocflag",3]]]],[11,"bitand_assign","skia_safe::textlayout","Disables all flags disabled in the set.",262,[[["textdecoration",3]]]],[11,"bitand_assign","skia_safe::svg::canvas","Disables all flags disabled in the set.",52,[[["flags",3]]]],[11,"bitand_assign","skia_safe::utils::shadow_utils","Disables all flags disabled in the set.",56,[[["shadowflags",3]]]],[11,"bitor_assign","skia_safe::canvas","Adds the set of flags.",208,[[["savelayerflags",3]]]],[11,"bitor_assign","skia_safe","Adds the set of flags.",215,[[["colorchannelflag",3]]]],[11,"bitor_assign","skia_safe::color_filter","Adds the set of flags.",216,[[["flags",3]]]],[11,"bitor_assign","skia_safe::contour_measure","Adds the set of flags.",218,[[["matrixflags",3]]]],[11,"bitor_assign","skia_safe::font_metrics","Adds the set of flags.",225,[[["flags",3]]]],[11,"bitor_assign","skia_safe::matrix","Adds the set of flags.",230,[[["typemask",3]]]],[11,"bitor_assign","skia_safe::matrix44","Adds the set of flags.",233,[[["typemask",3]]]],[11,"bitor_assign","skia_safe::path_effect::point_data","Adds the set of flags.",237,[[["pointflags",3]]]],[11,"bitor_assign","skia_safe::path_measure","Adds the set of flags.",238,[[["matrixflags",3]]]],[11,"bitor_assign","skia_safe::path","Adds the set of flags.",239,[[["pathsegmentmask",3]]]],[11,"bitor_assign","skia_safe","Adds the set of flags.",244,[[["surfacepropsflags",3]]]],[11,"bitor_assign","skia_safe::vertices","Adds the set of flags.",249,[[["builderflags",3]]]],[11,"bitor_assign","skia_safe::gradient_shader","Adds the set of flags.",251,[[["flags",3]]]],[11,"bitor_assign","skia_safe::runtime_effect::uniform","Adds the set of flags.",253,[[["flags",3]]]],[11,"bitor_assign","skia_safe::gpu::gl","Adds the set of flags.",255,[[["backendstate",3]]]],[11,"bitor_assign","skia_safe::gpu::vk","Adds the set of flags.",257,[[["extensionflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",258,[[["featureflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",260,[[["allocflag",3]]]],[11,"bitor_assign","skia_safe::textlayout","Adds the set of flags.",262,[[["textdecoration",3]]]],[11,"bitor_assign","skia_safe::svg::canvas","Adds the set of flags.",52,[[["flags",3]]]],[11,"bitor_assign","skia_safe::utils::shadow_utils","Adds the set of flags.",56,[[["shadowflags",3]]]],[11,"bitxor_assign","skia_safe::canvas","Toggles the set of flags.",208,[[["savelayerflags",3]]]],[11,"bitxor_assign","skia_safe","Toggles the set of flags.",215,[[["colorchannelflag",3]]]],[11,"bitxor_assign","skia_safe::color_filter","Toggles the set of flags.",216,[[["flags",3]]]],[11,"bitxor_assign","skia_safe::contour_measure","Toggles the set of flags.",218,[[["matrixflags",3]]]],[11,"bitxor_assign","skia_safe::font_metrics","Toggles the set of flags.",225,[[["flags",3]]]],[11,"bitxor_assign","skia_safe::matrix","Toggles the set of flags.",230,[[["typemask",3]]]],[11,"bitxor_assign","skia_safe::matrix44","Toggles the set of flags.",233,[[["typemask",3]]]],[11,"bitxor_assign","skia_safe::path_effect::point_data","Toggles the set of flags.",237,[[["pointflags",3]]]],[11,"bitxor_assign","skia_safe::path_measure","Toggles the set of flags.",238,[[["matrixflags",3]]]],[11,"bitxor_assign","skia_safe::path","Toggles the set of flags.",239,[[["pathsegmentmask",3]]]],[11,"bitxor_assign","skia_safe","Toggles the set of flags.",244,[[["surfacepropsflags",3]]]],[11,"bitxor_assign","skia_safe::vertices","Toggles the set of flags.",249,[[["builderflags",3]]]],[11,"bitxor_assign","skia_safe::gradient_shader","Toggles the set of flags.",251,[[["flags",3]]]],[11,"bitxor_assign","skia_safe::runtime_effect::uniform","Toggles the set of flags.",253,[[["flags",3]]]],[11,"bitxor_assign","skia_safe::gpu::gl","Toggles the set of flags.",255,[[["backendstate",3]]]],[11,"bitxor_assign","skia_safe::gpu::vk","Toggles the set of flags.",257,[[["extensionflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",258,[[["featureflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",260,[[["allocflag",3]]]],[11,"bitxor_assign","skia_safe::textlayout","Toggles the set of flags.",262,[[["textdecoration",3]]]],[11,"bitxor_assign","skia_safe::svg::canvas","Toggles the set of flags.",52,[[["flags",3]]]],[11,"bitxor_assign","skia_safe::utils::shadow_utils","Toggles the set of flags.",56,[[["shadowflags",3]]]],[11,"index","skia_safe","",173,[[["usize",15]],["f32",15]]],[11,"index","","",294,[[["usize",15]]]],[11,"index","","",188,[[["usize",15]]]],[11,"index","skia_safe::matrix","",231,[[["member",4]]]],[11,"index","","",231,[[["affinemember",4]]]],[11,"index","","",231,[[["usize",15]]]],[11,"index","skia_safe","",265,[[["usize",15]]]],[11,"index","","",265,[[["usize",15]]]],[11,"index","","",268,[[["usize",15]]]],[11,"index","skia_safe::textlayout","",263,[[["usize",15]]]],[11,"index_mut","skia_safe","",173,[[["usize",15]],["f32",15]]],[11,"index_mut","skia_safe::matrix","",231,[[["member",4]]]],[11,"index_mut","","",231,[[["affinemember",4]]]],[11,"index_mut","","",231,[[["usize",15]]]],[11,"hash","skia_safe::codec","",5,[[]]],[11,"hash","skia_safe::canvas","",208,[[]]],[11,"hash","skia_safe","",215,[[]]],[11,"hash","skia_safe::color_filter","",216,[[]]],[11,"hash","skia_safe::contour_measure","",218,[[]]],[11,"hash","skia_safe::font_metrics","",225,[[]]],[11,"hash","skia_safe","",181,[[]]],[11,"hash","","",184,[[]]],[11,"hash","skia_safe::matrix","",230,[[]]],[11,"hash","skia_safe::matrix44","",233,[[]]],[11,"hash","skia_safe::path_effect::point_data","",237,[[]]],[11,"hash","skia_safe::path_measure","",238,[[]]],[11,"hash","skia_safe::path","",239,[[]]],[11,"hash","skia_safe::sampling_options","",104,[[]]],[11,"hash","","",105,[[]]],[11,"hash","skia_safe","",244,[[]]],[11,"hash","","",204,[[]]],[11,"hash","skia_safe::vertices","",249,[[]]],[11,"hash","skia_safe::yuva_info","",122,[[]]],[11,"hash","skia_safe::gradient_shader","",251,[[]]],[11,"hash","skia_safe::runtime_effect::uniform","",253,[[]]],[11,"hash","skia_safe::gpu::gl","",255,[[]]],[11,"hash","skia_safe::gpu::vk","",257,[[]]],[11,"hash","","",258,[[]]],[11,"hash","","",260,[[]]],[11,"hash","skia_safe::textlayout","",262,[[]]],[11,"hash","skia_safe","",265,[[]]],[11,"hash","skia_safe::svg::canvas","",52,[[]]],[11,"hash","skia_safe::utils::shadow_utils","",56,[[]]],[11,"from_iter","skia_safe::canvas","",208,[[["intoiterator",8]],["savelayerflags",3]]],[11,"from_iter","skia_safe","",215,[[["intoiterator",8]],["colorchannelflag",3]]],[11,"from_iter","skia_safe::color_filter","",216,[[["intoiterator",8]],["flags",3]]],[11,"from_iter","skia_safe::contour_measure","",218,[[["intoiterator",8]],["matrixflags",3]]],[11,"from_iter","skia_safe::font_metrics","",225,[[["intoiterator",8]],["flags",3]]],[11,"from_iter","skia_safe::matrix","",230,[[["intoiterator",8]],["typemask",3]]],[11,"from_iter","skia_safe::matrix44","",233,[[["intoiterator",8]],["typemask",3]]],[11,"from_iter","skia_safe::path_effect::point_data","",237,[[["intoiterator",8]],["pointflags",3]]],[11,"from_iter","skia_safe::path_measure","",238,[[["intoiterator",8]],["matrixflags",3]]],[11,"from_iter","skia_safe::path","",239,[[["intoiterator",8]],["pathsegmentmask",3]]],[11,"from_iter","skia_safe","",244,[[["intoiterator",8]],["surfacepropsflags",3]]],[11,"from_iter","skia_safe::vertices","",249,[[["intoiterator",8]],["builderflags",3]]],[11,"from_iter","skia_safe::gradient_shader","",251,[[["intoiterator",8]],["flags",3]]],[11,"from_iter","skia_safe::runtime_effect::uniform","",253,[[["intoiterator",8]],["flags",3]]],[11,"from_iter","skia_safe::gpu::gl","",255,[[["intoiterator",8]],["backendstate",3]]],[11,"from_iter","skia_safe::gpu::vk","",257,[[["intoiterator",8]],["extensionflags",3]]],[11,"from_iter","","",258,[[["intoiterator",8]],["featureflags",3]]],[11,"from_iter","","",260,[[["intoiterator",8]],["allocflag",3]]],[11,"from_iter","skia_safe::textlayout","",262,[[["intoiterator",8]],["textdecoration",3]]],[11,"from_iter","skia_safe::svg::canvas","",52,[[["intoiterator",8]],["flags",3]]],[11,"from_iter","skia_safe::utils::shadow_utils","",56,[[["intoiterator",8]],["shadowflags",3]]],[11,"fmt","skia_safe::canvas","",208,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe","",215,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::color_filter","",216,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::contour_measure","",218,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::font_metrics","",225,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::matrix","",230,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::matrix44","",233,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::path_effect::point_data","",237,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::path_measure","",238,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::path","",239,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe","",244,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::vertices","",249,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::gradient_shader","",251,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::runtime_effect::uniform","",253,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::gpu::gl","",255,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::gpu::vk","",257,[[["formatter",3]],["result",6]]],[11,"fmt","","",258,[[["formatter",3]],["result",6]]],[11,"fmt","","",260,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::textlayout","",262,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::svg::canvas","",52,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::utils::shadow_utils","",56,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::canvas","",208,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe","",215,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::color_filter","",216,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::contour_measure","",218,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::font_metrics","",225,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::matrix","",230,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::matrix44","",233,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::path_effect::point_data","",237,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::path_measure","",238,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::path","",239,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe","",244,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::vertices","",249,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::gradient_shader","",251,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::runtime_effect::uniform","",253,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::gpu::gl","",255,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::gpu::vk","",257,[[["formatter",3]],["result",6]]],[11,"fmt","","",258,[[["formatter",3]],["result",6]]],[11,"fmt","","",260,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::textlayout","",262,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::svg::canvas","",52,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::utils::shadow_utils","",56,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::canvas","",208,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe","",215,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::color_filter","",216,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::contour_measure","",218,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::font_metrics","",225,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::matrix","",230,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::matrix44","",233,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::path_effect::point_data","",237,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::path_measure","",238,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::path","",239,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe","",244,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::vertices","",249,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::gradient_shader","",251,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::runtime_effect::uniform","",253,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::gpu::gl","",255,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::gpu::vk","",257,[[["formatter",3]],["result",6]]],[11,"fmt","","",258,[[["formatter",3]],["result",6]]],[11,"fmt","","",260,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::textlayout","",262,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::svg::canvas","",52,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::utils::shadow_utils","",56,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::canvas","",208,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe","",215,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::color_filter","",216,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::contour_measure","",218,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::font_metrics","",225,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::matrix","",230,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::matrix44","",233,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::path_effect::point_data","",237,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::path_measure","",238,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::path","",239,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe","",244,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::vertices","",249,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::gradient_shader","",251,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::runtime_effect::uniform","",253,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::gpu::gl","",255,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::gpu::vk","",257,[[["formatter",3]],["result",6]]],[11,"fmt","","",258,[[["formatter",3]],["result",6]]],[11,"fmt","","",260,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::textlayout","",262,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::svg::canvas","",52,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::utils::shadow_utils","",56,[[["formatter",3]],["result",6]]],[11,"from_data","skia_safe","",267,[[],[["codec",6],["option",4]]]],[11,"info","","",267,[[],["imageinfo",6]]],[11,"dimensions","","",267,[[],["isize",3]]],[11,"bounds","","",267,[[],["irect",3]]],[11,"origin","","",267,[[],["encodedorigin",4]]],[11,"get_scaled_dimensions","","",267,[[["f32",15]],["isize",3]]],[11,"valid_subset","","",267,[[],[["option",4],["irect",3]]]],[11,"encoded_format","","",267,[[],["encodedimageformat",4]]],[11,"get_pixels_with_options","","",267,[[["usize",15],["imageinfo",6],["options",3],["option",4]],["result",4]]],[11,"get_pixels","","",267,[[["usize",15],["imageinfo",6]],["result",4]]],[11,"get_pixels_to_pixmap","","",267,[[["pixmap",6],["option",4],["options",3]],["result",4]]],[11,"get_image","","",267,[[],[["image",6],["result",4],["result",4]]]],[11,"query_yuva_info","","",267,[[["supporteddatatypes",6]],[["yuvapixmapinfo",6],["option",4]]]],[11,"get_yuva_planes","","",267,[[["yuvapixmaps",6]],["result",4]]],[11,"start_incremental_decode","","",267,[[["usize",15],["imageinfo",6]],["result",4]]],[11,"incremental_decode","","",267,[[]]],[11,"start_scanline_decode","","",267,[[["imageinfo",6]],["result",4]]],[11,"get_scanlines","","",267,[[["usize",15]],["usize",15]]],[11,"skip_scanlines","","",267,[[["usize",15]],["bool",15]]],[11,"scanline_order","","",267,[[],["scanlineorder",4]]],[11,"next_scanline","","",267,[[],["i32",15]]],[11,"outbound_scanline","","",267,[[["i32",15]],["i32",15]]],[11,"get_frame_count","","",267,[[],["usize",15]]],[11,"get_repetition_count","","",267,[[],[["usize",15],["option",4]]]],[11,"from_data","skia_safe::codec","",295,[[],[["codec",6],["option",4]]]],[11,"info","","",295,[[],["imageinfo",6]]],[11,"dimensions","","",295,[[],["isize",3]]],[11,"bounds","","",295,[[],["irect",3]]],[11,"origin","","",295,[[],["encodedorigin",4]]],[11,"get_scaled_dimensions","","",295,[[["f32",15]],["isize",3]]],[11,"valid_subset","","",295,[[],[["option",4],["irect",3]]]],[11,"encoded_format","","",295,[[],["encodedimageformat",4]]],[11,"get_pixels_with_options","","",295,[[["usize",15],["imageinfo",6],["options",3],["option",4]],["result",4]]],[11,"get_pixels","","",295,[[["usize",15],["imageinfo",6]],["result",4]]],[11,"get_pixels_to_pixmap","","",295,[[["pixmap",6],["option",4],["options",3]],["result",4]]],[11,"get_image","","",295,[[],[["image",6],["result",4],["result",4]]]],[11,"query_yuva_info","","",295,[[["supporteddatatypes",6]],[["yuvapixmapinfo",6],["option",4]]]],[11,"get_yuva_planes","","",295,[[["yuvapixmaps",6]],["result",4]]],[11,"start_incremental_decode","","",295,[[["usize",15],["imageinfo",6]],["result",4]]],[11,"incremental_decode","","",295,[[]]],[11,"start_scanline_decode","","",295,[[["imageinfo",6]],["result",4]]],[11,"get_scanlines","","",295,[[["usize",15]],["usize",15]]],[11,"skip_scanlines","","",295,[[["usize",15]],["bool",15]]],[11,"scanline_order","","",295,[[],["scanlineorder",4]]],[11,"next_scanline","","",295,[[],["i32",15]]],[11,"outbound_scanline","","",295,[[["i32",15]],["i32",15]]],[11,"get_frame_count","","",295,[[],["usize",15]]],[11,"get_repetition_count","","",295,[[],[["usize",15],["option",4]]]],[18,"LAST","","",5,null],[18,"DEFAULT","","",5,null],[11,"to_matrix","","Given an width and height of the source data, returns a â€¦",5,[[],["matrix",3]]],[11,"swaps_width_height","","Return <code>true</code> if the encoded origin includes a 90 degree â€¦",5,[[],["bool",15]]],[11,"annotate_rect_with_url","skia_safe::canvas","",210,[[["data",6]]]],[11,"annotate_named_destination","","",210,[[["data",6]]]],[11,"annotate_link_to_destination","","",210,[[["data",6]]]],[11,"new","skia_safe","Creates an empty [Bitmap] without pixels, with [â€¦",265,[[]]],[11,"swap","","Swaps the fields of the two bitmaps.",265,[[]]],[11,"pixmap","","Returns a constant reference to the [Pixmap] holding the [â€¦",265,[[],["pixmap",6]]],[11,"info","","Returns width, height, [AlphaType], [ColorType], and [â€¦",265,[[],["imageinfo",6]]],[11,"width","","Returns pixel count in each row. Should be equal or less â€¦",265,[[],["i32",15]]],[11,"height","","Returns pixel row count.",265,[[],["i32",15]]],[11,"color_type","","",265,[[],["colortype",4]]],[11,"alpha_type","","",265,[[],["alphatype",4]]],[11,"color_space","","Returns [ColorSpace], the range of colors, associated â€¦",265,[[],[["colorspace",6],["option",4]]]],[11,"bytes_per_pixel","","Returns number of bytes per pixel required by [ColorType].",265,[[],["usize",15]]],[11,"row_bytes_as_pixels","","Returns number of pixels that fit on row. Should be â€¦",265,[[],["usize",15]]],[11,"shift_per_pixel","","Returns bit shift converting row bytes to row pixels.",265,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if either <code>width()</code> or <code>height()</code> are zero.",265,[[],["bool",15]]],[11,"is_null","","Returns <code>true</code> if [PixelRef] is <code>None</code>.",265,[[],["bool",15]]],[11,"draws_nothing","","Returns <code>true</code> if <code>width()</code> or <code>height()</code> are zero, or if [â€¦",265,[[],["bool",15]]],[11,"row_bytes","","Returns row bytes, the interval from one pixel row to the â€¦",265,[[],["usize",15]]],[11,"set_alpha_type","","Sets [AlphaType], if <code>alpha_type</code> is compatible with [â€¦",265,[[["alphatype",4]],["bool",15]]],[11,"pixels","","Returns pixel address, the base address corresponding to â€¦",265,[[]]],[11,"compute_byte_size","","Returns minimum memory required for pixel storage.",265,[[],["usize",15]]],[11,"is_immutable","","Returns <code>true</code> if pixels can not change.",265,[[],["bool",15]]],[11,"set_immutable","","Sets internal flag to mark [Bitmap] as immutable. Once â€¦",265,[[]]],[11,"is_opaque","","Returns <code>true</code> if [AlphaType] is set to hint that all â€¦",265,[[],["bool",15]]],[11,"reset","","Resets to its initial state; all fields are set to zero, â€¦",265,[[]]],[11,"compute_is_opaque","","Returns <code>true </code>if all pixels are opaque. [ColorType] â€¦",265,[[],["bool",15]]],[11,"bounds","","Returns <code>IRect { 0, 0, width(), height() }</code>.",265,[[],["irect",3]]],[11,"dimensions","","Returns <code>ISize { width(), height() }</code>.",265,[[],["isize",3]]],[11,"get_subset","","Returns the bounds of this bitmap, offset by its [PixelRefâ€¦",265,[[],["irect",3]]],[11,"set_info","","Sets width, height, [AlphaType], [ColorType], [ColorSpace]â€¦",265,[[["imageinfo",6]],["bool",15]]],[11,"try_alloc_pixels_flags","","Sets [ImageInfo] to info following the rules in <code>set_info()</code>â€¦",265,[[["imageinfo",6]],["bool",15]]],[11,"alloc_pixels_flags","","Sets [ImageInfo] to info following the rules in <code>set_info()</code>â€¦",265,[[["imageinfo",6]]]],[11,"try_alloc_pixels_info","","Sets [ImageInfo] to info following the rules in <code>set_info()</code>â€¦",265,[[["imageinfo",6]],["bool",15]]],[11,"alloc_pixels_info","","Sets [ImageInfo] to info following the rules in <code>set_info()</code>â€¦",265,[[["imageinfo",6]]]],[11,"try_alloc_n32_pixels","","Sets [ImageInfo] to width, height, and native color type; â€¦",265,[[],["bool",15]]],[11,"alloc_n32_pixels","","Sets [ImageInfo] to width, height, and native color type; â€¦",265,[[]]],[11,"install_pixels","","Sets [ImageInfo] to info following the rules in <code>set_info()</code>â€¦",265,[[["usize",15],["imageinfo",6]],["bool",15]]],[11,"try_alloc_pixels","","Allocates pixel memory with HeapAllocator, and replaces â€¦",265,[[],["bool",15]]],[11,"alloc_pixels","","Allocates pixel memory with HeapAllocator, and replaces â€¦",265,[[]]],[11,"pixel_ref","","Returns [PixelRef], which contains: pixel base address; â€¦",265,[[],[["pixelref",6],["option",4]]]],[11,"pixel_ref_origin","","Returns origin of pixels within [PixelRef]. [Bitmap] â€¦",265,[[],["ipoint",3]]],[11,"set_pixel_ref","","Replaces <code>pixel_ref</code> and origin in [Bitmap].  <code>offset</code> â€¦",265,[[]]],[11,"is_ready_to_draw","","Returns <code>true</code> if [Bitmap] can be drawn.",265,[[],["bool",15]]],[11,"generation_id","","Returns a unique value corresponding to the pixels in [â€¦",265,[[],["u32",15]]],[11,"notify_pixels_changed","","Marks that pixels in [PixelRef] have changed. Subsequent â€¦",265,[[]]],[11,"erase_color","","Replaces pixel values with <code>c</code>, interpreted as being in the â€¦",265,[[]]],[11,"erase_argb","","Replaces pixel values with unpremultiplied color built â€¦",265,[[["u8",15]]]],[11,"erase","","Replaces pixel values inside area with c. interpreted as â€¦",265,[[]]],[11,"get_color","","Returns pixel at (x, y) as unpremultiplied color. Returns â€¦",265,[[],["color",3]]],[11,"get_alpha_f","","Look up the pixel at (x,y) and return its alpha â€¦",265,[[],["f32",15]]],[11,"get_addr","","Returns pixel address at (x, y).",265,[[]]],[11,"extract_subset","","Shares [PixelRef] with dst. Pixels are not copied; [Bitmapâ€¦",265,[[],["bool",15]]],[11,"read_pixels","","Copies a [crate::Rect] of pixels from [Bitmap] to â€¦",265,[[["usize",15],["imageinfo",6],["i32",15]],["bool",15]]],[11,"extract_alpha","","Sets dst to alpha described by pixels. Returns <code>false</code> if â€¦",265,[[["option",4],["paint",6]],[["option",4],["ipoint",3]]]],[11,"peek_pixels","","Copies [Bitmap] pixel address, row bytes, and [ImageInfo] â€¦",265,[[],[["borrows",3],["option",4]]]],[11,"to_shader","","",265,[[],[["option",4],["shader",6]]]],[11,"as_image","","Returns a new image from the bitmap. If the bitmap is â€¦",265,[[],["image",6]]],[11,"new","","Creates an empty [Bitmap] without pixels, with [â€¦",285,[[]]],[11,"swap","","Swaps the fields of the two bitmaps.",285,[[]]],[11,"pixmap","","Returns a constant reference to the [Pixmap] holding the [â€¦",285,[[],["pixmap",6]]],[11,"info","","Returns width, height, [AlphaType], [ColorType], and [â€¦",285,[[],["imageinfo",6]]],[11,"width","","Returns pixel count in each row. Should be equal or less â€¦",285,[[],["i32",15]]],[11,"height","","Returns pixel row count.",285,[[],["i32",15]]],[11,"color_type","","",285,[[],["colortype",4]]],[11,"alpha_type","","",285,[[],["alphatype",4]]],[11,"color_space","","Returns [ColorSpace], the range of colors, associated â€¦",285,[[],[["colorspace",6],["option",4]]]],[11,"bytes_per_pixel","","Returns number of bytes per pixel required by [ColorType].",285,[[],["usize",15]]],[11,"row_bytes_as_pixels","","Returns number of pixels that fit on row. Should be â€¦",285,[[],["usize",15]]],[11,"shift_per_pixel","","Returns bit shift converting row bytes to row pixels.",285,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if either <code>width()</code> or <code>height()</code> are zero.",285,[[],["bool",15]]],[11,"is_null","","Returns <code>true</code> if [PixelRef] is <code>None</code>.",285,[[],["bool",15]]],[11,"draws_nothing","","Returns <code>true</code> if <code>width()</code> or <code>height()</code> are zero, or if [â€¦",285,[[],["bool",15]]],[11,"row_bytes","","Returns row bytes, the interval from one pixel row to the â€¦",285,[[],["usize",15]]],[11,"set_alpha_type","","Sets [AlphaType], if <code>alpha_type</code> is compatible with [â€¦",285,[[["alphatype",4]],["bool",15]]],[11,"pixels","","Returns pixel address, the base address corresponding to â€¦",285,[[]]],[11,"compute_byte_size","","Returns minimum memory required for pixel storage.",285,[[],["usize",15]]],[11,"is_immutable","","Returns <code>true</code> if pixels can not change.",285,[[],["bool",15]]],[11,"set_immutable","","Sets internal flag to mark [Bitmap] as immutable. Once â€¦",285,[[]]],[11,"is_opaque","","Returns <code>true</code> if [AlphaType] is set to hint that all â€¦",285,[[],["bool",15]]],[11,"reset","","Resets to its initial state; all fields are set to zero, â€¦",285,[[]]],[11,"compute_is_opaque","","Returns <code>true </code>if all pixels are opaque. [ColorType] â€¦",285,[[],["bool",15]]],[11,"bounds","","Returns <code>IRect { 0, 0, width(), height() }</code>.",285,[[],["irect",3]]],[11,"dimensions","","Returns <code>ISize { width(), height() }</code>.",285,[[],["isize",3]]],[11,"get_subset","","Returns the bounds of this bitmap, offset by its [PixelRefâ€¦",285,[[],["irect",3]]],[11,"set_info","","Sets width, height, [AlphaType], [ColorType], [ColorSpace]â€¦",285,[[["imageinfo",6]],["bool",15]]],[11,"try_alloc_pixels_flags","","Sets [ImageInfo] to info following the rules in <code>set_info()</code>â€¦",285,[[["imageinfo",6]],["bool",15]]],[11,"alloc_pixels_flags","","Sets [ImageInfo] to info following the rules in <code>set_info()</code>â€¦",285,[[["imageinfo",6]]]],[11,"try_alloc_pixels_info","","Sets [ImageInfo] to info following the rules in <code>set_info()</code>â€¦",285,[[["imageinfo",6]],["bool",15]]],[11,"alloc_pixels_info","","Sets [ImageInfo] to info following the rules in <code>set_info()</code>â€¦",285,[[["imageinfo",6]]]],[11,"try_alloc_n32_pixels","","Sets [ImageInfo] to width, height, and native color type; â€¦",285,[[],["bool",15]]],[11,"alloc_n32_pixels","","Sets [ImageInfo] to width, height, and native color type; â€¦",285,[[]]],[11,"install_pixels","","Sets [ImageInfo] to info following the rules in <code>set_info()</code>â€¦",285,[[["usize",15],["imageinfo",6]],["bool",15]]],[11,"try_alloc_pixels","","Allocates pixel memory with HeapAllocator, and replaces â€¦",285,[[],["bool",15]]],[11,"alloc_pixels","","Allocates pixel memory with HeapAllocator, and replaces â€¦",285,[[]]],[11,"pixel_ref","","Returns [PixelRef], which contains: pixel base address; â€¦",285,[[],[["pixelref",6],["option",4]]]],[11,"pixel_ref_origin","","Returns origin of pixels within [PixelRef]. [Bitmap] â€¦",285,[[],["ipoint",3]]],[11,"set_pixel_ref","","Replaces <code>pixel_ref</code> and origin in [Bitmap].  <code>offset</code> â€¦",285,[[]]],[11,"is_ready_to_draw","","Returns <code>true</code> if [Bitmap] can be drawn.",285,[[],["bool",15]]],[11,"generation_id","","Returns a unique value corresponding to the pixels in [â€¦",285,[[],["u32",15]]],[11,"notify_pixels_changed","","Marks that pixels in [PixelRef] have changed. Subsequent â€¦",285,[[]]],[11,"erase_color","","Replaces pixel values with <code>c</code>, interpreted as being in the â€¦",285,[[]]],[11,"erase_argb","","Replaces pixel values with unpremultiplied color built â€¦",285,[[["u8",15]]]],[11,"erase","","Replaces pixel values inside area with c. interpreted as â€¦",285,[[]]],[11,"get_color","","Returns pixel at (x, y) as unpremultiplied color. Returns â€¦",285,[[],["color",3]]],[11,"get_alpha_f","","Look up the pixel at (x,y) and return its alpha â€¦",285,[[],["f32",15]]],[11,"get_addr","","Returns pixel address at (x, y).",285,[[]]],[11,"extract_subset","","Shares [PixelRef] with dst. Pixels are not copied; [Bitmapâ€¦",285,[[],["bool",15]]],[11,"read_pixels","","Copies a [crate::Rect] of pixels from [Bitmap] to â€¦",285,[[["usize",15],["imageinfo",6],["i32",15]],["bool",15]]],[11,"extract_alpha","","Sets dst to alpha described by pixels. Returns <code>false</code> if â€¦",285,[[["option",4],["paint",6]],[["option",4],["ipoint",3]]]],[11,"peek_pixels","","Copies [Bitmap] pixel address, row bytes, and [ImageInfo] â€¦",285,[[],[["borrows",3],["option",4]]]],[11,"to_shader","","",285,[[],[["option",4],["shader",6]]]],[11,"as_image","","Returns a new image from the bitmap. If the bitmap is â€¦",285,[[],["image",6]]],[18,"LastCoeffMode","","",166,null],[18,"LastSeparableMode","","",166,null],[18,"LastMode","","",166,null],[11,"as_coeff","","",166,[[],["option",4]]],[11,"name","","",166,[[],["str",15]]],[18,"LastEnum","","",168,null],[18,"PRESERVE_LCD_TEXT","skia_safe::canvas","",208,null],[18,"INIT_WITH_PREVIOUS","","",208,null],[18,"F16_COLOR_TYPE","","",208,null],[11,"empty","","Returns an empty set of flags",208,[[],["savelayerflags",3]]],[11,"all","","Returns the set containing all flags.",208,[[],["savelayerflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",208,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that â€¦",208,[[["u32",15]],[["option",4],["savelayerflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any â€¦",208,[[["u32",15]],["savelayerflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving allâ€¦",208,[[["u32",15]],["savelayerflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",208,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",208,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦",208,[[["savelayerflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained â€¦",208,[[["savelayerflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",208,[[["savelayerflags",3]]]],[11,"remove","","Removes the specified flags in-place.",208,[[["savelayerflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",208,[[["savelayerflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the â€¦",208,[[["bool",15],["savelayerflags",3]]]],[11,"bounds","","",209,[[["rect",3]]]],[11,"paint","","",209,[[["paint",6]]]],[11,"backdrop","","",209,[[["imagefilter",6]]]],[11,"clip_mask","","",209,[[["image",6]]]],[11,"clip_matrix","","",209,[[["matrix",3]]]],[11,"flags","","",209,[[["savelayerflags",3]]]],[11,"from_raster_direct","","",210,[[["imageinfo",6],["option",4],["surfaceprops",3]],[["ownedcanvas",3],["option",4]]]],[11,"from_raster_direct_n32","","",210,[[],[["ownedcanvas",3],["option",4]]]],[11,"new","","",210,[[["option",4],["surfaceprops",3]],[["option",4],["ownedcanvas",3]]]],[11,"from_bitmap","","",210,[[["option",4],["bitmap",6],["surfaceprops",3]],["ownedcanvas",3]]],[11,"image_info","","",210,[[],["imageinfo",6]]],[11,"props","","",210,[[],[["surfaceprops",3],["option",4]]]],[11,"flush","","",210,[[]]],[11,"base_layer_size","","",210,[[],["isize",3]]],[11,"new_surface","","",210,[[["imageinfo",6],["option",4],["surfaceprops",3]],[["surface",6],["option",4]]]],[11,"gpu_context","","",210,[[]]],[11,"recording_context","","",210,[[],[["option",4],["recordingcontext",6]]]],[11,"surface","","SafetyThis function is unsafe because it is not clear how â€¦",210,[[],[["surface",6],["option",4]]]],[11,"access_top_layer_pixels","","",210,[[],[["option",4],["toplayerpixels",3]]]],[11,"peek_pixels","","",210,[[],[["borrows",3],["option",4]]]],[11,"read_pixels","","",210,[[["usize",15],["imageinfo",6]],["bool",15]]],[11,"read_pixels_to_pixmap","","",210,[[["pixmap",6]],["bool",15]]],[11,"read_pixels_to_bitmap","","",210,[[["bitmap",6]],["bool",15]]],[11,"write_pixels","","",210,[[["usize",15],["imageinfo",6]],["bool",15]]],[11,"write_pixels_from_bitmap","","",210,[[["bitmap",6]],["bool",15]]],[11,"save","","",210,[[],["usize",15]]],[11,"save_layer","","",210,[[["savelayerrec",3]],["usize",15]]],[11,"save_layer_alpha","","",210,[[["u8cpu",6]],["usize",15]]],[11,"restore","","",210,[[]]],[11,"save_count","","",210,[[],["usize",15]]],[11,"restore_to_count","","",210,[[["usize",15]]]],[11,"translate","","",210,[[]]],[11,"scale","","",210,[[]]],[11,"rotate","","",210,[[["option",4],["scalar",6],["point",3]]]],[11,"skew","","",210,[[]]],[11,"concat","","",210,[[["matrix",3]]]],[11,"concat_44","","",210,[[["m44",3]]]],[11,"set_matrix","","",210,[[["m44",3]]]],[11,"reset_matrix","","",210,[[]]],[11,"clip_rect","","",210,[[]]],[11,"clip_irect","","",210,[[]]],[11,"clip_rrect","","",210,[[]]],[11,"clip_path","","",210,[[["path",6]]]],[11,"clip_shader","","",210,[[]]],[11,"clip_region","","",210,[[["region",6]]]],[11,"local_clip_bounds","","",210,[[],[["option",4],["rect",3]]]],[11,"device_clip_bounds","","",210,[[],[["option",4],["irect",3]]]],[11,"draw_color","","",210,[[]]],[11,"clear","","",210,[[]]],[11,"discard","","",210,[[]]],[11,"draw_paint","","",210,[[["paint",6]]]],[11,"draw_points","","",210,[[["pointmode",4],["paint",6]]]],[11,"draw_point","","",210,[[["paint",6]]]],[11,"draw_line","","",210,[[["paint",6]]]],[11,"draw_rect","","",210,[[["paint",6]]]],[11,"draw_irect","","",210,[[["paint",6]]]],[11,"draw_region","","",210,[[["region",6],["paint",6]]]],[11,"draw_oval","","",210,[[["paint",6]]]],[11,"draw_rrect","","",210,[[["paint",6]]]],[11,"draw_drrect","","",210,[[["paint",6]]]],[11,"draw_circle","","",210,[[["scalar",6],["paint",6]]]],[11,"draw_arc","","",210,[[["bool",15],["scalar",6],["paint",6]]]],[11,"draw_round_rect","","",210,[[["scalar",6],["paint",6]]]],[11,"draw_path","","",210,[[["path",6],["paint",6]]]],[11,"draw_image","","",210,[[["option",4],["paint",6]]]],[11,"draw_image_rect","","",210,[[["paint",6],["option",4]]]],[11,"draw_image_with_sampling_options","","",210,[[["option",4],["paint",6]]]],[11,"draw_image_rect_with_sampling_options","","",210,[[["paint",6],["option",4]]]],[11,"draw_image_nine","","",210,[[["paint",6],["option",4],["filtermode",4]]]],[11,"draw_image_lattice","","",210,[[["paint",6],["lattice",3],["option",4],["filtermode",4]]]],[11,"draw_str","","",210,[[["font",6],["paint",6]]]],[11,"draw_text_blob","","",210,[[["paint",6]]]],[11,"draw_picture","","",210,[[["option",4],["matrix",3],["option",4],["paint",6]]]],[11,"draw_vertices","","",210,[[["vertices",6],["paint",6]]]],[11,"draw_patch","","",210,[[["paint",6]]]],[11,"draw_drawable","","",210,[[["matrix",3],["option",4],["drawable",6]]]],[11,"draw_drawable_at","","",210,[[["drawable",6]]]],[11,"draw_annotation","","",210,[[["data",6],["str",15]]]],[11,"is_clip_empty","","",210,[[],["bool",15]]],[11,"is_clip_rect","","",210,[[],["bool",15]]],[11,"local_to_device","","",210,[[],["m44",3]]],[11,"local_to_device_as_3x3","","",210,[[],["matrix",3]]],[11,"total_matrix","","",210,[[],["matrix",3]]],[11,"restore","","",212,[[]]],[11,"guard","","",213,[[["bool",15],["canvas",3]],["autorestoredcanvas",3]]],[18,"Max_EnumValue","skia_safe","",169,null],[11,"new","","",214,[[["u32",15]]]],[11,"from_argb","","",214,[[["u8",15]],["color",3]]],[11,"from_rgb","","",214,[[["u8",15]],["color",3]]],[11,"a","","",214,[[],["u8",15]]],[11,"r","","",214,[[],["u8",15]]],[11,"g","","",214,[[],["u8",15]]],[11,"b","","",214,[[],["u8",15]]],[11,"with_a","","",214,[[["u8",15]]]],[18,"TRANSPARENT","","",214,null],[18,"BLACK","","",214,null],[18,"DARK_GRAY","","",214,null],[18,"GRAY","","",214,null],[18,"LIGHT_GRAY","","",214,null],[18,"WHITE","","",214,null],[18,"RED","","",214,null],[18,"GREEN","","",214,null],[18,"BLUE","","",214,null],[18,"YELLOW","","",214,null],[18,"CYAN","","",214,null],[18,"MAGENTA","","",214,null],[11,"to_rgb","","",214,[[],["rgb",3]]],[11,"to_hsv","","",214,[[],["hsv",3]]],[11,"to_hsv","","",170,[[],["hsv",3]]],[11,"to_color","","",171,[[["u8",15]],["color",3]]],[18,"LastEnum","","",172,null],[18,"RED","","",215,null],[18,"GREEN","","",215,null],[18,"BLUE","","",215,null],[18,"ALPHA","","",215,null],[18,"GRAY","","",215,null],[18,"GRAY_ALPHA","","",215,null],[18,"RG","","",215,null],[18,"RGB","","",215,null],[18,"RGBA","","",215,null],[11,"empty","","Returns an empty set of flags",215,[[],["colorchannelflag",3]]],[11,"all","","Returns the set containing all flags.",215,[[],["colorchannelflag",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",215,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that â€¦",215,[[["u32",15]],[["colorchannelflag",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any â€¦",215,[[["u32",15]],["colorchannelflag",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving allâ€¦",215,[[["u32",15]],["colorchannelflag",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",215,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",215,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦",215,[[["colorchannelflag",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained â€¦",215,[[["colorchannelflag",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",215,[[["colorchannelflag",3]]]],[11,"remove","","Removes the specified flags in-place.",215,[[["colorchannelflag",3]]]],[11,"toggle","","Toggles the specified flags in-place.",215,[[["colorchannelflag",3]]]],[11,"set","","Inserts or removes the specified flags depending on the â€¦",215,[[["colorchannelflag",3],["bool",15]]]],[11,"new","","",173,[[["f32",15]],["color4f",3]]],[11,"as_array","","",173,[[]]],[11,"as_array_mut","","",173,[[]]],[11,"is_opaque","","",173,[[],["bool",15]]],[11,"fits_in_bytes","","",173,[[],["bool",15]]],[11,"to_color","","",173,[[],["color",3]]],[11,"to_opaque","","",173,[[]]],[18,"ALPHA_UNCHANGED","skia_safe::color_filter","",216,null],[11,"empty","","Returns an empty set of flags",216,[[],["flags",3]]],[11,"all","","Returns the set containing all flags.",216,[[],["flags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",216,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that â€¦",216,[[["u32",15]],[["flags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any â€¦",216,[[["u32",15]],["flags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving allâ€¦",216,[[["u32",15]],["flags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",216,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",216,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦",216,[[["flags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained â€¦",216,[[["flags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",216,[[["flags",3]]]],[11,"remove","","Removes the specified flags in-place.",216,[[["flags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",216,[[["flags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the â€¦",216,[[["flags",3],["bool",15]]]],[11,"to_a_color_mode","skia_safe","",267,[[],["option",4]]],[11,"to_a_color_matrix","","",267,[[],["option",4]]],[11,"flags","","",267,[[],["flags",3]]],[11,"is_alpha_unchanged","","",267,[[],["bool",15]]],[11,"filter_color","","",267,[[],["color",3]]],[11,"filter_color4f","","",267,[[["option",4],["colorspace",6]],["color4f",3]]],[11,"composed","","",267,[[],["option",4]]],[11,"new_srgb","","",267,[[],["colorspace",6]]],[11,"new_srgb_linear","","",267,[[],["colorspace",6]]],[11,"to_xyzd50_hash","","",267,[[],["xyzd50hash",3]]],[11,"with_linear_gamma","","",267,[[],["colorspace",6]]],[11,"with_srgb_gamma","","",267,[[],["colorspace",6]]],[11,"with_color_spin","","",267,[[],["colorspace",6]]],[11,"is_srgb","","",267,[[],["bool",15]]],[11,"serialize","","",267,[[],["data",6]]],[11,"deserialize","","",267,[[],["colorspace",6]]],[11,"new_srgb","","",296,[[],["colorspace",6]]],[11,"new_srgb_linear","","",296,[[],["colorspace",6]]],[11,"to_xyzd50_hash","","",296,[[],["xyzd50hash",3]]],[11,"with_linear_gamma","","",296,[[],["colorspace",6]]],[11,"with_srgb_gamma","","",296,[[],["colorspace",6]]],[11,"with_color_spin","","",296,[[],["colorspace",6]]],[11,"is_srgb","","",296,[[],["bool",15]]],[11,"serialize","","",296,[[],["data",6]]],[11,"deserialize","","",296,[[],["colorspace",6]]],[18,"GET_POSITION","skia_safe::contour_measure","",218,null],[18,"GET_TANGENT","","",218,null],[18,"GET_POS_AND_TAN","","",218,null],[11,"empty","","Returns an empty set of flags",218,[[],["matrixflags",3]]],[11,"all","","Returns the set containing all flags.",218,[[],["matrixflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",218,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that â€¦",218,[[["u32",15]],[["option",4],["matrixflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any â€¦",218,[[["u32",15]],["matrixflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving allâ€¦",218,[[["u32",15]],["matrixflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",218,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",218,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦",218,[[["matrixflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained â€¦",218,[[["matrixflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",218,[[["matrixflags",3]]]],[11,"remove","","Removes the specified flags in-place.",218,[[["matrixflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",218,[[["matrixflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the â€¦",218,[[["bool",15],["matrixflags",3]]]],[11,"length","skia_safe","",267,[[],["scalar",6]]],[11,"pos_tan","","",267,[[["scalar",6]],["option",4]]],[11,"get_matrix","","",267,[[["scalar",6]],[["option",4],["matrix",3]]]],[11,"segment","","",267,[[["bool",15],["scalar",6]],[["option",4],["path",6]]]],[11,"is_closed","","",267,[[],["bool",15]]],[11,"new","","",265,[[["bool",15],["path",6]]]],[11,"from_path","","",265,[[["bool",15],["path",6]]]],[11,"reset","","",265,[[["bool",15],["path",6]]]],[18,"Last","","",176,null],[11,"new","","",219,[[]]],[11,"is_linear","","",219,[[],["bool",15]]],[11,"compute_y_from_x","","",219,[[["f32",15]],["f32",15]]],[11,"compute_from_t","","",219,[[["f32",15]],["point",3]]],[11,"size","","",267,[[],["usize",15]]],[11,"is_empty","","",267,[[],["bool",15]]],[11,"as_bytes","","",267,[[]]],[11,"copy_range","","",267,[[["usize",15]]]],[11,"new_copy","","",267,[[]]],[11,"new_bytes","","Constructs Data from a given byte slice without copying â€¦",267,[[]]],[11,"new_uninitialized","","",267,[[["usize",15]],["data",6]]],[11,"new_subset","","",267,[[["usize",15],["data",6]],["data",6]]],[11,"new_str","","Constructs Data from a copy of a &str.",267,[[],["data",6]]],[11,"new_cstr","","Constructs Data from a &CStr by copying its contents.",267,[[["cstr",3]],["data",6]]],[11,"new_empty","","",267,[[]]],[11,"is_empty","","",267,[[],["bool",15]]],[11,"count","","",267,[[],["usize",15]]],[11,"at_size","","",267,[[["usize",15]],["usize",15]]],[11,"at","","",267,[[["usize",15]]]],[11,"at_t","","",267,[[["usize",15]]]],[11,"at_str","","",267,[[["usize",15]],["cstr",3]]],[11,"new_empty","","",267,[[]]],[11,"from_slices","","",267,[[]]],[11,"from_slice","","",267,[[]]],[11,"iter","","",267,[[],["iter",3]]],[11,"new","","",265,[[["surfacecharacterization",6]]]],[11,"canvas","","",265,[[],["canvas",3]]],[11,"detach","","",265,[[],[["deferreddisplaylist",6],["option",4]]]],[11,"abort","skia_safe::document","",223,[[]]],[11,"pages","","The number of pages in this document.",223,[[],["usize",15]]],[11,"begin_page","","",223,[[["option",4],["rect",3]],[["document",3],["onpage",3]]]],[11,"close","","Close the document and return the encoded representation. â€¦",223,[[],["data",6]]],[11,"page","","The current page we are currently drawing on.",223,[[],["usize",15]]],[11,"canvas","","Borrows the canvas for the current page on the document.",223,[[],["canvas",3]]],[11,"end_page","","Ends the page. This function consumes the document and â€¦",223,[[],["document",3]]],[11,"draw","skia_safe","",266,[[["backenddrawableinfo",6]]]],[11,"draw","","",267,[[["canvas",3],["option",4],["matrix",3]]]],[11,"draw_at","","",267,[[["canvas",3]]]],[11,"snap_gpu_draw_handler","","",267,[[["imageinfo",6],["backendapi",4],["matrix",3]],[["gpudrawhandler",6],["option",4]]]],[11,"generation_id","","",267,[[],["u32",15]]],[11,"bounds","","",267,[[],["rect",3]]],[11,"notify_drawing_changed","","",267,[[]]],[18,"Last","","",178,null],[11,"new","","",265,[[]]],[11,"from_typeface","","",265,[[]]],[11,"from_typeface_with_params","","",265,[[["scalar",6]]]],[11,"is_force_auto_hinting","","",265,[[],["bool",15]]],[11,"is_embedded_bitmaps","","",265,[[],["bool",15]]],[11,"is_subpixel","","",265,[[],["bool",15]]],[11,"is_linear_metrics","","",265,[[],["bool",15]]],[11,"is_embolden","","",265,[[],["bool",15]]],[11,"is_baseline_snap","","",265,[[],["bool",15]]],[11,"set_force_auto_hinting","","",265,[[["bool",15]]]],[11,"set_embedded_bitmaps","","",265,[[["bool",15]]]],[11,"set_subpixel","","",265,[[["bool",15]]]],[11,"set_linear_metrics","","",265,[[["bool",15]]]],[11,"set_embolden","","",265,[[["bool",15]]]],[11,"set_baseline_snap","","",265,[[["bool",15]]]],[11,"edging","","",265,[[],["edging",4]]],[11,"set_edging","","",265,[[["edging",4]]]],[11,"set_hinting","","",265,[[["fonthinting",4]]]],[11,"hinting","","",265,[[],["fonthinting",4]]],[11,"with_size","","",265,[[["scalar",6]],["option",4]]],[11,"typeface","","",265,[[],[["option",4],["typeface",6]]]],[11,"typeface_or_default","","",265,[[],["typeface",6]]],[11,"size","","",265,[[],["scalar",6]]],[11,"scale_x","","",265,[[],["scalar",6]]],[11,"skew_x","","",265,[[],["scalar",6]]],[11,"set_typeface","","",265,[[]]],[11,"set_size","","",265,[[["scalar",6]]]],[11,"set_scale_x","","",265,[[["scalar",6]]]],[11,"set_skew_x","","",265,[[["scalar",6]]]],[11,"str_to_glyphs","","",265,[[],["usize",15]]],[11,"text_to_glyphs","","",265,[[["textencoding",4]],["usize",15]]],[11,"count_str","","",265,[[],["usize",15]]],[11,"count_text","","",265,[[["textencoding",4]],["usize",15]]],[11,"str_to_glyphs_vec","","",265,[[],[["vec",3],["glyphid",6]]]],[11,"text_to_glyphs_vec","","",265,[[["textencoding",4]],[["vec",3],["glyphid",6]]]],[11,"measure_str","","",265,[[["option",4],["paint",6]]]],[11,"measure_text","","",265,[[["option",4],["textencoding",4],["paint",6]]]],[11,"unichar_to_glyph","","",265,[[["unichar",6]],["glyphid",6]]],[11,"unichar_to_glyphs","","",265,[[]]],[11,"get_widths","","",265,[[]]],[11,"get_widths_bounds","","",265,[[["option",4],["option",4],["option",4],["paint",6]]]],[11,"get_bounds","","",265,[[["option",4],["paint",6]]]],[11,"get_pos","","",265,[[["option",4],["point",3]]]],[11,"get_x_pos","","",265,[[["option",4],["scalar",6]]]],[11,"get_path","","",265,[[["glyphid",6]],[["option",4],["path",6]]]],[11,"metrics","","",265,[[]]],[11,"spacing","","",265,[[],["scalar",6]]],[11,"new","skia_safe::font_arguments","",224,[[]]],[11,"set_collection_index","","",224,[[["usize",15]]]],[11,"set_variation_design_position","","",224,[[["variationposition",3]],["fontarguments",3]]],[11,"collection_index","","",224,[[],["usize",15]]],[11,"variation_design_position","","",224,[[],["variationposition",3]]],[18,"UNDERLINE_THICKNESS_IS_VALID","skia_safe::font_metrics","",225,null],[18,"UNDERLINE_POSITION_IS_VALID","","",225,null],[18,"STRIKEOUT_THICKNESS_IS_VALID","","",225,null],[18,"STRIKEOUT_POSITION_IS_VALID","","",225,null],[18,"BOUNDS_INVALID","","",225,null],[11,"empty","","Returns an empty set of flags",225,[[],["flags",3]]],[11,"all","","Returns the set containing all flags.",225,[[],["flags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",225,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that â€¦",225,[[["u32",15]],[["option",4],["flags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any â€¦",225,[[["u32",15]],["flags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving allâ€¦",225,[[["u32",15]],["flags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",225,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",225,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦",225,[[["flags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained â€¦",225,[[["flags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",225,[[["flags",3]]]],[11,"remove","","Removes the specified flags in-place.",225,[[["flags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",225,[[["flags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the â€¦",225,[[["bool",15],["flags",3]]]],[11,"underline_thickness","","",71,[[],[["option",4],["scalar",6]]]],[11,"underline_position","","",71,[[],[["option",4],["scalar",6]]]],[11,"strikeout_thickness","","",71,[[],[["option",4],["scalar",6]]]],[11,"strikeout_position","","",71,[[],[["option",4],["scalar",6]]]],[11,"has_bounds","","",71,[[],["bool",15]]],[11,"count","skia_safe","",267,[[],["usize",15]]],[11,"style","","",267,[[["usize",15]]]],[11,"new_typeface","","",267,[[["usize",15]],[["option",4],["typeface",6]]]],[11,"match_style","","",267,[[["usize",15],["fontstyle",3]],[["option",4],["typeface",6]]]],[11,"new_empty","","",267,[[]]],[11,"new","","",267,[[]]],[11,"count_families","","",267,[[],["usize",15]]],[11,"family_name","","",267,[[["usize",15]],["string",3]]],[11,"new_styleset","","",267,[[["usize",15]],["fontstyleset",6]]],[11,"match_family","","",267,[[],["fontstyleset",6]]],[11,"match_family_style","","",267,[[["fontstyle",3]],[["option",4],["typeface",6]]]],[11,"match_family_style_character","","",267,[[["fontstyle",3],["unichar",6]],[["option",4],["typeface",6]]]],[11,"match_face_style","","",267,[[["fontstyle",3]]]],[11,"new_from_data","","",267,[[],[["option",4],["typeface",6]]]],[11,"new","skia_safe::font_parameters::variation","",72,[[["fourbytetag",3],["bool",15],["f32",15]]]],[11,"is_hidden","","",72,[[],["bool",15]]],[11,"set_hidden","","",72,[[["bool",15]]]],[18,"INVISIBLE","skia_safe::font_style","",226,null],[18,"THIN","","",226,null],[18,"EXTRA_LIGHT","","",226,null],[18,"LIGHT","","",226,null],[18,"NORMAL","","",226,null],[18,"MEDIUM","","",226,null],[18,"SEMI_BOLD","","",226,null],[18,"BOLD","","",226,null],[18,"EXTRA_BOLD","","",226,null],[18,"BLACK","","",226,null],[18,"EXTRA_BLACK","","",226,null],[18,"ULTRA_CONDENSED","","",227,null],[18,"EXTRA_CONDENSED","","",227,null],[18,"CONDENSED","","",227,null],[18,"SEMI_CONDENSED","","",227,null],[18,"NORMAL","","",227,null],[18,"SEMI_EXPANDED","","",227,null],[18,"EXPANDED","","",227,null],[18,"EXTRA_EXPANDED","","",227,null],[18,"ULTRA_EXPANDED","","",227,null],[11,"new","","",228,[[["weight",3],["width",3],["slant",4]]]],[11,"weight","","",228,[[],["weight",3]]],[11,"width","","",228,[[],["width",3]]],[11,"slant","","",228,[[],["slant",4]]],[11,"normal","","",228,[[],["fontstyle",3]]],[11,"bold","","",228,[[],["fontstyle",3]]],[11,"italic","","",228,[[],["fontstyle",3]]],[11,"bold_italic","","",228,[[],["fontstyle",3]]],[18,"Last","skia_safe::image","",77,null],[18,"COUNT","","",77,null],[18,"ETC1","","",77,null],[11,"from_raster_data","skia_safe","",267,[[["usize",15],["imageinfo",6]],[["image",6],["option",4]]]],[11,"from_bitmap","","",267,[[["bitmap",6]],[["image",6],["option",4]]]],[11,"from_generator","","",267,[[["imagegenerator",6]],[["image",6],["option",4]]]],[11,"from_encoded","","",267,[[],[["image",6],["option",4]]]],[11,"decode_to_raster","","",267,[[]]],[11,"new_texture_from_compressed","","",267,[[["compressiontype",4],["data",6],["directcontext",6]],[["image",6],["option",4]]]],[11,"from_compressed","","",267,[[["recordingcontext",6],["data",6],["compressiontype",4]]]],[11,"new_raster_from_compressed","","",267,[[["compressiontype",4]],[["image",6],["option",4]]]],[11,"from_texture","","",267,[[["recordingcontext",6],["backendtexture",6],["surfaceorigin",4],["colortype",4],["alphatype",4]],[["image",6],["option",4]]]],[11,"from_pixmap_cross_context","","",267,[[["pixmap",6],["bool",15],["directcontext",6]],[["image",6],["option",4]]]],[11,"new_cross_context_from_pixmap","","",267,[[["pixmap",6],["bool",15],["directcontext",6]],[["image",6],["option",4]]]],[11,"from_adopted_texture","","",267,[[["recordingcontext",6],["backendtexture",6],["surfaceorigin",4],["colortype",4],["alphatype",4]],[["image",6],["option",4]]]],[11,"from_yuva_textures","","",267,[[["recordingcontext",6],["yuvabackendtextures",6]],[["image",6],["option",4]]]],[11,"from_yuva_pixmaps","","",267,[[["recordingcontext",6],["yuvapixmaps",6]],[["image",6],["option",4]]]],[11,"from_nv12_textures_copy","","",267,[[["yuvcolorspace",4],["surfaceorigin",4],["directcontext",6]]]],[11,"from_picture","","",267,[[["option",4],["matrix",3],["bitdepth",4],["option",4],["paint",6]],[["image",6],["option",4]]]],[11,"image_info","","",267,[[],["imageinfo",6]]],[11,"width","","",267,[[],["i32",15]]],[11,"height","","",267,[[],["i32",15]]],[11,"dimensions","","",267,[[],["isize",3]]],[11,"bounds","","",267,[[],["irect",3]]],[11,"unique_id","","",267,[[],["u32",15]]],[11,"alpha_type","","",267,[[],["alphatype",4]]],[11,"color_type","","",267,[[],["colortype",4]]],[11,"color_space","","",267,[[],["colorspace",6]]],[11,"is_alpha_only","","",267,[[],["bool",15]]],[11,"is_opaque","","",267,[[],["bool",15]]],[11,"to_shader","","",267,[[],[["option",4],["shader",6]]]],[11,"peek_pixels","","",267,[[],[["borrows",3],["option",4]]]],[11,"is_texture_backed","","",267,[[],["bool",15]]],[11,"texture_size","","",267,[[],["usize",15]]],[11,"is_valid","","",267,[[["recordingcontext",6]],["bool",15]]],[11,"flush_with_info","","",267,[[["flushinfo",3],["directcontext",6]],["semaphoressubmitted",4]]],[11,"flush","","",267,[[["directcontext",6]]]],[11,"flush_and_submit","","",267,[[["directcontext",6]]]],[11,"backend_texture","","",267,[[["bool",15]],["option",4]]],[11,"read_pixels_with_context","","",267,[[["usize",15],["imageinfo",6],["cachinghint",4]],["bool",15]]],[11,"read_pixels_to_pixmap_with_context","","",267,[[["pixmap",6],["cachinghint",4]],["bool",15]]],[11,"read_pixels","","",267,[[["usize",15],["imageinfo",6],["cachinghint",4]],["bool",15]]],[11,"read_pixels_to_pixmap","","",267,[[["pixmap",6],["cachinghint",4]],["bool",15]]],[11,"scale_pixels","","",267,[[["pixmap",6]],["bool",15]]],[11,"encode_to_data","","",267,[[["encodedimageformat",4]],[["option",4],["data",6]]]],[11,"encode_to_data_with_quality","","",267,[[["encodedimageformat",4],["i32",15]],[["option",4],["data",6]]]],[11,"encoded_data","","",267,[[],[["option",4],["data",6]]]],[11,"new_subset","","",267,[[],[["image",6],["option",4]]]],[11,"new_subset_with_context","","",267,[[],[["image",6],["option",4]]]],[11,"has_mipmaps","","",267,[[],["bool",15]]],[11,"with_default_mipmaps","","",267,[[],[["image",6],["option",4]]]],[11,"new_texture_image","","",267,[[["mipmapped",4],["directcontext",6]],[["image",6],["option",4]]]],[11,"new_texture_image_budgeted","","",267,[[["budgeted",3],["mipmapped",4],["directcontext",6]],[["image",6],["option",4]]]],[11,"new_non_texture_image","","",267,[[],[["image",6],["option",4]]]],[11,"new_raster_image","","",267,[[],[["image",6],["option",4]]]],[11,"new_raster_image_with_caching_hint","","",267,[[["cachinghint",4]],[["image",6],["option",4]]]],[11,"new_with_filter","","",267,[[["recordingcontext",6],["option",4],["imagefilter",6]],["option",4]]],[11,"is_lazy_generated","","",267,[[],["bool",15]]],[11,"new_color_space","","",267,[[],[["image",6],["option",4]]]],[11,"new_color_space_with_context","","",267,[[],[["image",6],["option",4]]]],[11,"reinterpret_color_space","","",267,[[],[["image",6],["option",4]]]],[11,"encode","","",265,[[["usize",15],["encodedimageformat",4]],[["option",4],["data",6]]]],[11,"encode","","",265,[[["usize",15],["encodedimageformat",4]],[["option",4],["data",6]]]],[11,"filter_bounds","","",267,[[["matrix",3],["mapdirection",4]],["irect",3]]],[11,"color_filter_node","","",267,[[],[["colorfilter",6],["option",4]]]],[11,"to_a_color_filter","","",267,[[],[["colorfilter",6],["option",4]]]],[11,"count_inputs","","",267,[[],["usize",15]]],[11,"input","","",267,[[["usize",15]],[["imagefilter",6],["option",4]]]],[11,"get_input","","",267,[[["usize",15]],[["imagefilter",6],["option",4]]]],[11,"compute_fast_bounds","","",267,[[],["rect",3]]],[11,"can_compute_fast_bounds","","",267,[[],["bool",15]]],[11,"with_local_matrix","","",267,[[["matrix",3]],[["imagefilter",6],["option",4]]]],[11,"unique_id","","",266,[[],["u32",15]]],[11,"encoded_data","","",266,[[],[["option",4],["data",6]]]],[11,"info","","",266,[[],["imageinfo",6]]],[11,"is_valid","","",266,[[["recordingcontext",6],["option",4]],["bool",15]]],[11,"get_pixels","","",266,[[["usize",15],["imageinfo",6]],["bool",15]]],[11,"textures_are_cacheable","","",266,[[]]],[11,"from_encoded","","",266,[[],["option",4]]],[11,"from_picture","","",266,[[["option",4],["bitdepth",4],["matrix",3],["isize",3],["option",4],["paint",6]],["option",4]]],[18,"LastEnum","","",183,null],[11,"is_opaque","","",183,[[],["bool",15]]],[11,"n32","","",184,[[]]],[11,"bytes_per_pixel","","",184,[[],["usize",15]]],[11,"is_always_opaque","","",184,[[],["bool",15]]],[11,"validate_alpha_type","","",184,[[["alphatype",4]],[["option",4],["alphatype",4]]]],[18,"LastEnum","","",185,null],[18,"JPEG","","",185,null],[18,"Rec601","","",185,null],[18,"Rec709","","",185,null],[18,"BT2020","","",185,null],[11,"new","","",265,[[["alphatype",4],["colortype",4]]]],[11,"color_space","","",265,[[],[["colorspace",6],["option",4]]]],[11,"color_type","","",265,[[],["colortype",4]]],[11,"alpha_type","","",265,[[],["alphatype",4]]],[11,"is_opaque","","",265,[[],["bool",15]]],[11,"is_gamma_close_to_srgb","","",265,[[],["bool",15]]],[11,"with_alpha_type","","",265,[[["alphatype",4]]]],[11,"with_color_type","","",265,[[["colortype",4]]]],[11,"with_color_space","","",265,[[]]],[11,"bytes_per_pixel","","",265,[[],["usize",15]]],[11,"shift_per_pixel","","",265,[[],["usize",15]]],[11,"new","","",265,[[["alphatype",4],["colortype",4]]]],[11,"from_color_info","","",265,[[["colorinfo",6]]]],[11,"new_n32","","",265,[[["alphatype",4]],["imageinfo",6]]],[11,"new_s32","","",265,[[["alphatype",4]],["imageinfo",6]]],[11,"new_n32_premul","","",265,[[],["imageinfo",6]]],[11,"new_a8","","",265,[[],["imageinfo",6]]],[11,"new_unknown","","",265,[[["option",4],["isize",3]],["imageinfo",6]]],[11,"width","","",265,[[],["i32",15]]],[11,"height","","",265,[[],["i32",15]]],[11,"color_type","","",265,[[],["colortype",4]]],[11,"alpha_type","","",265,[[],["alphatype",4]]],[11,"color_space","","",265,[[],[["colorspace",6],["option",4]]]],[11,"is_empty","","",265,[[],["bool",15]]],[11,"color_info","","",265,[[],["colorinfo",6]]],[11,"is_opaque","","",265,[[],["bool",15]]],[11,"dimensions","","",265,[[],["isize",3]]],[11,"bounds","","",265,[[],["irect",3]]],[11,"is_gamma_close_to_srgb","","",265,[[],["bool",15]]],[11,"with_dimensions","","",265,[[]]],[11,"with_alpha_type","","",265,[[["alphatype",4]]]],[11,"with_color_type","","",265,[[["colortype",4]]]],[11,"with_color_space","","",265,[[]]],[11,"bytes_per_pixel","","",265,[[],["usize",15]]],[11,"shift_per_pixel","","",265,[[],["usize",15]]],[11,"min_row_bytes","","",265,[[],["usize",15]]],[11,"compute_offset","","",265,[[["usize",15]],["usize",15]]],[11,"compute_byte_size","","",265,[[["usize",15]],["usize",15]]],[11,"compute_min_byte_size","","",265,[[],["usize",15]]],[11,"valid_row_bytes","","",265,[[["usize",15]],["bool",15]]],[11,"reset","","",265,[[]]],[11,"new","","",186,[[["f32",15]]]],[11,"dot","","",186,[[],["scalar",6]]],[11,"cross","","",186,[[],["scalar",6]]],[11,"normalize","","",186,[[]]],[11,"length_squared","","",186,[[],["scalar",6]]],[11,"length","","",186,[[],["scalar",6]]],[11,"as_array","","",186,[[]]],[11,"as_mut_array","","",186,[[]]],[11,"new","","",187,[[["f32",15]]]],[11,"dot","","",187,[[],["scalar",6]]],[11,"cross","","",187,[[]]],[11,"normalize","","",187,[[]]],[11,"length_squared","","",187,[[],["scalar",6]]],[11,"length","","",187,[[],["scalar",6]]],[11,"as_array","","",187,[[]]],[11,"as_mut_array","","",187,[[]]],[11,"new","","",188,[[["f32",15]]]],[11,"as_array","","",188,[[]]],[11,"as_mut_array","","",188,[[]]],[11,"new_identity","","",229,[[]]],[11,"concat","","",229,[[]]],[11,"nan","","",229,[[]]],[11,"new","","",229,[[["scalar",6]]]],[11,"rows","","",229,[[["v4",3]]]],[11,"cols","","",229,[[["v4",3]]]],[11,"row_major","","",229,[[]]],[11,"col_major","","",229,[[]]],[11,"translate","","",229,[[["scalar",6]]]],[11,"scale","","",229,[[["scalar",6]]]],[11,"rotate","","",229,[[["v3",3],["scalar",6]]]],[11,"get_col_major","","",229,[[]]],[11,"get_row_major","","",229,[[]]],[11,"set_col_major","","",229,[[]]],[11,"set_row_major","","",229,[[]]],[11,"set_44","","",229,[[["scalar",6]]]],[11,"rc","","",229,[[["usize",15]],["scalar",6]]],[11,"set_rc","","",229,[[["usize",15],["scalar",6]]]],[11,"row","","",229,[[["usize",15]],["v4",3]]],[11,"col","","",229,[[["usize",15]],["v4",3]]],[11,"set_row","","",229,[[["usize",15],["v4",3]]]],[11,"set_col","","",229,[[["usize",15],["v4",3]]]],[11,"set_identity","","",229,[[]]],[11,"set_translate","","",229,[[["scalar",6]]]],[11,"set_scale","","",229,[[["scalar",6]]]],[11,"set_rotate_unit_sin_cos","","",229,[[["v3",3],["scalar",6]]]],[11,"set_rotate_unit","","",229,[[["v3",3],["scalar",6]]]],[11,"set_rotate","","",229,[[["v3",3],["scalar",6]]]],[11,"set_concat_16","","",229,[[["m44",3]]]],[11,"set_concat","","",229,[[["m44",3]]]],[11,"pre_concat_16","","",229,[[]]],[11,"pre_concat","","",229,[[["m44",3]]]],[11,"post_concat","","",229,[[["m44",3]]]],[11,"normalize_perspective","","",229,[[]]],[11,"is_finite","","",229,[[],["bool",15]]],[11,"invert","","",229,[[],[["m44",3],["option",4]]]],[11,"transpose","","",229,[[],["m44",3]]],[11,"dump","","",229,[[]]],[11,"map","","",229,[[["f32",15]],["v4",3]]],[11,"to_m33","","",229,[[],["matrix",3]]],[11,"pre_translate","","",229,[[["scalar",6]]]],[11,"post_translate","","",229,[[["scalar",6]]]],[11,"pre_scale","","",229,[[["scalar",6]]]],[11,"look_at","","",229,[[["v3",3]]]],[11,"perspective","","",229,[[["f32",15]]]],[11,"to_matrix44","","",229,[[],["matrix44",3]]],[11,"blur","","",267,[[["blurstyle",4],["scalar",6]],["option",4]]],[11,"compose","","",267,[[]]],[11,"combine","","",267,[[["coveragemode",4]]]],[11,"with_matrix","","",267,[[["matrix",3]]]],[18,"IDENTITY","skia_safe::matrix","",230,null],[18,"TRANSLATE","","",230,null],[18,"SCALE","","",230,null],[18,"AFFINE","","",230,null],[18,"PERSPECTIVE","","",230,null],[11,"empty","","Returns an empty set of flags",230,[[],["typemask",3]]],[11,"all","","Returns the set containing all flags.",230,[[],["typemask",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",230,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that â€¦",230,[[["u32",15]],[["typemask",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any â€¦",230,[[["u32",15]],["typemask",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving allâ€¦",230,[[["u32",15]],["typemask",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",230,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",230,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦",230,[[["typemask",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained â€¦",230,[[["typemask",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",230,[[["typemask",3]]]],[11,"remove","","Removes the specified flags in-place.",230,[[["typemask",3]]]],[11,"toggle","","Toggles the specified flags in-place.",230,[[["typemask",3]]]],[11,"set","","Inserts or removes the specified flags depending on the â€¦",230,[[["bool",15],["typemask",3]]]],[11,"new_scale","","",231,[[]]],[11,"scale","","",231,[[]]],[11,"new_trans","","",231,[[]]],[11,"translate","","",231,[[]]],[11,"rotate_deg","","",231,[[["scalar",6]]]],[11,"rotate_deg_pivot","","",231,[[["scalar",6]]]],[11,"rotate_rad","","",231,[[["scalar",6]]]],[11,"skew","","",231,[[]]],[11,"rect_to_rect","","",231,[[],["option",4]]],[11,"new_all","","",231,[[["scalar",6]]]],[11,"get_type","","",231,[[],["typemask",3]]],[11,"is_identity","","",231,[[],["bool",15]]],[11,"is_scale_translate","","",231,[[],["bool",15]]],[11,"is_translate","","",231,[[],["bool",15]]],[11,"rect_stays_rect","","",231,[[],["bool",15]]],[11,"preserves_axis_alignment","","",231,[[],["bool",15]]],[11,"has_perspective","","",231,[[],["bool",15]]],[11,"is_similarity","","",231,[[],["bool",15]]],[11,"preserves_right_angles","","",231,[[],["bool",15]]],[11,"rc","","",231,[[["usize",15]],["scalar",6]]],[11,"scale_x","","",231,[[],["scalar",6]]],[11,"scale_y","","",231,[[],["scalar",6]]],[11,"skew_y","","",231,[[],["scalar",6]]],[11,"skew_x","","",231,[[],["scalar",6]]],[11,"translate_x","","",231,[[],["scalar",6]]],[11,"translate_y","","",231,[[],["scalar",6]]],[11,"persp_x","","",231,[[],["scalar",6]]],[11,"persp_y","","",231,[[],["scalar",6]]],[11,"set_scale_x","","",231,[[["scalar",6]]]],[11,"set_scale_y","","",231,[[["scalar",6]]]],[11,"set_skew_y","","",231,[[["scalar",6]]]],[11,"set_skew_x","","",231,[[["scalar",6]]]],[11,"set_translate_x","","",231,[[["scalar",6]]]],[11,"set_translate_y","","",231,[[["scalar",6]]]],[11,"set_persp_x","","",231,[[["scalar",6]]]],[11,"set_persp_y","","",231,[[["scalar",6]]]],[11,"set_all","","",231,[[["scalar",6]]]],[11,"get_9","","",231,[[]]],[11,"set_9","","",231,[[]]],[11,"reset","","",231,[[]]],[11,"set_identity","","",231,[[]]],[11,"set_translate","","",231,[[]]],[11,"set_scale","","",231,[[]]],[11,"set_rotate","","",231,[[["scalar",6]]]],[11,"set_sin_cos","","",231,[[]]],[11,"set_rsxform","","",231,[[["rsxform",3]]]],[11,"set_skew","","",231,[[]]],[11,"set_concat","","",231,[[]]],[11,"pre_translate","","",231,[[]]],[11,"pre_scale","","",231,[[]]],[11,"pre_rotate","","",231,[[["scalar",6]]]],[11,"pre_skew","","",231,[[]]],[11,"pre_concat","","",231,[[]]],[11,"post_translate","","",231,[[]]],[11,"post_scale","","",231,[[]]],[11,"post_idiv","","",231,[[],["bool",15]]],[11,"post_rotate","","",231,[[["scalar",6]]]],[11,"post_skew","","",231,[[]]],[11,"post_concat","","",231,[[["matrix",3]]]],[11,"set_rect_to_rect","","",231,[[["scaletofit",4]],["bool",15]]],[11,"from_rect_to_rect","","",231,[[["scaletofit",4]],["option",4]]],[11,"set_poly_to_poly","","",231,[[],["bool",15]]],[11,"from_poly_to_poly","","",231,[[],[["option",4],["matrix",3]]]],[11,"invert","","",231,[[],[["option",4],["matrix",3]]]],[11,"set_affine_identity","","",231,[[]]],[11,"to_affine","","",231,[[],["option",4]]],[11,"set_affine","","",231,[[]]],[11,"from_affine","","",231,[[],["matrix",3]]],[11,"normalize_perspective","","",231,[[]]],[11,"map_points","","",231,[[]]],[11,"map_points_inplace","","",231,[[]]],[11,"map_homogeneous_points","","",231,[[]]],[11,"map_homogeneous_points_2d","","",231,[[]]],[11,"map_point","","",231,[[],["point",3]]],[11,"map_xy","","",231,[[["scalar",6]],["point",3]]],[11,"map_origin","","",231,[[],["point",3]]],[11,"map_vectors","","",231,[[]]],[11,"map_vectors_inplace","","",231,[[]]],[11,"map_vector","","",231,[[],["vector",6]]],[11,"map_rect","","",231,[[]]],[11,"map_rect_with_perspective_clip","","",231,[[["applyperspectiveclip",4]]]],[11,"map_rect_to_quad","","",231,[[]]],[11,"map_rect_scale_translate","","",231,[[],[["option",4],["rect",3]]]],[11,"map_radius","","",231,[[["scalar",6]],[["option",4],["scalar",6]]]],[11,"is_fixed_step_in_x","","",231,[[]]],[11,"fixed_step_in_x","","",231,[[["scalar",6]]]],[11,"cheap_equal_to","","",231,[[["matrix",3]]]],[11,"dump","","",231,[[]]],[11,"min_scale","","",231,[[],["scalar",6]]],[11,"max_scale","","",231,[[],["scalar",6]]],[11,"min_max_scales","","",231,[[]]],[11,"decompose_scale","","",231,[[["option",4],["matrix",3]],[["option",4],["size",3]]]],[11,"i","","",231,[[],["matrix",3]]],[11,"invalid_matrix","","",231,[[],["matrix",3]]],[11,"concat","","",231,[[["matrix",3]],["matrix",3]]],[11,"dirty_matrix_type_cache","","",231,[[]]],[11,"set_scale_translate","","",231,[[]]],[11,"is_finite","","",231,[[],["bool",15]]],[11,"new_identity","","",231,[[]]],[11,"new","skia_safe::matrix44","",232,[[["scalar",6]]]],[11,"equals","","",232,[[["scalar",6]],["bool",15]]],[11,"set","","",232,[[["scalar",6]]]],[18,"IDENTITY","","",233,null],[18,"TRANSLATE","","",233,null],[18,"SCALE","","",233,null],[18,"AFFINE","","",233,null],[18,"PERSPECTIVE","","",233,null],[11,"empty","","Returns an empty set of flags",233,[[],["typemask",3]]],[11,"all","","Returns the set containing all flags.",233,[[],["typemask",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",233,[[],["u8",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that â€¦",233,[[["u8",15]],[["option",4],["typemask",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any â€¦",233,[[["u8",15]],["typemask",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving allâ€¦",233,[[["u8",15]],["typemask",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",233,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",233,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦",233,[[["typemask",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained â€¦",233,[[["typemask",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",233,[[["typemask",3]]]],[11,"remove","","Removes the specified flags in-place.",233,[[["typemask",3]]]],[11,"toggle","","Toggles the specified flags in-place.",233,[[["typemask",3]]]],[11,"set","","Inserts or removes the specified flags depending on the â€¦",233,[[["bool",15],["typemask",3]]]],[18,"ROWS","","",234,null],[18,"COLUMNS","","",234,null],[11,"new_identity","","",234,[[]]],[11,"new_nan","","",234,[[]]],[11,"get_type","","",234,[[],["typemask",3]]],[11,"is_identity","","",234,[[],["bool",15]]],[11,"is_translate","","",234,[[],["bool",15]]],[11,"is_scale_translate","","",234,[[],["bool",15]]],[11,"is_scale","","",234,[[],["bool",15]]],[11,"has_perspective","","",234,[[],["bool",15]]],[11,"set_identity","","",234,[[]]],[11,"reset","","",234,[[]]],[11,"get","","",234,[[],["scalar",6]]],[11,"set","","",234,[[["scalar",6]]]],[11,"as_col_major","","",234,[[]]],[11,"as_row_major","","",234,[[]]],[11,"set_col_major","","",234,[[]]],[11,"set_row_major","","",234,[[]]],[11,"set_3x3","","",234,[[["scalar",6]]]],[11,"set_3x3_row_major","","",234,[[]]],[11,"set_4x4","","",234,[[["scalar",6]]]],[11,"set_translate","","",234,[[]]],[11,"pre_translate","","",234,[[]]],[11,"post_translate","","",234,[[]]],[11,"set_rotate_degrees_about","","",234,[[["scalar",6]]]],[11,"set_rotate_about","","",234,[[["scalar",6]]]],[11,"set_rotate_about_unit","","",234,[[["scalar",6]]]],[11,"set_concat","","",234,[[]]],[11,"pre_concat","","",234,[[]]],[11,"post_concat","","",234,[[]]],[11,"invert","","",234,[[],[["matrix44",3],["option",4]]]],[11,"transpose","","",234,[[]]],[11,"map_scalars","","",234,[[]]],[11,"preserves_2d_axis_alignment","","",234,[[],["bool",15]]],[11,"dump","","",234,[[]]],[11,"determinant","","",234,[[],["f64",15]]],[18,"Last","skia_safe","",87,null],[18,"Default","","",87,null],[18,"Last","","",88,null],[18,"Default","","",88,null],[11,"new","","",265,[[],["paint",6]]],[11,"reset","","",265,[[]]],[11,"is_anti_alias","","",265,[[],["bool",15]]],[11,"set_anti_alias","","",265,[[["bool",15]]]],[11,"is_dither","","",265,[[],["bool",15]]],[11,"set_dither","","",265,[[["bool",15]]]],[11,"filter_quality","","",265,[[],["filterquality",4]]],[11,"set_filter_quality","","",265,[[["filterquality",4]]]],[11,"style","","",265,[[],["style",4]]],[11,"set_style","","",265,[[["style",4]]]],[11,"set_stroke","","",265,[[["bool",15]]]],[11,"color","","",265,[[],["color",3]]],[11,"color4f","","",265,[[],["color4f",3]]],[11,"set_color","","",265,[[]]],[11,"set_color4f","","",265,[[]]],[11,"alpha_f","","",265,[[],["f32",15]]],[11,"alpha","","",265,[[],["u8",15]]],[11,"set_alpha_f","","",265,[[["f32",15]]]],[11,"set_alpha","","",265,[[["u8",15]]]],[11,"set_argb","","",265,[[["u8",15]]]],[11,"stroke_width","","",265,[[],["scalar",6]]],[11,"set_stroke_width","","",265,[[["scalar",6]]]],[11,"stroke_miter","","",265,[[],["scalar",6]]],[11,"set_stroke_miter","","",265,[[["scalar",6]]]],[11,"stroke_cap","","",265,[[],["cap",4]]],[11,"set_stroke_cap","","",265,[[["cap",4]]]],[11,"stroke_join","","",265,[[],["join",4]]],[11,"set_stroke_join","","",265,[[["join",4]]]],[11,"get_fill_path","","",265,[[["option",4],["path",6],["rect",3]],[["option",4],["path",6]]]],[11,"shader","","",265,[[],[["option",4],["shader",6]]]],[11,"set_shader","","",265,[[]]],[11,"color_filter","","",265,[[],[["colorfilter",6],["option",4]]]],[11,"set_color_filter","","",265,[[]]],[11,"blend_mode","","",265,[[],["blendmode",4]]],[11,"is_src_over","","",265,[[],["bool",15]]],[11,"set_blend_mode","","",265,[[["blendmode",4]]]],[11,"path_effect","","",265,[[],[["option",4],["patheffect",6]]]],[11,"set_path_effect","","",265,[[]]],[11,"mask_filter","","",265,[[],[["option",4],["maskfilter",6]]]],[11,"set_mask_filter","","",265,[[]]],[11,"image_filter","","",265,[[],[["imagefilter",6],["option",4]]]],[11,"set_image_filter","","",265,[[]]],[11,"nothing_to_draw","","",265,[[],["bool",15]]],[11,"is_even_odd","","",90,[[],["bool",15]]],[11,"is_inverse","","",90,[[],["bool",15]]],[11,"to_non_inverse","","",90,[[],["skpathfilltype",4]]],[18,"MAX_POINTS","skia_safe::path","The maximum number of points an iterator will return for â€¦",93,null],[11,"points","","The number of points an iterator will return for the verb.",93,[[],["usize",15]]],[11,"new","","",235,[[["bool",15],["path",6]],["iter",3]]],[11,"set_path","","",235,[[["bool",15],["path",6]],["iter",3]]],[11,"conic_weight","","",235,[[],[["option",4],["scalar",6]]]],[11,"is_close_line","","",235,[[],["bool",15]]],[11,"is_closed_contour","","",235,[[],["bool",15]]],[11,"new","","",236,[[["path",6]],["rawiter",3]]],[11,"set_path","","",236,[[["path",6]],["rawiter",3]]],[11,"peek","","",236,[[],["verb",4]]],[11,"conic_weight","","",236,[[],["scalar",6]]],[11,"new_from","skia_safe","",265,[[["filltype",4]]]],[11,"rect","","",265,[[]]],[11,"oval","","",265,[[]]],[11,"oval_with_start_index","","",265,[[["usize",15],["pathdirection",4]]]],[11,"circle","","",265,[[["scalar",6]]]],[11,"rrect","","",265,[[]]],[11,"rrect_with_start_index","","",265,[[["usize",15],["pathdirection",4]]]],[11,"polygon","","",265,[[["bool",15]]]],[11,"line","","",265,[[]]],[11,"new","","",265,[[]]],[11,"is_interpolatable","","",265,[[["path",6]],["bool",15]]],[11,"interpolate","","",265,[[["path",6],["scalar",6]],[["option",4],["path",6]]]],[11,"fill_type","","",265,[[],["pathfilltype",4]]],[11,"set_fill_type","","",265,[[["pathfilltype",4]]]],[11,"is_inverse_fill_type","","",265,[[],["bool",15]]],[11,"toggle_inverse_fill_type","","",265,[[]]],[11,"convexity_type","","",265,[[]]],[11,"convexity_type_or_unknown","","",265,[[]]],[11,"is_convex","","",265,[[],["bool",15]]],[11,"is_oval","","",265,[[],[["option",4],["rect",3]]]],[11,"is_rrect","","",265,[[],[["rrect",3],["option",4]]]],[11,"reset","","",265,[[]]],[11,"rewind","","",265,[[]]],[11,"is_empty","","",265,[[],["bool",15]]],[11,"is_last_contour_closed","","",265,[[],["bool",15]]],[11,"is_finite","","",265,[[],["bool",15]]],[11,"is_volatile","","",265,[[],["bool",15]]],[11,"set_is_volatile","","",265,[[["bool",15]]]],[11,"is_line_degenerate","","",265,[[["bool",15]],["bool",15]]],[11,"is_quad_degenerate","","",265,[[["bool",15]],["bool",15]]],[11,"is_cubic_degenerate","","",265,[[["bool",15]],["bool",15]]],[11,"is_line","","",265,[[],["option",4]]],[11,"count_points","","",265,[[],["usize",15]]],[11,"get_point","","",265,[[["usize",15]],[["point",3],["option",4]]]],[11,"get_points","","",265,[[],["usize",15]]],[11,"count_verbs","","",265,[[],["usize",15]]],[11,"get_verbs","","",265,[[],["usize",15]]],[11,"approximate_bytes_used","","",265,[[],["usize",15]]],[11,"swap","","",265,[[["path",6]]]],[11,"bounds","","",265,[[],["rect",3]]],[11,"update_bounds_cache","","",265,[[]]],[11,"compute_tight_bounds","","",265,[[],["rect",3]]],[11,"conservatively_contains_rect","","",265,[[],["bool",15]]],[11,"inc_reserve","","",265,[[["usize",15]]]],[11,"shrink_to_fit","","",265,[[]]],[11,"move_to","","",265,[[]]],[11,"r_move_to","","",265,[[]]],[11,"line_to","","",265,[[]]],[11,"r_line_to","","",265,[[]]],[11,"quad_to","","",265,[[]]],[11,"r_quad_to","","",265,[[]]],[11,"conic_to","","",265,[[["scalar",6]]]],[11,"r_conic_to","","",265,[[["scalar",6]]]],[11,"cubic_to","","",265,[[]]],[11,"r_cubic_to","","",265,[[]]],[11,"arc_to","","",265,[[["bool",15],["scalar",6]]]],[11,"arc_to_tangent","","",265,[[["scalar",6]]]],[11,"arc_to_rotated","","",265,[[["arcsize",4],["scalar",6],["pathdirection",4]]]],[11,"r_arc_to_rotated","","",265,[[["arcsize",4],["scalar",6],["pathdirection",4]]]],[11,"close","","",265,[[]]],[11,"convert_conic_to_quads","","",265,[[["usize",15],["scalar",6]],[["usize",15],["option",4]]]],[11,"is_rect","","",265,[[],["option",4]]],[11,"add_rect","","",265,[[["option",4]]]],[11,"add_oval","","",265,[[["option",4]]]],[11,"add_circle","","",265,[[["scalar",6]]]],[11,"add_arc","","",265,[[["scalar",6]]]],[11,"add_round_rect","","",265,[[]]],[11,"add_rrect","","",265,[[["option",4]]]],[11,"add_poly","","",265,[[["bool",15]]]],[11,"add_path","","",265,[[["path",6]]]],[11,"add_path_matrix","","",265,[[["path",6],["matrix",3]]]],[11,"reverse_add_path","","",265,[[["path",6]]]],[11,"with_offset","","",265,[[],["path",6]]],[11,"offset","","",265,[[]]],[11,"with_transform","","",265,[[["matrix",3]],["path",6]]],[11,"with_transform_with_perspective_clip","","",265,[[["applyperspectiveclip",4],["matrix",3]],["path",6]]],[11,"transform","","",265,[[["matrix",3]]]],[11,"transform_with_perspective_clip","","",265,[[["applyperspectiveclip",4],["matrix",3]]]],[11,"last_pt","","",265,[[],[["point",3],["option",4]]]],[11,"make_transform","","",265,[[["matrix",3]],["path",6]]],[11,"make_scale","","",265,[[],["path",6]]],[11,"set_last_pt","","",265,[[]]],[11,"segment_masks","","",265,[[],["segmentmask",3]]],[11,"contains","","",265,[[],["bool",15]]],[11,"dump_as_data","","",265,[[["bool",15]],["data",6]]],[11,"dump","","",265,[[]]],[11,"dump_hex","","",265,[[]]],[11,"dump_arrays_as_data","","",265,[[["bool",15]],["data",6]]],[11,"dump_arrays","","",265,[[]]],[11,"serialize","","",265,[[],["data",6]]],[11,"deserialize","","",265,[[["data",6]],[["option",4],["path",6]]]],[11,"generation_id","","",265,[[],["u32",15]]],[11,"is_valid","","",265,[[],["bool",15]]],[11,"new","","",265,[[]]],[11,"new_path","","",265,[[["path",6]]]],[11,"fill_type","","",265,[[],["pathfilltype",4]]],[11,"compute_bounds","","",265,[[],["rect",3]]],[11,"snapshot","","",265,[[],["path",6]]],[11,"detach","","",265,[[],["path",6]]],[11,"set_fill_type","","",265,[[["pathfilltype",4]]]],[11,"set_is_volatile","","",265,[[["bool",15]]]],[11,"reset","","",265,[[]]],[11,"move_to","","",265,[[]]],[11,"line_to","","",265,[[]]],[11,"quad_to","","",265,[[]]],[11,"conic_to","","",265,[[["scalar",6]]]],[11,"cubic_to","","",265,[[]]],[11,"close","","",265,[[]]],[11,"polyline_to","","",265,[[]]],[11,"r_line_to","","",265,[[]]],[11,"r_quad_to","","",265,[[]]],[11,"r_conic_to","","",265,[[["scalar",6]]]],[11,"r_cubic_to","","",265,[[]]],[11,"arc_to","","",265,[[["bool",15],["scalar",6]]]],[11,"arc_to_tangent","","",265,[[["scalar",6]]]],[11,"arc_to_radius","","",265,[[["arcsize",4],["scalar",6],["pathdirection",4]]]],[11,"add_arc","","",265,[[["scalar",6]]]],[11,"add_rect","","",265,[[]]],[11,"add_oval","","",265,[[]]],[11,"add_rrect","","",265,[[]]],[11,"add_circle","","",265,[[["scalar",6]]]],[11,"add_polygon","","",265,[[["bool",15]]]],[11,"add_path","","",265,[[["path",6]]]],[11,"inc_reserve","","",265,[[["usize",15]]]],[11,"offset","","",265,[[]]],[11,"toggle_inverse_fill_type","","",265,[[]]],[11,"make","","",265,[[["pathfilltype",4]]]],[11,"new","","",283,[[]]],[11,"new_path","","",283,[[["path",6]]]],[11,"fill_type","","",283,[[],["pathfilltype",4]]],[11,"compute_bounds","","",283,[[],["rect",3]]],[11,"snapshot","","",283,[[],["path",6]]],[11,"detach","","",283,[[],["path",6]]],[11,"set_fill_type","","",283,[[["pathfilltype",4]]]],[11,"set_is_volatile","","",283,[[["bool",15]]]],[11,"reset","","",283,[[]]],[11,"move_to","","",283,[[]]],[11,"line_to","","",283,[[]]],[11,"quad_to","","",283,[[]]],[11,"conic_to","","",283,[[["scalar",6]]]],[11,"cubic_to","","",283,[[]]],[11,"close","","",283,[[]]],[11,"polyline_to","","",283,[[]]],[11,"r_line_to","","",283,[[]]],[11,"r_quad_to","","",283,[[]]],[11,"r_conic_to","","",283,[[["scalar",6]]]],[11,"r_cubic_to","","",283,[[]]],[11,"arc_to","","",283,[[["bool",15],["scalar",6]]]],[11,"arc_to_tangent","","",283,[[["scalar",6]]]],[11,"arc_to_radius","","",283,[[["arcsize",4],["scalar",6],["pathdirection",4]]]],[11,"add_arc","","",283,[[["scalar",6]]]],[11,"add_rect","","",283,[[]]],[11,"add_oval","","",283,[[]]],[11,"add_rrect","","",283,[[]]],[11,"add_circle","","",283,[[["scalar",6]]]],[11,"add_polygon","","",283,[[["bool",15]]]],[11,"add_path","","",283,[[["path",6]]]],[11,"inc_reserve","","",283,[[["usize",15]]]],[11,"offset","","",283,[[]]],[11,"toggle_inverse_fill_type","","",283,[[]]],[11,"make","","",283,[[["pathfilltype",4]]]],[18,"CIRCLES","skia_safe::path_effect::point_data","",237,null],[18,"USE_PATH","","",237,null],[18,"USE_CLIP","","",237,null],[11,"empty","","Returns an empty set of flags",237,[[],["pointflags",3]]],[11,"all","","Returns the set containing all flags.",237,[[],["pointflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",237,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that â€¦",237,[[["u32",15]],[["option",4],["pointflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any â€¦",237,[[["u32",15]],["pointflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving allâ€¦",237,[[["u32",15]],["pointflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",237,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",237,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦",237,[[["pointflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained â€¦",237,[[["pointflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",237,[[["pointflags",3]]]],[11,"remove","","Removes the specified flags in-place.",237,[[["pointflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",237,[[["pointflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the â€¦",237,[[["bool",15],["pointflags",3]]]],[11,"points","skia_safe::path_effect","",94,[[]]],[11,"sum","skia_safe","",267,[[],["patheffect",6]]],[11,"compose","","",267,[[],["patheffect",6]]],[11,"filter_path","","",267,[[["path",6],["strokerec",6]],["option",4]]],[11,"filter_path_inplace","","",267,[[["path",6],["path",6],["strokerec",6]],["bool",15]]],[11,"compute_fast_bounds","","",267,[[],["rect",3]]],[11,"as_points","","",267,[[["matrix",3],["path",6],["strokerec",6]],[["option",4],["pointdata",3]]]],[11,"as_a_dash","","",267,[[],[["dashinfo",3],["option",4]]]],[18,"GET_POSITION","skia_safe::path_measure","",238,null],[18,"GET_TANGENT","","",238,null],[18,"GET_POS_AND_TAN","","",238,null],[11,"empty","","Returns an empty set of flags",238,[[],["matrixflags",3]]],[11,"all","","Returns the set containing all flags.",238,[[],["matrixflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",238,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that â€¦",238,[[["u32",15]],[["option",4],["matrixflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any â€¦",238,[[["u32",15]],["matrixflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving allâ€¦",238,[[["u32",15]],["matrixflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",238,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",238,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦",238,[[["matrixflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained â€¦",238,[[["matrixflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",238,[[["matrixflags",3]]]],[11,"remove","","Removes the specified flags in-place.",238,[[["matrixflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",238,[[["matrixflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the â€¦",238,[[["matrixflags",3],["bool",15]]]],[11,"new","skia_safe","",265,[[["bool",15],["path",6]]]],[11,"from_path","","",265,[[["bool",15],["path",6]]]],[11,"set_path","","",265,[[["bool",15],["path",6]]]],[11,"length","","",265,[[],["scalar",6]]],[11,"pos_tan","","",265,[[["scalar",6]],["option",4]]],[11,"matrix","","",265,[[["scalar",6]],[["option",4],["matrix",3]]]],[11,"segment","","",265,[[["bool",15],["scalar",6]],[["option",4],["path",6]]]],[11,"is_closed","","",265,[[],["bool",15]]],[11,"next_contour","","",265,[[],["bool",15]]],[18,"LINE","skia_safe::path","",239,null],[18,"QUAD","","",239,null],[18,"CONIC","","",239,null],[18,"CUBIC","","",239,null],[11,"empty","","Returns an empty set of flags",239,[[],["pathsegmentmask",3]]],[11,"all","","Returns the set containing all flags.",239,[[],["pathsegmentmask",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",239,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that â€¦",239,[[["u32",15]],[["option",4],["pathsegmentmask",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any â€¦",239,[[["u32",15]],["pathsegmentmask",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving allâ€¦",239,[[["u32",15]],["pathsegmentmask",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",239,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",239,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦",239,[[["pathsegmentmask",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained â€¦",239,[[["pathsegmentmask",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",239,[[["pathsegmentmask",3]]]],[11,"remove","","Removes the specified flags in-place.",239,[[["pathsegmentmask",3]]]],[11,"toggle","","Toggles the specified flags in-place.",239,[[["pathsegmentmask",3]]]],[11,"set","","Inserts or removes the specified flags depending on the â€¦",239,[[["bool",15],["pathsegmentmask",3]]]],[18,"MAX_POINTS","skia_safe","The maximum number of points an iterator will return for â€¦",96,null],[11,"points","","The number of points an iterator will return for the verb.",96,[[],["usize",15]]],[11,"from_data","","",267,[[["data",6]],[["option",4],["picture",6]]]],[11,"from_bytes","","",267,[[],[["option",4],["picture",6]]]],[11,"playback","","",267,[[["canvas",3]]]],[11,"cull_rect","","",267,[[],["rect",3]]],[11,"unique_id","","",267,[[],["u32",15]]],[11,"serialize","","",267,[[],["data",6]]],[11,"new_placeholder","","",267,[[],["picture",6]]],[11,"approximate_op_count","","",267,[[],["usize",15]]],[11,"approximate_op_count_nested","","",267,[[],["usize",15]]],[11,"approximate_bytes_used","","",267,[[],["usize",15]]],[11,"to_shader","","",267,[[["filtermode",4]],["shader",6]]],[11,"new","","",265,[[]]],[11,"begin_recording","","",265,[[["option",4],["bbhfactory",6]],["canvas",3]]],[11,"recording_canvas","","",265,[[],[["option",4],["canvas",3]]]],[11,"finish_recording_as_picture","","",265,[[["option",4],["rect",3]],[["option",4],["picture",6]]]],[11,"finish_recording_as_drawable","","",265,[[],[["option",4],["drawable",6]]]],[11,"dimensions","","",267,[[],["isize",3]]],[11,"width","","",267,[[],["i32",15]]],[11,"height","","",267,[[],["i32",15]]],[11,"pixels","","",267,[[]]],[11,"row_bytes","","",267,[[],["usize",15]]],[11,"generation_id","","",267,[[],["u32",15]]],[11,"notify_pixels_changed","","",267,[[]]],[11,"is_immutable","","",267,[[],["bool",15]]],[11,"set_immutable","","",267,[[]]],[11,"notify_added_to_cache","","",267,[[]]],[11,"new","","",265,[[["usize",15],["imageinfo",6]],["borrows",3]]],[11,"reset","","",265,[[]]],[11,"set_color_space","","",265,[[]]],[11,"extract_subset","","",265,[[],[["option",4],["pixmap",6]]]],[11,"info","","",265,[[],["imageinfo",6]]],[11,"row_bytes","","",265,[[],["usize",15]]],[11,"addr","","",265,[[]]],[11,"width","","",265,[[],["i32",15]]],[11,"height","","",265,[[],["i32",15]]],[11,"dimensions","","",265,[[],["isize",3]]],[11,"color_type","","",265,[[],["colortype",4]]],[11,"alpha_type","","",265,[[],["alphatype",4]]],[11,"color_space","","",265,[[],[["colorspace",6],["option",4]]]],[11,"is_opaque","","",265,[[],["bool",15]]],[11,"bounds","","",265,[[],["irect",3]]],[11,"row_bytes_as_pixels","","",265,[[],["usize",15]]],[11,"shift_per_pixel","","",265,[[],["usize",15]]],[11,"compute_byte_size","","",265,[[],["usize",15]]],[11,"compute_is_opaque","","",265,[[],["bool",15]]],[11,"get_color","","",265,[[],["color",3]]],[11,"get_alpha_f","","",265,[[],["f32",15]]],[11,"addr_at","","",265,[[]]],[11,"writable_addr","","",265,[[]]],[11,"writable_addr_at","","",265,[[]]],[11,"read_pixels","","",265,[[["usize",15],["imageinfo",6]],["bool",15]]],[11,"bytes","","Access the underlying pixels as a byte array. This is a â€¦",265,[[],["option",4]]],[11,"pixels","","Access the underlying pixels. This is a rust-skia â€¦",265,[[],["option",4]]],[11,"read_pixels_to_pixmap","","",265,[[["pixmap",6]],["bool",15]]],[11,"scale_pixels","","",265,[[["pixmap",6]],["bool",15]]],[11,"erase","","",265,[[["option",4],["irect",3]],["bool",15]]],[11,"erase_4f","","",265,[[["option",4],["irect",3]],["bool",15]]],[11,"erase_with_colorspace","","",265,[[["option",4],["colorspace",6],["irect",3],["option",4]],["bool",15]]],[11,"new","","",287,[[["usize",15],["imageinfo",6]],["borrows",3]]],[11,"reset","","",287,[[]]],[11,"set_color_space","","",287,[[]]],[11,"extract_subset","","",287,[[],[["option",4],["pixmap",6]]]],[11,"info","","",287,[[],["imageinfo",6]]],[11,"row_bytes","","",287,[[],["usize",15]]],[11,"addr","","",287,[[]]],[11,"width","","",287,[[],["i32",15]]],[11,"height","","",287,[[],["i32",15]]],[11,"dimensions","","",287,[[],["isize",3]]],[11,"color_type","","",287,[[],["colortype",4]]],[11,"alpha_type","","",287,[[],["alphatype",4]]],[11,"color_space","","",287,[[],[["colorspace",6],["option",4]]]],[11,"is_opaque","","",287,[[],["bool",15]]],[11,"bounds","","",287,[[],["irect",3]]],[11,"row_bytes_as_pixels","","",287,[[],["usize",15]]],[11,"shift_per_pixel","","",287,[[],["usize",15]]],[11,"compute_byte_size","","",287,[[],["usize",15]]],[11,"compute_is_opaque","","",287,[[],["bool",15]]],[11,"get_color","","",287,[[],["color",3]]],[11,"get_alpha_f","","",287,[[],["f32",15]]],[11,"addr_at","","",287,[[]]],[11,"writable_addr","","",287,[[]]],[11,"writable_addr_at","","",287,[[]]],[11,"read_pixels","","",287,[[["usize",15],["imageinfo",6]],["bool",15]]],[11,"bytes","","Access the underlying pixels as a byte array. This is a â€¦",287,[[],["option",4]]],[11,"pixels","","Access the underlying pixels. This is a rust-skia â€¦",287,[[],["option",4]]],[11,"read_pixels_to_pixmap","","",287,[[["pixmap",6]],["bool",15]]],[11,"scale_pixels","","",287,[[["pixmap",6]],["bool",15]]],[11,"erase","","",287,[[["option",4],["irect",3]],["bool",15]]],[11,"erase_4f","","",287,[[["option",4],["irect",3]],["bool",15]]],[11,"erase_with_colorspace","","",287,[[["option",4],["colorspace",6],["irect",3],["option",4]],["bool",15]]],[11,"new","","",190,[[["i32",15]]]],[11,"is_zero","","",190,[[],["bool",15]]],[11,"set","","",190,[[["i32",15]]]],[11,"equals","","",190,[[["i32",15]],["bool",15]]],[11,"new","","",191,[[["scalar",6]]]],[11,"is_zero","","",191,[[],["bool",15]]],[11,"set","","",191,[[["scalar",6]]]],[11,"iset","","",191,[[]]],[11,"set_abs","","",191,[[]]],[11,"offset_points","","",191,[[]]],[11,"offset","","",191,[[]]],[11,"length","","",191,[[],["scalar",6]]],[11,"distance_to_origin","","",191,[[],["scalar",6]]],[11,"normalize","","",191,[[],["bool",15]]],[11,"set_normalize","","",191,[[["scalar",6]],["bool",15]]],[11,"set_length","","",191,[[["scalar",6]],["bool",15]]],[11,"set_length_xy","","",191,[[["scalar",6]],["bool",15]]],[11,"scaled","","",191,[[["scalar",6]]]],[11,"scale","","",191,[[["scalar",6]]]],[11,"negate","","",191,[[]]],[11,"is_finite","","",191,[[],["bool",15]]],[11,"equals","","",191,[[["scalar",6]],["bool",15]]],[11,"length_xy","","",191,[[["scalar",6]],["scalar",6]]],[11,"normalize_vector","","",191,[[["vector",6]],["scalar",6]]],[11,"distance","","",191,[[],["scalar",6]]],[11,"dot_product","","",191,[[],["scalar",6]]],[11,"cross_product","","",191,[[],["scalar",6]]],[11,"cross","","",191,[[["vector",6]],["scalar",6]]],[11,"dot","","",191,[[["vector",6]],["scalar",6]]],[11,"new","","",192,[[["scalar",6]]]],[11,"set","","",192,[[["scalar",6]]]],[11,"length_xyz","","",192,[[["scalar",6]],["scalar",6]]],[11,"length","","",192,[[],["scalar",6]]],[11,"normalize","","",192,[[],["bool",15]]],[11,"normalized","","",192,[[],["option",4]]],[11,"scaled","","",192,[[["scalar",6]]]],[11,"scale","","",192,[[["scalar",6]]]],[11,"is_finite","","",192,[[],["bool",15]]],[11,"dot_product","","",192,[[],["scalar",6]]],[11,"dot","","",192,[[],["scalar",6]]],[11,"cross_product","","",192,[[]]],[11,"cross","","",192,[[]]],[11,"new","","",193,[[["i32",15]]]],[11,"new_empty","","",193,[[]]],[11,"from_wh","","",193,[[["i32",15]]]],[11,"from_size","","",193,[[]]],[11,"from_pt_size","","",193,[[]]],[11,"from_ltrb","","",193,[[["i32",15]]]],[11,"from_xywh","","",193,[[["i32",15]]]],[11,"left","","",193,[[],["i32",15]]],[11,"top","","",193,[[],["i32",15]]],[11,"right","","",193,[[],["i32",15]]],[11,"bottom","","",193,[[],["i32",15]]],[11,"x","","",193,[[],["i32",15]]],[11,"y","","",193,[[],["i32",15]]],[11,"width","","",193,[[],["i32",15]]],[11,"height","","",193,[[],["i32",15]]],[11,"size","","",193,[[],["isize",3]]],[11,"width_64","","",193,[[],["i64",15]]],[11,"height_64","","",193,[[],["i64",15]]],[11,"is_empty_64","","",193,[[],["bool",15]]],[11,"is_empty","","",193,[[],["bool",15]]],[11,"set_empty","","",193,[[]]],[11,"set_ltrb","","",193,[[["i32",15]]]],[11,"set_xywh","","",193,[[["i32",15]]]],[11,"set_wh","","",193,[[["i32",15]]]],[11,"with_offset","","",193,[[]]],[11,"with_inset","","",193,[[]]],[11,"with_outset","","",193,[[]]],[11,"offset","","",193,[[]]],[11,"offset_to","","",193,[[]]],[11,"with_offset_to","","",193,[[]]],[11,"inset","","",193,[[]]],[11,"outset","","",193,[[]]],[11,"with_adjustment","","",193,[[["i32",15]]]],[11,"adjust","","",193,[[["i32",15]]]],[11,"contains_no_empty_check","","",193,[[],["bool",15]]],[11,"intersect","","",193,[[],["option",4]]],[11,"intersects","","",193,[[],["bool",15]]],[11,"intersect_no_empty_check_","","",193,[[],["option",4]]],[11,"join","","",193,[[]]],[11,"sort","","",193,[[]]],[11,"sorted","","",193,[[]]],[11,"empty","","",193,[[]]],[11,"new","","",194,[[["scalar",6]]]],[11,"new_empty","","",194,[[]]],[11,"from_wh","","",194,[[["scalar",6]]]],[11,"from_iwh","","",194,[[["i32",15]]]],[11,"from_size","","",194,[[]]],[11,"from_xywh","","",194,[[["scalar",6]]]],[11,"from_point_and_size","","",194,[[]]],[11,"from_isize","","",194,[[]]],[11,"from_irect","","",194,[[]]],[11,"is_empty","","",194,[[],["bool",15]]],[11,"is_sorted","","",194,[[],["bool",15]]],[11,"is_finite","","",194,[[],["bool",15]]],[11,"x","","",194,[[],["scalar",6]]],[11,"y","","",194,[[],["scalar",6]]],[11,"left","","",194,[[],["scalar",6]]],[11,"top","","",194,[[],["scalar",6]]],[11,"right","","",194,[[],["scalar",6]]],[11,"bottom","","",194,[[],["scalar",6]]],[11,"size","","",194,[[],["size",3]]],[11,"width","","",194,[[],["scalar",6]]],[11,"height","","",194,[[],["scalar",6]]],[11,"center","","",194,[[],["point",3]]],[11,"center_x","","",194,[[],["scalar",6]]],[11,"center_y","","",194,[[],["scalar",6]]],[11,"to_quad","","",194,[[]]],[11,"set_empty","","",194,[[]]],[11,"set_irect","","",194,[[]]],[11,"set_ltrb","","",194,[[["scalar",6]]]],[11,"set_bounds","","",194,[[]]],[11,"set_bounds_check","","",194,[[],["bool",15]]],[11,"set_bounds_no_check","","",194,[[]]],[11,"set_bounds2","","",194,[[]]],[11,"from_bounds","","",194,[[],["option",4]]],[11,"set_xywh","","",194,[[["scalar",6]]]],[11,"set_wh","","",194,[[["scalar",6]]]],[11,"set_iwh","","",194,[[["i32",15]]]],[11,"with_offset","","",194,[[]]],[11,"with_inset","","",194,[[]]],[11,"with_outset","","",194,[[]]],[11,"offset","","",194,[[]]],[11,"offset_to","","",194,[[]]],[11,"with_offset_to","","",194,[[]]],[11,"inset","","",194,[[]]],[11,"outset","","",194,[[]]],[11,"intersect","","",194,[[],["bool",15]]],[11,"intersect2","","",194,[[],["bool",15]]],[11,"intersects","","",194,[[],["bool",15]]],[11,"intersects2","","",194,[[],["bool",15]]],[11,"join","","",194,[[]]],[11,"join2","","",194,[[],["rect",3]]],[11,"join_non_empty_arg","","",194,[[]]],[11,"join_possibly_empty_rect","","",194,[[]]],[11,"round","","",194,[[],["irect",3]]],[11,"round_in","","",194,[[],["irect",3]]],[11,"sort","","",194,[[]]],[11,"sorted","","",194,[[],["rect",3]]],[11,"as_scalars","","",194,[[]]],[11,"dump","","",194,[[]]],[11,"dump_hex","","",194,[[]]],[18,"LastOp","skia_safe::region","",97,null],[11,"new","skia_safe","",265,[[],["region",6]]],[11,"from_rect","","",265,[[],["region",6]]],[11,"set","","",265,[[["region",6]],["bool",15]]],[11,"swap","","",265,[[["region",6]]]],[11,"is_empty","","",265,[[],["bool",15]]],[11,"is_rect","","",265,[[],["bool",15]]],[11,"is_complex","","",265,[[],["bool",15]]],[11,"bounds","","",265,[[],["irect",3]]],[11,"compute_region_complexity","","",265,[[],["usize",15]]],[11,"get_boundary_path","","",265,[[["path",6]],["bool",15]]],[11,"set_empty","","",265,[[],["bool",15]]],[11,"set_rect","","",265,[[],["bool",15]]],[11,"set_rects","","",265,[[],["bool",15]]],[11,"set_region","","",265,[[["region",6]],["bool",15]]],[11,"set_path","","",265,[[["region",6],["path",6]],["bool",15]]],[11,"intersects_rect","","",265,[[],["bool",15]]],[11,"intersects_region","","",265,[[["region",6]],["bool",15]]],[11,"contains_point","","",265,[[["ipoint",3]],["bool",15]]],[11,"contains_rect","","",265,[[],["bool",15]]],[11,"contains_region","","",265,[[["region",6]],["bool",15]]],[11,"quick_contains","","",265,[[],["bool",15]]],[11,"quick_reject_rect","","",265,[[],["bool",15]]],[11,"quick_reject_region","","",265,[[["region",6]],["bool",15]]],[11,"translate","","",265,[[]]],[11,"translated","","",265,[[],["region",6]]],[11,"op_rect","","",265,[[["regionop",4]],["bool",15]]],[11,"op_region","","",265,[[["region",6],["regionop",4]],["bool",15]]],[11,"op_rect_region","","",265,[[["region",6],["regionop",4]],["bool",15]]],[11,"op_region_rect","","",265,[[["region",6],["regionop",4]],["bool",15]]],[11,"write_to_memory","","",265,[[["vec",3]]]],[11,"read_from_memory","","",265,[[],["usize",15]]],[11,"difference","skia_safe::region","",98,[[]]],[11,"intersect","","",98,[[]]],[11,"xor","","",98,[[]]],[11,"union","","",98,[[]]],[11,"reverse_difference","","",98,[[]]],[11,"replace","","",98,[[]]],[11,"new_empty","","",240,[[],["iterator",3]]],[11,"new","","",240,[[["region",6]],["iterator",3]]],[11,"rewind","","",240,[[],["bool",15]]],[11,"reset","","",240,[[["region",6]],["iterator",3]]],[11,"is_done","","",240,[[],["bool",15]]],[11,"next","","",240,[[]]],[11,"rect","","",240,[[],["irect",3]]],[11,"rgn","","",240,[[],[["region",6],["option",4]]]],[11,"new","","",241,[[["region",6]],["cliperator",3]]],[11,"is_done","","",241,[[],["bool",15]]],[11,"next","","",241,[[]]],[11,"rect","","",241,[[],["irect",3]]],[11,"new","","",242,[[["region",6],["i32",15]],["spanerator",3]]],[18,"LastType","skia_safe::rrect","",100,null],[11,"new","","",243,[[]]],[11,"get_type","","",243,[[],["type",4]]],[11,"is_empty","","",243,[[],["bool",15]]],[11,"is_rect","","",243,[[],["bool",15]]],[11,"is_oval","","",243,[[],["bool",15]]],[11,"is_simple","","",243,[[],["bool",15]]],[11,"is_nine_patch","","",243,[[],["bool",15]]],[11,"is_complex","","",243,[[],["bool",15]]],[11,"width","","",243,[[],["scalar",6]]],[11,"height","","",243,[[],["scalar",6]]],[11,"simple_radii","","",243,[[],["vector",6]]],[11,"set_empty","","",243,[[]]],[11,"set_rect","","",243,[[]]],[11,"new_empty","","",243,[[]]],[11,"new_rect","","",243,[[]]],[11,"new_oval","","",243,[[]]],[11,"new_rect_xy","","",243,[[["scalar",6]]]],[11,"new_nine_patch","","",243,[[["scalar",6]]]],[11,"new_rect_radii","","",243,[[]]],[11,"set_oval","","",243,[[]]],[11,"set_rect_xy","","",243,[[["scalar",6]]]],[11,"set_nine_patch","","",243,[[["scalar",6]]]],[11,"set_rect_radii","","",243,[[]]],[11,"rect","","",243,[[],["rect",3]]],[11,"radii","","",243,[[["corner",4]],["vector",6]]],[11,"bounds","","",243,[[],["rect",3]]],[11,"inset","","",243,[[]]],[11,"with_inset","","",243,[[]]],[11,"outset","","",243,[[]]],[11,"with_outset","","",243,[[]]],[11,"offset","","",243,[[]]],[11,"with_offset","","",243,[[]]],[11,"contains","","",243,[[],["bool",15]]],[11,"is_valid","","",243,[[],["bool",15]]],[18,"SIZE_IN_MEMORY","","",243,null],[11,"write_to_memory","","",243,[[["vec",3]]]],[11,"read_from_memory","","",243,[[],["usize",15]]],[11,"transform","","",243,[[["matrix",3]],["option",4]]],[11,"dump","","",243,[[]]],[11,"dump_to_string","","",243,[[["bool",15]],["string",3]]],[11,"dump_hex","","",243,[[]]],[11,"new","skia_safe","",196,[[["scalar",6]]]],[11,"from_radians","","",196,[[["scalar",6]]]],[11,"rect_stays_rect","","",196,[[],["bool",15]]],[11,"set_identity","","",196,[[]]],[11,"set","","",196,[[["scalar",6]]]],[11,"to_quad","","",196,[[]]],[11,"to_tri_strip","","",196,[[]]],[18,"Last","","",102,null],[18,"Last","","",103,null],[11,"mitchell","skia_safe::image","",74,[[]]],[11,"catmull_rom","","",74,[[]]],[11,"new","skia_safe::sampling_options","",106,[[["mipmapmode",4],["filtermode",4]]]],[11,"from_filter_quality","","",106,[[["filterquality",4]]]],[18,"ZERO","skia_safe","",197,null],[18,"NEARLY_ZERO","","",197,null],[18,"ONE","","",197,null],[18,"HALF","","",197,null],[18,"Last","skia_safe::shader","",107,null],[11,"color_count","","",109,[[],["usize",15]]],[11,"is_opaque","skia_safe","",267,[[],["bool",15]]],[11,"image","","",267,[[],["option",4]]],[11,"is_a_image","","",267,[[],["bool",15]]],[11,"with_local_matrix","","",267,[[["matrix",3]]]],[11,"with_color_filter","","",267,[[]]],[11,"new","","",199,[[["i32",15]],["isize",3]]],[11,"new_empty","","",199,[[],["isize",3]]],[11,"set","","",199,[[["i32",15]]]],[11,"is_zero","","",199,[[],["bool",15]]],[11,"is_empty","","",199,[[],["bool",15]]],[11,"set_empty","","",199,[[]]],[11,"area","","",199,[[],["i64",15]]],[11,"equals","","",199,[[["i32",15]],["bool",15]]],[11,"new","","",200,[[["scalar",6]],["size",3]]],[11,"from_isize","","",200,[[["isize",3]],["size",3]]],[11,"new_empty","","",200,[[]]],[11,"set","","",200,[[["scalar",6]]]],[11,"is_zero","","",200,[[],["bool",15]]],[11,"is_empty","","",200,[[],["bool",15]]],[11,"set_empty","","",200,[[]]],[11,"equals","","",200,[[["scalar",6]],["bool",15]]],[11,"to_round","","",200,[[],["isize",3]]],[11,"to_ceil","","",200,[[],["isize",3]]],[11,"to_floor","","",200,[[],["isize",3]]],[11,"new","","",265,[[["initstyle",4]]]],[11,"new_hairline","","",265,[[]]],[11,"new_fill","","",265,[[]]],[11,"from_paint","","",265,[[["paint",6]]]],[11,"style","","",265,[[],["style",4]]],[11,"width","","",265,[[],["scalar",6]]],[11,"miter","","",265,[[],["scalar",6]]],[11,"cap","","",265,[[],["cap",4]]],[11,"join","","",265,[[],["join",4]]],[11,"is_hairline_style","","",265,[[],["bool",15]]],[11,"is_fill_style","","",265,[[],["bool",15]]],[11,"set_fill_style","","",265,[[]]],[11,"set_hairline_style","","",265,[[]]],[11,"set_stroke_style","","",265,[[["scalar",6]]]],[11,"set_stroke_params","","",265,[[["cap",4],["join",4],["scalar",6]]]],[11,"res_scale","","",265,[[],["scalar",6]]],[11,"set_res_scale","","",265,[[["scalar",6]]]],[11,"need_to_apply","","",265,[[],["bool",15]]],[11,"apply_to_path","","",265,[[["path",6],["path",6]],["bool",15]]],[11,"apply_to_path_inplace","","",265,[[["path",6]],["bool",15]]],[11,"apply_to_paint","","",265,[[["paint",6]]]],[11,"inflation_radius","","",265,[[],["scalar",6]]],[11,"inflation_radius_from_paint_and_style","","",265,[[["style",4],["paint",6]],["scalar",6]]],[11,"inflation_radius_from_params","","",265,[[["join",4],["cap",4],["scalar",6]],["scalar",6]]],[11,"has_equal_effect","","",265,[[["strokerec",6]],["bool",15]]],[11,"new_raster_direct","","",267,[[["imageinfo",6],["option",4],["surfaceprops",3]],[["option",4],["borrows",3]]]],[11,"new_raster","","",267,[[["imageinfo",6],["option",4],["surfaceprops",3]],["option",4]]],[11,"new_raster_n32_premul","","",267,[[],["option",4]]],[11,"from_backend_texture","","",267,[[["recordingcontext",6],["backendtexture",6],["surfaceorigin",4],["option",4],["surfaceprops",3],["colortype",4]],["option",4]]],[11,"from_backend_render_target","","",267,[[["recordingcontext",6],["surfaceorigin",4],["option",4],["backendrendertarget",6],["surfaceprops",3],["colortype",4]],["option",4]]],[11,"new_render_target","","",267,[[["recordingcontext",6],["imageinfo",6],["surfaceorigin",4],["option",4],["budgeted",3],["surfaceprops",3]],["option",4]]],[11,"new_render_target_with_characterization","","",267,[[["recordingcontext",6],["surfacecharacterization",6],["budgeted",3]],["option",4]]],[11,"is_compatible","","",267,[[["surfacecharacterization",6]],["bool",15]]],[11,"new_null","","",267,[[],["option",4]]],[11,"width","","",267,[[],["i32",15]]],[11,"height","","",267,[[],["i32",15]]],[11,"image_info","","",267,[[],["imageinfo",6]]],[11,"generation_id","","",267,[[],["u32",15]]],[11,"notify_content_will_change","","",267,[[["contentchangemode",4]]]],[11,"recording_context","","",267,[[],[["option",4],["recordingcontext",6]]]],[11,"get_backend_texture","","",267,[[["backendhandleaccess",4]],[["backendtexture",6],["option",4]]]],[11,"get_backend_render_target","","",267,[[["backendhandleaccess",4]],[["backendrendertarget",6],["option",4]]]],[11,"replace_backend_texture","","",267,[[["backendtexture",6],["surfaceorigin",4]],["bool",15]]],[11,"replace_backend_texture_with_mode","","",267,[[["backendtexture",6],["surfaceorigin",4]],["bool",15]]],[11,"canvas","","",267,[[],["canvas",3]]],[11,"new_surface","","",267,[[["imageinfo",6]],[["surface",6],["option",4]]]],[11,"new_surface_with_dimensions","","",267,[[],[["surface",6],["option",4]]]],[11,"image_snapshot","","",267,[[],["image",6]]],[11,"image_snapshot_with_bounds","","",267,[[],[["image",6],["option",4]]]],[11,"draw","","",267,[[["option",4],["canvas",3],["paint",6]]]],[11,"peek_pixels","","",267,[[],[["borrows",3],["option",4]]]],[11,"read_pixels_to_pixmap","","",267,[[["pixmap",6]],["bool",15]]],[11,"read_pixels","","",267,[[["usize",15],["imageinfo",6]],["bool",15]]],[11,"read_pixels_to_bitmap","","",267,[[["bitmap",6]],["bool",15]]],[11,"write_pixels_from_pixmap","","",267,[[["pixmap",6]]]],[11,"write_pixels_from_bitmap","","",267,[[["bitmap",6]]]],[11,"props","","",267,[[],["surfaceprops",3]]],[11,"flush_and_submit","","",267,[[]]],[11,"flush_submit_and_sync_cpu","","",267,[[]]],[11,"flush","","",267,[[]]],[11,"flush_with_access_info","","",267,[[["backendsurfaceaccess",4],["flushinfo",3]],["semaphoressubmitted",4]]],[11,"flush_with_mutable_state","","",267,[[["flushinfo",3]],["semaphoressubmitted",4]]],[11,"characterize","","",267,[[],[["option",4],["surfacecharacterization",6]]]],[11,"draw_display_list","","",267,[[],["bool",15]]],[11,"draw_display_list_with_offset","","",267,[[],["bool",15]]],[11,"resized","","",265,[[]]],[11,"with_color_space","","",265,[[]]],[11,"with_backend_format","","",265,[[["colortype",4],["backendformat",6]]]],[11,"with_fbo0","","",265,[[["bool",15]]]],[11,"cache_max_resource_bytes","","",265,[[],["usize",15]]],[11,"is_valid","","",265,[[],["bool",15]]],[11,"image_info","","",265,[[],["imageinfo",6]]],[11,"backend_format","","",265,[[],["backendformat",6]]],[11,"origin","","",265,[[],["surfaceorigin",4]]],[11,"dimensions","","",265,[[],["isize",3]]],[11,"width","","",265,[[],["i32",15]]],[11,"height","","",265,[[],["i32",15]]],[11,"color_type","","",265,[[],["colortype",4]]],[11,"sample_count","","",265,[[],["usize",15]]],[11,"is_textureable","","",265,[[],["bool",15]]],[11,"is_mip_mapped","","",265,[[],["bool",15]]],[11,"uses_glfbo0","","",265,[[],["bool",15]]],[11,"vk_rt_supports_input_attachment","","",265,[[],["bool",15]]],[11,"vulkan_secondary_cb_compatible","","",265,[[],["bool",15]]],[11,"is_protected","","",265,[[],["protected",4]]],[11,"color_space","","",265,[[],[["colorspace",6],["option",4]]]],[11,"surface_props","","",265,[[],["surfaceprops",3]]],[11,"is_compatible","","",265,[[["backendtexture",6]],["bool",15]]],[11,"is_rgb","","",201,[[],["bool",15]]],[11,"is_bgr","","",201,[[],["bool",15]]],[11,"is_h","","",201,[[],["bool",15]]],[11,"is_v","","",201,[[],["bool",15]]],[18,"USE_DEVICE_INDEPENDENT_FONTS","","",244,null],[11,"empty","","Returns an empty set of flags",244,[[],["surfacepropsflags",3]]],[11,"all","","Returns the set containing all flags.",244,[[],["surfacepropsflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",244,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that â€¦",244,[[["u32",15]],[["option",4],["surfacepropsflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any â€¦",244,[[["u32",15]],["surfacepropsflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving allâ€¦",244,[[["u32",15]],["surfacepropsflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",244,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",244,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦",244,[[["surfacepropsflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained â€¦",244,[[["surfacepropsflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",244,[[["surfacepropsflags",3]]]],[11,"remove","","Removes the specified flags in-place.",244,[[["surfacepropsflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",244,[[["surfacepropsflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the â€¦",244,[[["surfacepropsflags",3],["bool",15]]]],[11,"new","","",245,[[["surfacepropsflags",3],["pixelgeometry",4]],["surfaceprops",3]]],[11,"flags","","",245,[[],["surfacepropsflags",3]]],[11,"pixel_geometry","","",245,[[],["pixelgeometry",4]]],[11,"is_use_device_independent_fonts","","",245,[[],["bool",15]]],[11,"new","","",267,[[["font",6]],["option",4]]],[11,"bounds","","",267,[[],["rect",3]]],[11,"unique_id","","",267,[[],["u32",15]]],[11,"get_intercepts","","",267,[[["option",4],["paint",6]],[["vec",3],["scalar",6]]]],[11,"from_str","","",267,[[["font",6]],[["textblob",6],["option",4]]]],[11,"from_text","","",267,[[["textencoding",4],["font",6]],[["textblob",6],["option",4]]]],[11,"from_pos_text_h","","",267,[[["font",6],["scalar",6]],[["textblob",6],["option",4]]]],[11,"from_pos_text","","",267,[[["font",6]],[["textblob",6],["option",4]]]],[11,"from_rsxform","","",267,[[["font",6]],[["textblob",6],["option",4]]]],[11,"new","","",265,[[]]],[11,"make","","",265,[[],[["textblob",6],["option",4]]]],[11,"alloc_run","","",265,[[["usize",15],["font",6],["rect",3],["option",4]]]],[11,"alloc_run_pos_h","","",265,[[["usize",15],["font",6],["rect",3],["option",4],["scalar",6]]]],[11,"alloc_run_pos","","",265,[[["usize",15],["font",6],["rect",3],["option",4]]]],[11,"alloc_run_rsxform","","",265,[[["usize",15],["font",6]]]],[11,"new","","",297,[[]]],[11,"make","","",297,[[],[["textblob",6],["option",4]]]],[11,"alloc_run","","",297,[[["usize",15],["font",6],["rect",3],["option",4]]]],[11,"alloc_run_pos_h","","",297,[[["usize",15],["font",6],["rect",3],["option",4],["scalar",6]]]],[11,"alloc_run_pos","","",297,[[["usize",15],["font",6],["rect",3],["option",4]]]],[11,"alloc_run_rsxform","","",297,[[["usize",15],["font",6]]]],[11,"typeface","","",202,[[],["option",4]]],[11,"new","","",268,[[["textblob",6]]]],[18,"LastTileMode","","",203,null],[11,"new","","",267,[[["fontstyle",3]],["option",4]]],[11,"font_style","","",267,[[],["fontstyle",3]]],[11,"is_bold","","",267,[[],["bool",15]]],[11,"is_italic","","",267,[[],["bool",15]]],[11,"is_fixed_pitch","","",267,[[],["bool",15]]],[11,"variation_design_position","","",267,[[],[["option",4],["vec",3]]]],[11,"variation_design_parameters","","",267,[[],[["vec",3],["option",4]]]],[11,"unique_id","","",267,[[],["fontid",6]]],[11,"equal","","",267,[[],["bool",15]]],[11,"from_name","","",267,[[["fontstyle",3]],[["option",4],["typeface",6]]]],[11,"from_data","","",267,[[],[["option",4],["typeface",6]]]],[11,"clone_with_arguments","","",267,[[["fontarguments",3]],[["option",4],["typeface",6]]]],[11,"serialize","","",267,[[["serializebehavior",4]],["data",6]]],[11,"deserialize","","",267,[[],[["option",4],["typeface",6]]]],[11,"unichars_to_glyphs","","",267,[[]]],[11,"unichar_to_glyph","","",267,[[["unichar",6]],["glyphid",6]]],[11,"count_glyphs","","",267,[[],["usize",15]]],[11,"count_tables","","",267,[[],["usize",15]]],[11,"table_tags","","",267,[[],[["vec",3],["option",4]]]],[11,"get_table_size","","",267,[[["fonttabletag",6]],[["usize",15],["option",4]]]],[11,"get_table_data","","",267,[[["fonttabletag",6]],["usize",15]]],[11,"copy_table_data","","",267,[[["fonttabletag",6]],[["option",4],["data",6]]]],[11,"units_per_em","","",267,[[],[["i32",15],["option",4]]]],[11,"get_kerning_pair_adjustments","","",267,[[],["bool",15]]],[11,"new_family_name_iterator","","",267,[[]]],[11,"family_name","","",267,[[],["string",3]]],[11,"post_script_name","","",267,[[],[["option",4],["string",3]]]],[11,"to_font_data","","",267,[[],["option",4]]],[11,"bounds","","",267,[[],["rect",3]]],[11,"from_chars","","",246,[[["char",15]]]],[11,"new","","",246,[[["u32",15]]]],[11,"a","","",246,[[],["u8",15]]],[11,"b","","",246,[[],["u8",15]]],[11,"c","","",246,[[],["u8",15]]],[11,"d","","",246,[[],["u8",15]]],[18,"NO","","",247,null],[18,"YES","","",247,null],[18,"No","","",247,null],[18,"Yes","","",247,null],[18,"Last","skia_safe::vertices","",117,null],[11,"new","","",120,[[["attributetype",4]]]],[11,"new_with_usage_and_marker","","",120,[[["attributetype",4]],["attribute",3]]],[11,"marker_name","","",120,[[],[["cstr",3],["option",4]]]],[11,"channel_count","","",120,[[],["usize",15]]],[11,"bytes_per_vertex","","",120,[[],["usize",15]]],[11,"is_valid","","",120,[[],["bool",15]]],[11,"new_copy","skia_safe","",267,[[["vertexmode",4],["option",4]],["vertices",6]]],[18,"MAX_CUSTOM_ATTRIBUTES","","",267,null],[11,"unique_id","","",267,[[],["u32",15]]],[11,"mode","","",267,[[],["vertexmode",4]]],[11,"bounds","","",267,[[],["rect",3]]],[11,"has_colors","","",267,[[],["bool",15]]],[11,"has_tex_coords","","",267,[[],["bool",15]]],[11,"has_bones","","",267,[[],["bool",15]]],[11,"has_indices","","",267,[[],["bool",15]]],[11,"vertex_count","","",267,[[],["usize",15]]],[11,"index_count","","",267,[[],["usize",15]]],[11,"positions","","",267,[[]]],[11,"tex_coords","","",267,[[],["option",4]]],[11,"colors","","",267,[[],["option",4]]],[11,"bone_indices","","",267,[[],["option",4]]],[11,"bone_weights","","",267,[[],["option",4]]],[11,"indices","","",267,[[],["option",4]]],[11,"is_volatile","","",267,[[],["bool",15]]],[11,"apply_bones","","",267,[[]]],[11,"approximate_size","","",267,[[],["usize",15]]],[11,"decode","","",267,[[]]],[11,"encode","","",267,[[]]],[18,"HAS_TEX_COORDS","skia_safe::vertices","",249,null],[18,"HAS_COLORS","","",249,null],[11,"empty","","Returns an empty set of flags",249,[[],["builderflags",3]]],[11,"all","","Returns the set containing all flags.",249,[[],["builderflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",249,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that â€¦",249,[[["u32",15]],[["option",4],["builderflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any â€¦",249,[[["u32",15]],["builderflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving allâ€¦",249,[[["u32",15]],["builderflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",249,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",249,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦",249,[[["builderflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained â€¦",249,[[["builderflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",249,[[["builderflags",3]]]],[11,"remove","","Removes the specified flags in-place.",249,[[["builderflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",249,[[["builderflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the â€¦",249,[[["bool",15],["builderflags",3]]]],[11,"new","skia_safe","",265,[[["usize",15],["vertexmode",4],["builderflags",3]],["builder",6]]],[11,"positions","","",265,[[]]],[11,"indices","","",265,[[],["option",4]]],[11,"tex_coords","","",265,[[],["option",4]]],[11,"colors","","",265,[[],["option",4]]],[11,"is_volatile","","",265,[[],["bool",15]]],[11,"bone_indices","","",265,[[],["option",4]]],[11,"bone_weights","","",265,[[],["option",4]]],[11,"detach","","",265,[[],["vertices",6]]],[18,"Last","skia_safe::yuva_pixmap_info","",121,null],[18,"MAX_PLANES","skia_safe","",265,null],[11,"new","","<code>dimensions</code> should specify the size of the full resolution â€¦",265,[[["yuvcolorspace",4],["planeconfig",4],["subsampling",4]],["option",4]]],[11,"plane_config","","",265,[[],["planeconfig",4]]],[11,"subsampling","","",265,[[],["subsampling",4]]],[11,"plane_subsampling_factors","","",265,[[["usize",15]]]],[11,"dimensions","","Dimensions of the full resolution image (after planes â€¦",265,[[],["isize",3]]],[11,"width","","",265,[[],["i32",15]]],[11,"height","","",265,[[],["i32",15]]],[11,"yuv_color_space","","",265,[[],["yuvcolorspace",4]]],[11,"siting_xy","","",265,[[]]],[11,"origin","","",265,[[],["encodedorigin",4]]],[11,"origin_matrix","","",265,[[],["matrix",3]]],[11,"has_alpha","","",265,[[],["bool",15]]],[11,"plane_dimensions","","Returns the dimensions for each plane. Dimensions are as â€¦",265,[[],[["vec",3],["isize",3]]]],[11,"compute_total_bytes","","Given a per-plane row bytes, determine size to allocate â€¦",265,[[["option",4]],["usize",15]]],[11,"num_planes","","",265,[[],["usize",15]]],[11,"num_channels_in_plane","","",265,[[["usize",15]],[["usize",15],["option",4]]]],[11,"with_subsampling","","Returns a [YUVAInfo] that is identical to this one but â€¦",265,[[["subsampling",4]],["option",4]]],[11,"with_dimensions","","Returns a [YUVAInfo] that is identical to this one but â€¦",265,[[],["option",4]]],[18,"MAX_PLANES","skia_safe::yuva_info","",288,null],[11,"new","","<code>dimensions</code> should specify the size of the full resolution â€¦",288,[[["yuvcolorspace",4],["planeconfig",4],["subsampling",4]],["option",4]]],[11,"plane_config","","",288,[[],["planeconfig",4]]],[11,"subsampling","","",288,[[],["subsampling",4]]],[11,"plane_subsampling_factors","","",288,[[["usize",15]]]],[11,"dimensions","","Dimensions of the full resolution image (after planes â€¦",288,[[],["isize",3]]],[11,"width","","",288,[[],["i32",15]]],[11,"height","","",288,[[],["i32",15]]],[11,"yuv_color_space","","",288,[[],["yuvcolorspace",4]]],[11,"siting_xy","","",288,[[]]],[11,"origin","","",288,[[],["encodedorigin",4]]],[11,"origin_matrix","","",288,[[],["matrix",3]]],[11,"has_alpha","","",288,[[],["bool",15]]],[11,"plane_dimensions","","Returns the dimensions for each plane. Dimensions are as â€¦",288,[[],[["vec",3],["isize",3]]]],[11,"compute_total_bytes","","Given a per-plane row bytes, determine size to allocate â€¦",288,[[["option",4]],["usize",15]]],[11,"num_planes","","",288,[[],["usize",15]]],[11,"num_channels_in_plane","","",288,[[["usize",15]],[["usize",15],["option",4]]]],[11,"with_subsampling","","Returns a [YUVAInfo] that is identical to this one but â€¦",288,[[["subsampling",4]],["option",4]]],[11,"with_dimensions","","Returns a [YUVAInfo] that is identical to this one but â€¦",288,[[],["option",4]]],[18,"Last","skia_safe::yuva_pixmap_info","",124,null],[11,"from_context","skia_safe","Init based on texture formats supported by the context.",265,[[["recordingcontext",6]]]],[11,"all","","All legal combinations of [PlaneConfig] and [DataType] â€¦",265,[[]]],[11,"supported","","Checks whether there is a supported combination of color â€¦",265,[[["datatype",4],["planeconfig",4]],["bool",15]]],[11,"enable_data_type","","Update to add support for pixmaps with <code>num_channels</code> â€¦",265,[[["usize",15],["datatype",4]]]],[11,"from_context","skia_safe::yuva_pixmaps::yuva_pixmap_info","Init based on texture formats supported by the context.",289,[[["recordingcontext",6]]]],[11,"all","","All legal combinations of [PlaneConfig] and [DataType] â€¦",289,[[]]],[11,"supported","","Checks whether there is a supported combination of color â€¦",289,[[["datatype",4],["planeconfig",4]],["bool",15]]],[11,"enable_data_type","","Update to add support for pixmaps with <code>num_channels</code> â€¦",289,[[["usize",15],["datatype",4]]]],[18,"MAX_PLANES","skia_safe","",265,null],[18,"DATA_TYPE_CNT","","",265,null],[11,"new","","Initializes the [YUVAPixmapInfo] from a [YUVAInfo] with â€¦",265,[[["yuvainfo",6],["option",4]],["option",4]]],[11,"from_data_type","","Like above but uses [â€¦",265,[[["yuvainfo",6],["datatype",4],["option",4]],["option",4]]],[11,"yuva_info","","",265,[[],["yuvainfo",6]]],[11,"yuv_color_space","","",265,[[],["yuvcolorspace",4]]],[11,"num_planes","","The number of [Pixmap] planes.",265,[[],["usize",15]]],[11,"data_type","","The per-YUV<code>[A]</code> channel data type.",265,[[],["datatype",4]]],[11,"row_bytes","","Row bytes for the ith plane. Returns [None] if <code>i</code> >= [â€¦",265,[[["usize",15]],[["usize",15],["option",4]]]],[11,"plane_info","","Image info for the ith plane, or [None] if <code>i</code> >= [â€¦",265,[[["usize",15]],[["option",4],["imageinfo",6]]]],[11,"compute_total_bytes","","Determine size to allocate for all planes. Optionally â€¦",265,[[["option",4]],["usize",15]]],[11,"init_pixmaps_from_single_allocation","","Takes an allocation that is assumed to be at least [â€¦",265,[[],["option",4]]],[11,"is_supported","","Is this valid and does it use color types allowed by the â€¦",265,[[["supporteddatatypes",6]],["bool",15]]],[18,"MAX_PLANES","skia_safe::yuva_pixmaps","",298,null],[18,"DATA_TYPE_CNT","","",298,null],[11,"new","","Initializes the [YUVAPixmapInfo] from a [YUVAInfo] with â€¦",298,[[["yuvainfo",6],["option",4]],["option",4]]],[11,"from_data_type","","Like above but uses [â€¦",298,[[["yuvainfo",6],["datatype",4],["option",4]],["option",4]]],[11,"yuva_info","","",298,[[],["yuvainfo",6]]],[11,"yuv_color_space","","",298,[[],["yuvcolorspace",4]]],[11,"num_planes","","The number of [Pixmap] planes.",298,[[],["usize",15]]],[11,"data_type","","The per-YUV<code>[A]</code> channel data type.",298,[[],["datatype",4]]],[11,"row_bytes","","Row bytes for the ith plane. Returns [None] if <code>i</code> >= [â€¦",298,[[["usize",15]],[["usize",15],["option",4]]]],[11,"plane_info","","Image info for the ith plane, or [None] if <code>i</code> >= [â€¦",298,[[["usize",15]],[["option",4],["imageinfo",6]]]],[11,"compute_total_bytes","","Determine size to allocate for all planes. Optionally â€¦",298,[[["option",4]],["usize",15]]],[11,"init_pixmaps_from_single_allocation","","Takes an allocation that is assumed to be at least [â€¦",298,[[],["option",4]]],[11,"is_supported","","Is this valid and does it use color types allowed by the â€¦",298,[[["supporteddatatypes",6]],["bool",15]]],[18,"MAX_PLANES","skia_safe","",265,null],[11,"recommended_rgba_color_type","","",265,[[["datatype",4]],["colortype",4]]],[11,"allocate","","Allocate space for pixmaps\' pixels in the [YUVAPixmaps].",265,[[["yuvapixmapinfo",6]],["option",4]]],[11,"from_data","","Use storage in [Data] as backing store for pixmaps\' â€¦",265,[[["yuvapixmapinfo",6]],["option",4]]],[11,"from_external_memory","","Use passed in memory as backing store for pixmaps\' â€¦",265,[[["yuvapixmapinfo",6]],["option",4]]],[11,"from_external_pixmaps","","Wraps existing <code>Pixmap</code>s. The [YUVAPixmaps] will have no â€¦",265,[[["yuvainfo",6]],["option",4]]],[11,"yuva_info","","",265,[[],["yuvainfo",6]]],[11,"data_type","","",265,[[],["datatype",4]]],[11,"pixmaps_info","","",265,[[],["yuvapixmapinfo",6]]],[11,"num_planes","","Number of pixmap planes.",265,[[],["usize",15]]],[11,"planes","","Access the [Pixmap] planes.",265,[[]]],[11,"plane","","Get the ith [Pixmap] plane. <code>Pixmap</code> will be default â€¦",265,[[["usize",15]],["pixmap",6]]],[18,"MAX_PLANES","skia_safe::yuva_pixmaps","",299,null],[11,"recommended_rgba_color_type","","",299,[[["datatype",4]],["colortype",4]]],[11,"allocate","","Allocate space for pixmaps\' pixels in the [YUVAPixmaps].",299,[[["yuvapixmapinfo",6]],["option",4]]],[11,"from_data","","Use storage in [Data] as backing store for pixmaps\' â€¦",299,[[["yuvapixmapinfo",6]],["option",4]]],[11,"from_external_memory","","Use passed in memory as backing store for pixmaps\' â€¦",299,[[["yuvapixmapinfo",6]],["option",4]]],[11,"from_external_pixmaps","","Wraps existing <code>Pixmap</code>s. The [YUVAPixmaps] will have no â€¦",299,[[["yuvainfo",6]],["option",4]]],[11,"yuva_info","","",299,[[],["yuvainfo",6]]],[11,"data_type","","",299,[[],["datatype",4]]],[11,"pixmaps_info","","",299,[[],["yuvapixmapinfo",6]]],[11,"num_planes","","Number of pixmap planes.",299,[[],["usize",15]]],[11,"planes","","Access the [Pixmap] planes.",299,[[]]],[11,"plane","","Get the ith [Pixmap] plane. <code>Pixmap</code> will be default â€¦",299,[[["usize",15]],["pixmap",6]]],[11,"append_int","skia_safe","",265,[[["i32",15]]]],[11,"append_float","","",265,[[["f32",15]]]],[11,"append_string","","",265,[[]]],[11,"append_float_array","","",265,[[]]],[11,"append_string_array","","",265,[[]]],[11,"append_int","skia_safe::pdf","",290,[[["i32",15]]]],[11,"append_float","","",290,[[["f32",15]]]],[11,"append_string","","",290,[[]]],[11,"append_float_array","","",290,[[]]],[11,"append_string_array","","",290,[[]]],[11,"new","","",250,[[]]],[11,"set_type_string","","",250,[[]]],[11,"type_string","","",250,[[],["str",15]]],[11,"set_child_vector","","",250,[[["structureelementnode",3],["vec",3]]]],[11,"append_child","","",250,[[["structureelementnode",3]]]],[11,"child_vector","","",250,[[]]],[11,"set_node_id","","",250,[[["i32",15]]]],[11,"node_id","","",250,[[],["i32",15]]],[11,"attributes","","",250,[[],["attributelist",6]]],[11,"attributes_mut","","",250,[[],["attributelist",6]]],[11,"set_alt","","",250,[[]]],[11,"alt","","",250,[[],["str",15]]],[11,"set_lang","","",250,[[]]],[11,"lang","","",250,[[],["str",15]]],[18,"LastEnum","skia_safe::path_1d_path_effect","",127,null],[11,"path_1d","skia_safe","",267,[[["style",4],["path",6],["scalar",6]],[["option",4],["patheffect",6]]]],[11,"line_2d","","",267,[[["scalar",6],["matrix",3]],[["option",4],["patheffect",6]]]],[11,"path_2d","","",267,[[["matrix",3],["path",6]],["patheffect",6]]],[11,"new","","",265,[[["f32",15]]]],[11,"set_identity","","",265,[[]]],[11,"set_scale","","",265,[[["f32",15]]]],[11,"post_translate","","",265,[[["f32",15]]]],[11,"set_concat","","",265,[[["colormatrix",6]]]],[11,"pre_concat","","",265,[[["colormatrix",6]]]],[11,"post_concat","","",265,[[["colormatrix",6]]]],[11,"set_saturation","","",265,[[["f32",15]]]],[11,"set_row_major","","",265,[[]]],[11,"get_row_major","","",265,[[]]],[11,"new_lighting","","",267,[[],["option",4]]],[11,"corner_path","","",267,[[["scalar",6]],["option",4]]],[11,"dash","","",267,[[["scalar",6]],["option",4]]],[11,"discrete","","",267,[[["scalar",6]],["option",4]]],[11,"linear_gradient","","",267,[[["tilemode",4]],["option",4]]],[11,"radial_gradient","","",267,[[["scalar",6],["tilemode",4]],["option",4]]],[11,"two_point_conical_gradient","","",267,[[["scalar",6],["tilemode",4]],["option",4]]],[11,"sweep_gradient","","",267,[[["tilemode",4]],["option",4]]],[18,"INTERPOLATE_COLORS_IN_PREMUL","skia_safe::gradient_shader","",251,null],[11,"empty","","Returns an empty set of flags",251,[[],["flags",3]]],[11,"all","","Returns the set containing all flags.",251,[[],["flags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",251,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that â€¦",251,[[["u32",15]],[["flags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any â€¦",251,[[["u32",15]],["flags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving allâ€¦",251,[[["u32",15]],["flags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",251,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",251,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦",251,[[["flags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained â€¦",251,[[["flags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",251,[[["flags",3]]]],[11,"remove","","Removes the specified flags in-place.",251,[[["flags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",251,[[["flags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the â€¦",251,[[["flags",3],["bool",15]]]],[11,"len","","",128,[[],["usize",15]]],[11,"is_empty","","",128,[[],["bool",15]]],[18,"Last","skia_safe::high_contrast_config","",129,null],[11,"new","skia_safe::high_contrast_filter","",130,[[["bool",15],["scalar",6],["invertstyle",4]]]],[11,"is_valid","","",130,[[],["bool",15]]],[11,"high_contrast","skia_safe","",267,[[["highcontrastconfig",3]],["option",4]]],[18,"NO_CROP_RECT","skia_safe::image_filters","",252,null],[11,"rect","","",252,[[],[["option",4],["rect",3]]]],[11,"alpha_threshold","skia_safe","",267,[[["region",6],["scalar",6]],["option",4]]],[11,"arithmetic","","",267,[[],["option",4]]],[11,"blur","","",267,[[],["option",4]]],[11,"color_filter","","",267,[[],["option",4]]],[11,"compose","","",267,[[],["option",4]]],[11,"displacement_map_effect","","",267,[[["scalar",6]],["option",4]]],[11,"distant_lit_diffuse_lighting","","",267,[[["scalar",6]],["option",4]]],[11,"point_lit_diffuse_lighting","","",267,[[["scalar",6]],["option",4]]],[11,"spot_lit_diffuse_lighting","","",267,[[["scalar",6]],["option",4]]],[11,"distant_lit_specular_lighting","","",267,[[["scalar",6]],["option",4]]],[11,"point_lit_specular_lighting","","",267,[[["scalar",6]],["option",4]]],[11,"spot_lit_specular_lighting","","",267,[[["scalar",6]],["option",4]]],[11,"magnifier","","",267,[[["scalar",6]],["option",4]]],[11,"matrix_convolution","","",267,[[["tilemode",4],["bool",15],["scalar",6]],["option",4]]],[11,"merge","","",267,[[],["option",4]]],[11,"dilate","","",267,[[],["option",4]]],[11,"erode","","",267,[[],["option",4]]],[11,"offset","","",267,[[],["option",4]]],[11,"from_paint","","",267,[[["paint",6]],["option",4]]],[11,"from_picture","","",267,[[],["option",4]]],[11,"tile","","",267,[[],["option",4]]],[11,"alpha_threshold","skia_safe::image_filter","",300,[[["region",6],["scalar",6]],["option",4]]],[11,"arithmetic","","",300,[[],["option",4]]],[11,"blur","","",300,[[],["option",4]]],[11,"color_filter","","",300,[[],["option",4]]],[11,"compose","","",300,[[],["option",4]]],[11,"displacement_map_effect","","",300,[[["scalar",6]],["option",4]]],[11,"distant_lit_diffuse_lighting","","",300,[[["scalar",6]],["option",4]]],[11,"point_lit_diffuse_lighting","","",300,[[["scalar",6]],["option",4]]],[11,"spot_lit_diffuse_lighting","","",300,[[["scalar",6]],["option",4]]],[11,"distant_lit_specular_lighting","","",300,[[["scalar",6]],["option",4]]],[11,"point_lit_specular_lighting","","",300,[[["scalar",6]],["option",4]]],[11,"spot_lit_specular_lighting","","",300,[[["scalar",6]],["option",4]]],[11,"magnifier","","",300,[[["scalar",6]],["option",4]]],[11,"matrix_convolution","","",300,[[["tilemode",4],["bool",15],["scalar",6]],["option",4]]],[11,"merge","","",300,[[],["option",4]]],[11,"dilate","","",300,[[],["option",4]]],[11,"erode","","",300,[[],["option",4]]],[11,"offset","","",300,[[],["option",4]]],[11,"from_paint","","",300,[[["paint",6]],["option",4]]],[11,"from_picture","","",300,[[],["option",4]]],[11,"tile","","",300,[[],["option",4]]],[11,"new","skia_safe::image_filters","",132,[[["bool",15],["f32",15]]]],[11,"as_image_filter","skia_safe","",265,[[],[["imagefilter",6],["option",4]]]],[11,"as_image_filter","skia_safe::paint","",301,[[],[["imagefilter",6],["option",4]]]],[11,"as_image_filter","skia_safe","",267,[[],[["imagefilter",6],["option",4]]]],[11,"into_image_filter","","",267,[[],[["imagefilter",6],["option",4]]]],[11,"as_image_filter","","",302,[[],[["imagefilter",6],["option",4]]]],[11,"into_image_filter","","",302,[[],[["imagefilter",6],["option",4]]]],[11,"luma","","",267,[[]]],[11,"luma","skia_safe::color_filter","",303,[[]]],[11,"merge","skia_safe","",267,[[["pathop",4]],["patheffect",6]]],[11,"matrix_translate","","",267,[[],[["option",4],["patheffect",6]]]],[11,"matrix","","",267,[[["matrix",3]],[["option",4],["patheffect",6]]]],[11,"stroke","","",267,[[["cap",4],["scalar",6],["join",4]],[["option",4],["patheffect",6]]]],[11,"overdraw","","",267,[[],["colorfilter",6]]],[11,"fractal_perlin_noise","","",267,[[["usize",15],["scalar",6]],["option",4]]],[11,"turbulence_perlin_noise","","",267,[[["usize",15],["scalar",6]],["option",4]]],[18,"ARRAY","skia_safe::runtime_effect::uniform","",253,null],[18,"MARKER","","",253,null],[18,"MARKER_NORMALS","","",253,null],[18,"SRGB_UNPREMUL","","",253,null],[11,"empty","","Returns an empty set of flags",253,[[],["flags",3]]],[11,"all","","Returns the set containing all flags.",253,[[],["flags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",253,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that â€¦",253,[[["u32",15]],[["option",4],["flags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any â€¦",253,[[["u32",15]],["flags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving allâ€¦",253,[[["u32",15]],["flags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",253,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",253,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦",253,[[["flags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained â€¦",253,[[["flags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",253,[[["flags",3]]]],[11,"remove","","Removes the specified flags in-place.",253,[[["flags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",253,[[["flags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the â€¦",253,[[["flags",3],["bool",15]]]],[11,"name","skia_safe","",265,[[],["str",15]]],[11,"offset","","",265,[[],["usize",15]]],[11,"ty","","",265,[[],["type",4]]],[11,"count","","",265,[[],["i32",15]]],[11,"flags","","",265,[[],["flags",3]]],[11,"marker","","",265,[[],["u32",15]]],[11,"is_array","","",265,[[],["bool",15]]],[11,"size_in_bytes","","",265,[[],["usize",15]]],[11,"name","skia_safe::runtime_effect","",304,[[],["str",15]]],[11,"offset","","",304,[[],["usize",15]]],[11,"ty","","",304,[[],["type",4]]],[11,"count","","",304,[[],["i32",15]]],[11,"flags","","",304,[[],["flags",3]]],[11,"marker","","",304,[[],["u32",15]]],[11,"is_array","","",304,[[],["bool",15]]],[11,"size_in_bytes","","",304,[[],["usize",15]]],[11,"name","skia_safe","",265,[[],["str",15]]],[11,"width","","",265,[[],["i32",15]]],[11,"name","skia_safe::runtime_effect","",305,[[],["str",15]]],[11,"width","","",305,[[],["i32",15]]],[11,"make_shader","skia_safe","",267,[[["bool",15]],[["option",4],["shader",6]]]],[11,"make_image","","",267,[[["bool",15],["recordingcontext",6],["imageinfo",6]],[["option",4],["image",6]]]],[11,"make_color_filter_with_children","","",267,[[]]],[11,"make_color_filter","","",267,[[],[["colorfilter",6],["option",4]]]],[11,"source","","",267,[[],["str",15]]],[11,"index","","",267,[[]]],[11,"input_size","","",267,[[],["usize",15]]],[11,"uniform_size","","",267,[[],["usize",15]]],[11,"inputs","","",267,[[]]],[11,"uniforms","","",267,[[]]],[11,"children","","",267,[[]]],[11,"varyings","","",267,[[]]],[11,"find_input","","",267,[[],[["option",4],["uniform",6]]]],[11,"find_uniform","","",267,[[],[["option",4],["uniform",6]]]],[11,"find_child","","",267,[[],[["usize",15],["option",4]]]],[11,"make_shader","skia_safe::runtime_effect","",306,[[["bool",15]],[["option",4],["shader",6]]]],[11,"make_image","","",306,[[["bool",15],["recordingcontext",6],["imageinfo",6]],[["option",4],["image",6]]]],[11,"make_color_filter_with_children","","",306,[[]]],[11,"make_color_filter","","",306,[[],[["colorfilter",6],["option",4]]]],[11,"source","","",306,[[],["str",15]]],[11,"index","","",306,[[]]],[11,"input_size","","",306,[[],["usize",15]]],[11,"uniform_size","","",306,[[],["usize",15]]],[11,"inputs","","",306,[[]]],[11,"uniforms","","",306,[[]]],[11,"children","","",306,[[]]],[11,"varyings","","",306,[[]]],[11,"find_input","","",306,[[],[["option",4],["uniform",6]]]],[11,"find_uniform","","",306,[[],[["option",4],["uniform",6]]]],[11,"find_child","","",306,[[],[["usize",15],["option",4]]]],[11,"from_shader","skia_safe","",267,[[],["maskfilter",6]]],[11,"from_table","","",267,[[]]],[11,"from_argb","","",267,[[["option",4]]]],[11,"trim","","",267,[[["scalar",6]],[["option",4],["patheffect",6]]]],[11,"new","","",265,[[],["backenddrawableinfo",6]]],[11,"from_vk","","",265,[[["drawableinfo",3]],["backenddrawableinfo",6]]],[11,"is_valid","","",265,[[],["bool",15]]],[11,"backend","","",265,[[],["backendapi",4]]],[11,"get_vk_drawable_info","","",265,[[],[["drawableinfo",3],["option",4]]]],[11,"new","","",265,[[]]],[11,"new_gl","","",265,[[["enum",6]]]],[11,"new_vulkan","","",265,[[["format",4]]]],[11,"new_vulkan_ycbcr","","",265,[[["ycbcrconversioninfo",3]]]],[11,"new_dxgi","","",265,[[["dxgi_format",6]]]],[11,"backend","","",265,[[],["backendapi",4]]],[11,"channel_mask","","",265,[[],["u32",15]]],[11,"as_gl_format","","",265,[[],["format",4]]],[11,"as_vk_format","","",265,[[],[["option",4],["format",4]]]],[11,"as_dxgi_format","","",265,[[],[["dxgi_format",6],["option",4]]]],[11,"to_texture_2d","","",265,[[]]],[11,"is_valid","","",265,[[],["bool",15]]],[11,"new_gl","","",265,[[["mipmapped",4],["textureinfo",3]]]],[11,"new_vulkan","","",265,[[["imageinfo",3]]]],[11,"new_d3d","","",265,[[["textureresourceinfo",3]]]],[11,"dimensions","","",265,[[],["isize",3]]],[11,"width","","",265,[[],["i32",15]]],[11,"height","","",265,[[],["i32",15]]],[11,"has_mip_maps","","",265,[[],["bool",15]]],[11,"has_mipmaps","","",265,[[],["bool",15]]],[11,"backend","","",265,[[],["backendapi",4]]],[11,"gl_texture_info","","",265,[[],[["textureinfo",3],["option",4]]]],[11,"gl_texture_parameters_modified","","",265,[[]]],[11,"vulkan_image_info","","",265,[[],[["imageinfo",3],["option",4]]]],[11,"set_vulkan_image_layout","","",265,[[["imagelayout",4]]]],[11,"d3d_texture_resource_info","","",265,[[],[["textureresourceinfo",3],["option",4]]]],[11,"set_d3d_resource_state","","",265,[[["resourcestateenum",6]]]],[11,"backend_format","","",265,[[],["backendformat",6]]],[11,"is_protected","","",265,[[],["bool",15]]],[11,"is_valid","","",265,[[],["bool",15]]],[11,"is_same_texture","","",265,[[["backendtexture",6]],["bool",15]]],[11,"new_gl","skia_safe::gpu","",307,[[["mipmapped",4],["textureinfo",3]]]],[11,"new_vulkan","","",307,[[["imageinfo",3]]]],[11,"new_d3d","","",307,[[["textureresourceinfo",3]]]],[11,"dimensions","","",307,[[],["isize",3]]],[11,"width","","",307,[[],["i32",15]]],[11,"height","","",307,[[],["i32",15]]],[11,"has_mip_maps","","",307,[[],["bool",15]]],[11,"has_mipmaps","","",307,[[],["bool",15]]],[11,"backend","","",307,[[],["backendapi",4]]],[11,"gl_texture_info","","",307,[[],[["textureinfo",3],["option",4]]]],[11,"gl_texture_parameters_modified","","",307,[[]]],[11,"vulkan_image_info","","",307,[[],[["imageinfo",3],["option",4]]]],[11,"set_vulkan_image_layout","","",307,[[["imagelayout",4]]]],[11,"d3d_texture_resource_info","","",307,[[],[["textureresourceinfo",3],["option",4]]]],[11,"set_d3d_resource_state","","",307,[[["resourcestateenum",6]]]],[11,"backend_format","","",307,[[],["backendformat",6]]],[11,"is_protected","","",307,[[],["bool",15]]],[11,"is_valid","","",307,[[],["bool",15]]],[11,"is_same_texture","","",307,[[["backendtexture",6]],["bool",15]]],[11,"new_gl","skia_safe","",265,[[["usize",15],["framebufferinfo",3]]]],[11,"new_vulkan","","",265,[[["imageinfo",3]]]],[11,"new_d3d","","",265,[[["textureresourceinfo",3]]]],[11,"dimensions","","",265,[[],["isize",3]]],[11,"width","","",265,[[],["i32",15]]],[11,"height","","",265,[[],["i32",15]]],[11,"sample_count","","",265,[[],["usize",15]]],[11,"stencil_bits","","",265,[[],["usize",15]]],[11,"backend","","",265,[[],["backendapi",4]]],[11,"is_framebuffer_only","","",265,[[],["bool",15]]],[11,"gl_framebuffer_info","","",265,[[],[["framebufferinfo",3],["option",4]]]],[11,"vulkan_image_info","","",265,[[],[["imageinfo",3],["option",4]]]],[11,"set_vulkan_image_layout","","",265,[[["imagelayout",4]]]],[11,"d3d_texture_resource_info","","",265,[[],[["textureresourceinfo",3],["option",4]]]],[11,"set_d3d_resource_state","","",265,[[["resourcestateenum",6]]]],[11,"backend_format","","",265,[[],["backendformat",6]]],[11,"set_mutable_stat","","",265,[[["backendsurfacemutablestate",6]]]],[11,"is_protected","","",265,[[],["bool",15]]],[11,"is_valid","","",265,[[],["bool",15]]],[11,"new_gl","skia_safe::gpu","",308,[[["usize",15],["framebufferinfo",3]]]],[11,"new_vulkan","","",308,[[["imageinfo",3]]]],[11,"new_d3d","","",308,[[["textureresourceinfo",3]]]],[11,"dimensions","","",308,[[],["isize",3]]],[11,"width","","",308,[[],["i32",15]]],[11,"height","","",308,[[],["i32",15]]],[11,"sample_count","","",308,[[],["usize",15]]],[11,"stencil_bits","","",308,[[],["usize",15]]],[11,"backend","","",308,[[],["backendapi",4]]],[11,"is_framebuffer_only","","",308,[[],["bool",15]]],[11,"gl_framebuffer_info","","",308,[[],[["framebufferinfo",3],["option",4]]]],[11,"vulkan_image_info","","",308,[[],[["imageinfo",3],["option",4]]]],[11,"set_vulkan_image_layout","","",308,[[["imagelayout",4]]]],[11,"d3d_texture_resource_info","","",308,[[],[["textureresourceinfo",3],["option",4]]]],[11,"set_d3d_resource_state","","",308,[[["resourcestateenum",6]]]],[11,"backend_format","","",308,[[],["backendformat",6]]],[11,"set_mutable_stat","","",308,[[["backendsurfacemutablestate",6]]]],[11,"is_protected","","",308,[[],["bool",15]]],[11,"is_valid","","",308,[[],["bool",15]]],[11,"new_vk","skia_safe","",265,[[["u32",15],["imagelayout",4]]]],[11,"new_vk","skia_safe::gpu","",291,[[["u32",15],["imagelayout",4]]]],[11,"from_raw","skia_safe::gpu::d3d","Creates a <code>ComPtr</code> to wrap a raw pointer. It takes â€¦",254,[[],["comptr",3]]],[11,"up","","Casts up the inheritance chain",254,[[],["comptr",3]]],[11,"into_raw","","Extracts the raw pointer. You are now responsible for â€¦",254,[[]]],[11,"cast","","Performs QueryInterface fun.",254,[[],[["result",4],["comptr",3],["i32",15]]]],[11,"as_raw","","Obtains the raw pointer without transferring ownership. â€¦",254,[[]]],[11,"from_resource","","",10,[[["cp",3],["id3d12resource",3]]]],[11,"with_state","","",10,[[["d3d12_resource_states",6]]]],[11,"UpdateTileMappings","","",12,[[["u32",15]]]],[11,"CopyTileMappings","","",12,[[["u32",15]]]],[11,"ExecuteCommandLists","","",12,[[["u32",15]]]],[11,"SetMarker","","",12,[[["u32",15]]]],[11,"BeginEvent","","",12,[[["u32",15]]]],[11,"EndEvent","","",12,[[]]],[11,"Signal","","",12,[[["u64",15]],["i32",15]]],[11,"Wait","","",12,[[["u64",15]],["i32",15]]],[11,"GetTimestampFrequency","","",12,[[],["i32",15]]],[11,"GetClockCalibration","","",12,[[],["i32",15]]],[11,"GetDesc","","",12,[[],["d3d12_command_queue_desc",3]]],[11,"GetNodeCount","","",13,[[],["u32",15]]],[11,"CreateCommandQueue","","",13,[[],["i32",15]]],[11,"CreateCommandAllocator","","",13,[[["u32",15]],["i32",15]]],[11,"CreateGraphicsPipelineState","","",13,[[],["i32",15]]],[11,"CreateComputePipelineState","","",13,[[],["i32",15]]],[11,"CreateCommandList","","",13,[[["u32",15]],["i32",15]]],[11,"CheckFeatureSupport","","",13,[[["u32",15]],["i32",15]]],[11,"CreateDescriptorHeap","","",13,[[],["i32",15]]],[11,"GetDescriptorHandleIncrementSize","","",13,[[["u32",15]],["u32",15]]],[11,"CreateRootSignature","","",13,[[["u32",15],["usize",15]],["i32",15]]],[11,"CreateConstantBufferView","","",13,[[["d3d12_cpu_descriptor_handle",3]]]],[11,"CreateShaderResourceView","","",13,[[["d3d12_cpu_descriptor_handle",3]]]],[11,"CreateUnorderedAccessView","","",13,[[["d3d12_cpu_descriptor_handle",3]]]],[11,"CreateRenderTargetView","","",13,[[["d3d12_cpu_descriptor_handle",3]]]],[11,"CreateDepthStencilView","","",13,[[["d3d12_cpu_descriptor_handle",3]]]],[11,"CreateSampler","","",13,[[["d3d12_cpu_descriptor_handle",3]]]],[11,"CopyDescriptors","","",13,[[["u32",15]]]],[11,"CopyDescriptorsSimple","","",13,[[["u32",15],["d3d12_cpu_descriptor_handle",3]]]],[11,"GetResourceAllocationInfo","","",13,[[["u32",15]],["d3d12_resource_allocation_info",3]]],[11,"GetCustomHeapProperties","","",13,[[["u32",15]],["d3d12_heap_properties",3]]],[11,"CreateCommittedResource","","",13,[[["u32",15]],["i32",15]]],[11,"CreateHeap","","",13,[[],["i32",15]]],[11,"CreatePlacedResource","","",13,[[["u32",15],["u64",15]],["i32",15]]],[11,"CreateReservedResource","","",13,[[["u32",15]],["i32",15]]],[11,"CreateSharedHandle","","",13,[[["u32",15]],["i32",15]]],[11,"OpenSharedHandle","","",13,[[],["i32",15]]],[11,"OpenSharedHandleByName","","",13,[[["u32",15]],["i32",15]]],[11,"MakeResident","","",13,[[["u32",15]],["i32",15]]],[11,"Evict","","",13,[[["u32",15]],["i32",15]]],[11,"CreateFence","","",13,[[["u32",15],["u64",15]],["i32",15]]],[11,"GetDeviceRemovedReason","","",13,[[],["i32",15]]],[11,"GetCopyableFootprints","","",13,[[["u32",15],["u64",15]]]],[11,"CreateQueryHeap","","",13,[[],["i32",15]]],[11,"SetStablePowerState","","",13,[[["i32",15]],["i32",15]]],[11,"CreateCommandSignature","","",13,[[],["i32",15]]],[11,"GetResourceTiling","","",13,[[["u32",15]]]],[11,"GetAdapterLuid","","",13,[[],["luid",3]]],[11,"Map","","",14,[[["u32",15]],["i32",15]]],[11,"Unmap","","",14,[[["u32",15]]]],[11,"GetDesc","","",14,[[],["d3d12_resource_desc",3]]],[11,"GetGPUVirtualAddress","","",14,[[],["u64",15]]],[11,"WriteToSubresource","","",14,[[["u32",15]],["i32",15]]],[11,"ReadFromSubresource","","",14,[[["u32",15]],["i32",15]]],[11,"GetHeapProperties","","",14,[[],["i32",15]]],[11,"GetDesc1","","",15,[[],["i32",15]]],[11,"new_gl","skia_safe","",267,[[],[["directcontext",6],["option",4]]]],[11,"new_vulkan","","",267,[[["backendcontext",3]],[["directcontext",6],["option",4]]]],[11,"new_d3d","","",267,[[["backendcontext",3]],[["directcontext",6],["option",4]]]],[11,"reset","","",267,[[["option",4],["u32",15]]]],[11,"reset_gl_texture_bindings","","",267,[[]]],[11,"abandon","","",267,[[]]],[11,"oomed","","",267,[[],["bool",15]]],[11,"release_resources_and_abandon","","",267,[[]]],[11,"resource_cache_limits","","",267,[[],["resourcecachelimits",3]]],[11,"resource_cache_limit","","",267,[[],["usize",15]]],[11,"resource_cache_usage","","",267,[[],["resourcecacheusage",3]]],[11,"resource_cache_purgeable_bytes","","",267,[[],["usize",15]]],[11,"set_resource_cache_limits","","",267,[[["resourcecachelimits",3]]]],[11,"set_resource_cache_limit","","",267,[[["usize",15]]]],[11,"free_gpu_resources","","",267,[[]]],[11,"perform_deferred_cleanup","","",267,[[["duration",3]]]],[11,"purge_unlocked_resources","","",267,[[["usize",15],["option",4],["bool",15]]]],[11,"flush_and_submit","","",267,[[]]],[11,"flush_submit_and_sync_cpu","","",267,[[]]],[11,"flush_with_info","","",267,[[["flushinfo",3]],["semaphoressubmitted",4]]],[11,"flush","","",267,[[],["semaphoressubmitted",4]]],[11,"submit","","",267,[[],["bool",15]]],[11,"check_async_work_completion","","",267,[[]]],[11,"supports_distance_field_text","","",267,[[],["bool",15]]],[11,"store_vk_pipeline_cache_data","","",267,[[]]],[11,"compressed_backend_format","","",267,[[["compressiontype",4]],["backendformat",6]]],[11,"set_backend_texture_state","","",267,[[["backendtexture",6],["backendsurfacemutablestate",6]],["bool",15]]],[11,"set_backend_texture_state_and_return_previous","","",267,[[["backendtexture",6],["backendsurfacemutablestate",6]],[["backendsurfacemutablestate",6],["option",4]]]],[11,"set_backend_render_target_state","","",267,[[["backendsurfacemutablestate",6],["backendrendertarget",6]],["bool",15]]],[11,"set_backend_render_target_state_and_return_previous","","",267,[[["backendsurfacemutablestate",6],["backendrendertarget",6]],[["backendsurfacemutablestate",6],["option",4]]]],[11,"precompile_shader","","",267,[[["data",6]],["bool",15]]],[11,"applyOverrides","skia_safe::gpu","",41,[[]]],[11,"new","","",41,[[],["grdriverbugworkarounds",3]]],[11,"new1","","",41,[[],["grdriverbugworkarounds",3]]],[11,"is_initialized","skia_safe","",265,[[],["bool",15]]],[11,"has","","",265,[[],["bool",15]]],[11,"remove","","",265,[[],["bool",15]]],[11,"add","","",265,[[]]],[11,"reset","","",265,[[]]],[11,"new_native","","",267,[[],["option",4]]],[11,"new_load_with","","",267,[[],["option",4]]],[11,"validate","","",267,[[],["bool",15]]],[11,"extensions","","",267,[[],["extensions",6]]],[11,"extensions_mut","","",267,[[],["extensions",6]]],[11,"has_extension","","",267,[[],["bool",15]]],[11,"new_native","skia_safe::gpu::gl","",309,[[],["option",4]]],[11,"new_load_with","","",309,[[],["option",4]]],[11,"validate","","",309,[[],["bool",15]]],[11,"extensions","","",309,[[],["extensions",6]]],[11,"extensions_mut","","",309,[[],["extensions",6]]],[11,"has_extension","","",309,[[],["bool",15]]],[18,"LastColorFormat","","",16,null],[18,"Last","","",16,null],[11,"from_target_and_id","","",18,[[["enum",6]]]],[11,"from_fboid","","",19,[[["uint",6]]]],[18,"RENDER_TARGET","","",255,null],[18,"TEXTURE_BINDING","","",255,null],[18,"VIEW","","",255,null],[18,"BLEND","","",255,null],[18,"MSAA_ENABLE","","",255,null],[18,"VERTEX","","",255,null],[18,"STENCIL","","",255,null],[18,"PIXEL_STORE","","",255,null],[18,"PROGRAM","","",255,null],[18,"FIXED_FUNCTION","","",255,null],[18,"MISC","","",255,null],[18,"PATH_RENDERING","","",255,null],[11,"empty","","Returns an empty set of flags",255,[[],["backendstate",3]]],[11,"all","","Returns the set containing all flags.",255,[[],["backendstate",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",255,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that â€¦",255,[[["u32",15]],[["backendstate",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any â€¦",255,[[["u32",15]],["backendstate",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving allâ€¦",255,[[["u32",15]],["backendstate",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",255,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",255,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦",255,[[["backendstate",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained â€¦",255,[[["backendstate",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",255,[[["backendstate",3]]]],[11,"remove","","Removes the specified flags in-place.",255,[[["backendstate",3]]]],[11,"toggle","","Toggles the specified flags in-place.",255,[[["backendstate",3]]]],[11,"set","","Inserts or removes the specified flags depending on the â€¦",255,[[["bool",15],["backendstate",3]]]],[11,"as_direct_context","skia_safe","",267,[[],[["directcontext",6],["option",4]]]],[11,"backend","","",267,[[],["backendapi",4]]],[11,"default_backend_format","","",267,[[["colortype",4],["renderable",4]],["backendformat",6]]],[11,"compressed_backend_format","","",267,[[["compressiontype",4]],["backendformat",6]]],[11,"abandoned","","",267,[[],["bool",15]]],[11,"color_type_supported_as_surface","","",267,[[["colortype",4]],["bool",15]]],[11,"max_texture_size","","",267,[[],["i32",15]]],[11,"max_render_target_size","","",267,[[],["i32",15]]],[11,"color_type_supported_as_image","","",267,[[["colortype",4]],["bool",15]]],[11,"max_surface_sample_count_for_color_type","","",267,[[["colortype",4]],["usize",15]]],[18,"OpenGL_GrBackend","skia_safe::gpu","",42,null],[18,"EXT_DEBUG_REPORT","skia_safe::gpu::vk","",257,null],[18,"NV_GLSL_SHADER","","",257,null],[18,"KHR_SURFACE","","",257,null],[18,"KHR_SWAPCHAIN","","",257,null],[18,"KHR_WIN32_SURFACE","","",257,null],[18,"KHR_ANDROID_SURFACE","","",257,null],[18,"KHR_XCB_SURFACE","","",257,null],[11,"empty","","Returns an empty set of flags",257,[[],["extensionflags",3]]],[11,"all","","Returns the set containing all flags.",257,[[],["extensionflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",257,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that â€¦",257,[[["u32",15]],[["option",4],["extensionflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any â€¦",257,[[["u32",15]],["extensionflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving allâ€¦",257,[[["u32",15]],["extensionflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",257,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",257,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦",257,[[["extensionflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained â€¦",257,[[["extensionflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",257,[[["extensionflags",3]]]],[11,"remove","","Removes the specified flags in-place.",257,[[["extensionflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",257,[[["extensionflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the â€¦",257,[[["bool",15],["extensionflags",3]]]],[18,"GEOMETRY_SHADER","","",258,null],[18,"DUAL_SRC_BLEND","","",258,null],[18,"SAMPLE_RATE_SHADING","","",258,null],[11,"empty","","Returns an empty set of flags",258,[[],["featureflags",3]]],[11,"all","","Returns the set containing all flags.",258,[[],["featureflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",258,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that â€¦",258,[[["u32",15]],[["featureflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any â€¦",258,[[["u32",15]],["featureflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving allâ€¦",258,[[["u32",15]],["featureflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",258,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",258,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦",258,[[["featureflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained â€¦",258,[[["featureflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",258,[[["featureflags",3]]]],[11,"remove","","Removes the specified flags in-place.",258,[[["featureflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",258,[[["featureflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the â€¦",258,[[["featureflags",3],["bool",15]]]],[11,"new","","Safety<code>instance</code>, <code>physical_device</code>, <code>device</code>, and <code>queue</code> must â€¦",259,[[["physicaldevice",6],["device",6],["instance",6]],["backendcontext",3]]],[11,"new_with_extensions","","Safety<code>instance</code>, <code>physical_device</code>, <code>device</code>, and <code>queue</code> must â€¦",259,[[["physicaldevice",6],["device",6],["instance",6]],["backendcontext",3]]],[11,"set_protected_context","","",259,[[["protected",4]]]],[11,"set_max_api_version","","",259,[[]]],[18,"NONCOHERENT","","",260,null],[18,"MAPPABLE","","",260,null],[11,"empty","","Returns an empty set of flags",260,[[],["allocflag",3]]],[11,"all","","Returns the set containing all flags.",260,[[],["allocflag",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",260,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that â€¦",260,[[["u32",15]],[["option",4],["allocflag",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any â€¦",260,[[["u32",15]],["allocflag",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving allâ€¦",260,[[["u32",15]],["allocflag",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",260,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",260,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦",260,[[["allocflag",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained â€¦",260,[[["allocflag",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",260,[[["allocflag",3]]]],[11,"remove","","Removes the specified flags in-place.",260,[[["allocflag",3]]]],[11,"toggle","","Toggles the specified flags in-place.",260,[[["allocflag",3]]]],[11,"set","","Inserts or removes the specified flags depending on the â€¦",260,[[["bool",15],["allocflag",3]]]],[11,"from_device_memory","","SafetyThe memory\'s lifetime is expected to outlive the â€¦",20,[[["allocflag",3],["devicememory",6],["devicesize",6]],["alloc",3]]],[11,"new_with_format","","",21,[[["samplerycbcrrange",4],["samplerycbcrmodelconversion",4],["u64",15],["format",4],["filter",4],["chromalocation",4],["bool32",6],["formatfeatureflags",6]],["ycbcrconversioninfo",3]]],[11,"new","","",21,[[["samplerycbcrrange",4],["samplerycbcrmodelconversion",4],["filter",4],["bool32",6],["u64",15],["chromalocation",4],["formatfeatureflags",6]],["ycbcrconversioninfo",3]]],[11,"is_valid","","",21,[[],["bool",15]]],[11,"new","","SafetyThe Vulkan <code>image</code> and <code>alloc</code> must outlive the â€¦",22,[[["u32",15],["format",4],["alloc",3],["image",6],["imagetiling",4],["imagelayout",4]]]],[11,"from_info","","SafetyThe Vulkan <code>info.image</code> and <code>info.alloc</code> must outlive â€¦",22,[[["imageinfo",3],["imagelayout",4]]]],[11,"from_info_with_queue_index","","SafetyThe Vulkan <code>info.image</code> and <code>info.alloc</code> must outlive â€¦",22,[[["imageinfo",3],["imagelayout",4],["u32",15]]]],[11,"name","","SafetyThe referred raw <code>name</code> strings must outlive the â€¦",23,[[],["cstr",3]]],[18,"COSITED_EVEN_KHR","","",25,null],[18,"MIDPOINT_KHR","","",25,null],[18,"BEGIN_RANGE","","",25,null],[18,"END_RANGE","","",25,null],[18,"BEGIN_RANGE","","",27,null],[18,"END_RANGE","","",27,null],[18,"G8B8G8R8_422_UNORM_KHR","","",28,null],[18,"B8G8R8G8_422_UNORM_KHR","","",28,null],[18,"G8_B8_R8_3PLANE_420_UNORM_KHR","","",28,null],[18,"G8_B8R8_2PLANE_420_UNORM_KHR","","",28,null],[18,"G8_B8_R8_3PLANE_422_UNORM_KHR","","",28,null],[18,"G8_B8R8_2PLANE_422_UNORM_KHR","","",28,null],[18,"G8_B8_R8_3PLANE_444_UNORM_KHR","","",28,null],[18,"R10X6_UNORM_PACK16_KHR","","",28,null],[18,"R10X6G10X6_UNORM_2PACK16_KHR","","",28,null],[18,"R10X6G10X6B10X6A10X6_UNORM_4PACK16_KHR","","",28,null],[18,"G10X6B10X6G10X6R10X6_422_UNORM_4PACK16_KHR","","",28,null],[18,"B10X6G10X6R10X6G10X6_422_UNORM_4PACK16_KHR","","",28,null],[18,"G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16_KHR","","",28,null],[18,"G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16_KHR","","",28,null],[18,"G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16_KHR","","",28,null],[18,"G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16_KHR","","",28,null],[18,"G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16_KHR","","",28,null],[18,"R12X4_UNORM_PACK16_KHR","","",28,null],[18,"R12X4G12X4_UNORM_2PACK16_KHR","","",28,null],[18,"R12X4G12X4B12X4A12X4_UNORM_4PACK16_KHR","","",28,null],[18,"G12X4B12X4G12X4R12X4_422_UNORM_4PACK16_KHR","","",28,null],[18,"B12X4G12X4R12X4G12X4_422_UNORM_4PACK16_KHR","","",28,null],[18,"G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16_KHR","","",28,null],[18,"G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16_KHR","","",28,null],[18,"G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16_KHR","","",28,null],[18,"G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16_KHR","","",28,null],[18,"G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16_KHR","","",28,null],[18,"G16B16G16R16_422_UNORM_KHR","","",28,null],[18,"B16G16R16G16_422_UNORM_KHR","","",28,null],[18,"G16_B16_R16_3PLANE_420_UNORM_KHR","","",28,null],[18,"G16_B16R16_2PLANE_420_UNORM_KHR","","",28,null],[18,"G16_B16_R16_3PLANE_422_UNORM_KHR","","",28,null],[18,"G16_B16R16_2PLANE_422_UNORM_KHR","","",28,null],[18,"G16_B16_R16_3PLANE_444_UNORM_KHR","","",28,null],[18,"BEGIN_RANGE","","",28,null],[18,"END_RANGE","","",28,null],[18,"DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL_KHR","","",29,null],[18,"DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL_KHR","","",29,null],[18,"BEGIN_RANGE","","",29,null],[18,"END_RANGE","","",29,null],[18,"BEGIN_RANGE","","",30,null],[18,"END_RANGE","","",30,null],[18,"RGB_IDENTITY_KHR","","",35,null],[18,"YCBCR_IDENTITY_KHR","","",35,null],[18,"YCBCR_709_KHR","","",35,null],[18,"YCBCR_601_KHR","","",35,null],[18,"YCBCR_2020_KHR","","",35,null],[18,"BEGIN_RANGE","","",35,null],[18,"END_RANGE","","",35,null],[18,"ITU_FULL_KHR","","",36,null],[18,"ITU_NARROW_KHR","","",36,null],[18,"BEGIN_RANGE","","",36,null],[18,"END_RANGE","","",36,null],[18,"BEGIN_RANGE","","",37,null],[18,"END_RANGE","","",37,null],[18,"MAX_PLANES","skia_safe","",265,null],[11,"new","","Initializes a [YUVABackendTextureInfo] to describe a set â€¦",265,[[["yuvainfo",6],["surfaceorigin",4],["mipmapped",4]],["option",4]]],[11,"yuva_info","","",265,[[],["yuvainfo",6]]],[11,"yuv_color_space","","",265,[[],["yuvcolorspace",4]]],[11,"mipmapped","","",265,[[],["mipmapped",4]]],[11,"texture_origin","","",265,[[],["surfaceorigin",4]]],[11,"num_planes","","The number of [crate::Pixmap] planes.",265,[[],["usize",15]]],[11,"plane_format","","Format of the ith plane, or [None] if i >= [â€¦",265,[[["usize",15]],[["option",4],["backendformat",6]]]],[18,"MAX_PLANES","skia_safe::gpu","",310,null],[11,"new","","Initializes a [YUVABackendTextureInfo] to describe a set â€¦",310,[[["yuvainfo",6],["surfaceorigin",4],["mipmapped",4]],["option",4]]],[11,"yuva_info","","",310,[[],["yuvainfo",6]]],[11,"yuv_color_space","","",310,[[],["yuvcolorspace",4]]],[11,"mipmapped","","",310,[[],["mipmapped",4]]],[11,"texture_origin","","",310,[[],["surfaceorigin",4]]],[11,"num_planes","","The number of [crate::Pixmap] planes.",310,[[],["usize",15]]],[11,"plane_format","","Format of the ith plane, or [None] if i >= [â€¦",310,[[["usize",15]],[["option",4],["backendformat",6]]]],[11,"new","skia_safe","",265,[[["yuvainfo",6],["surfaceorigin",4]],["option",4]]],[11,"textures","","",265,[[]]],[11,"texture","","",265,[[["usize",15]],[["option",4],["backendtexture",6]]]],[11,"yuva_info","","",265,[[],["yuvainfo",6]]],[11,"num_planes","","",265,[[],["usize",15]]],[11,"texture_origin","","",265,[[],["surfaceorigin",4]]],[11,"new","skia_safe::gpu","",311,[[["yuvainfo",6],["surfaceorigin",4]],["option",4]]],[11,"textures","","",311,[[]]],[11,"texture","","",311,[[["usize",15]],[["option",4],["backendtexture",6]]]],[11,"yuva_info","","",311,[[],["yuvainfo",6]]],[11,"num_planes","","",311,[[],["usize",15]]],[11,"texture_origin","","",311,[[],["surfaceorigin",4]]],[11,"new","skia_safe","",265,[[]]],[11,"from_bytes","","",265,[[]]],[11,"write","","",265,[[],["bool",15]]],[11,"detach_as_data","","",265,[[],["data",6]]],[11,"detach_as_stream","","",265,[[],[["stream",3],["skstreamasset",3]]]],[11,"from_str","","",265,[[],[["handle",3],["skstring",3]]]],[11,"as_str","","",265,[[],["str",15]]],[11,"new","","Constructs a native Strings array from a slice of â€¦",265,[[["vec",3],["handle",3]]]],[11,"is_empty","","",265,[[],["bool",15]]],[11,"len","","",265,[[],["usize",15]]],[11,"new","","",267,[[]]],[11,"font_managers_count","","",267,[[],["usize",15]]],[11,"set_asset_font_manager","","",267,[[]]],[11,"set_dynamic_font_manager","","",267,[[]]],[11,"set_test_font_manager","","",267,[[]]],[11,"set_default_font_manager","","",267,[[]]],[11,"fallback_manager","","",267,[[],[["fontmgr",6],["option",4]]]],[11,"find_typefaces","","",267,[[["fontstyle",3]],[["typeface",6],["vec",3]]]],[11,"default_fallback_char","","",267,[[["unichar",6],["fontstyle",3]],[["option",4],["typeface",6]]]],[11,"default_fallback","","",267,[[],[["option",4],["typeface",6]]]],[11,"disable_font_fallback","","",267,[[]]],[11,"enable_font_fallback","","",267,[[]]],[11,"font_fallback_enabled","","",267,[[],["bool",15]]],[11,"paragraph_cache","","",267,[[],["paragraphcache",6]]],[11,"paragraph_cache_mut","","",267,[[],["paragraphcache",6]]],[11,"clear_caches","","",267,[[]]],[11,"new","","",265,[[]]],[11,"into_vec","","",265,[[],[["typeface",6],["vec",3]]]],[11,"new","skia_safe::textlayout","",154,[[["textstyle",6]]]],[11,"get_style_metrics_count","","Returns the number of style metrics in the given index â€¦",155,[[["usize",15],["range",3]],["usize",15]]],[11,"get_style_metrics","","Returns indices and references to style metrics in the â€¦",155,[[["usize",15],["range",3]],["vec",3]]],[11,"max_width","skia_safe","",266,[[],["scalar",6]]],[11,"height","","",266,[[],["scalar",6]]],[11,"min_intrinsic_width","","",266,[[],["scalar",6]]],[11,"max_intrinsic_width","","",266,[[],["scalar",6]]],[11,"alphabetic_baseline","","",266,[[],["scalar",6]]],[11,"ideographic_baseline","","",266,[[],["scalar",6]]],[11,"longest_line","","",266,[[],["scalar",6]]],[11,"did_exceed_max_lines","","",266,[[],["bool",15]]],[11,"layout","","",266,[[["scalar",6]]]],[11,"paint","","",266,[[["canvas",3]]]],[11,"get_rects_for_range","","",266,[[["usize",15],["range",3],["rectheightstyle",4],["rectwidthstyle",4]],["textboxes",6]]],[11,"get_rects_for_placeholders","","",266,[[],["textboxes",6]]],[11,"get_glyph_position_at_coordinate","","",266,[[],["positionwithaffinity",3]]],[11,"get_word_boundary","","",266,[[["u32",15]],[["usize",15],["range",3]]]],[11,"get_line_metrics","","",266,[[],["linemetricsvector",6]]],[11,"line_number","","",266,[[],["usize",15]]],[11,"mark_dirty","","",266,[[]]],[11,"iter","","",265,[[]]],[11,"as_slice","","",265,[[]]],[11,"iter","","",268,[[]]],[11,"as_slice","","",268,[[]]],[11,"push_style","","",266,[[["textstyle",6]]]],[11,"pop","","",266,[[]]],[11,"peek_style","","",266,[[],["textstyle",6]]],[11,"add_text","","",266,[[]]],[11,"add_placeholder","","",266,[[["placeholderstyle",3]]]],[11,"set_paragraph_style","","",266,[[["paragraphstyle",6]]]],[11,"build","","",266,[[],["paragraph",6]]],[11,"new","","",266,[[["paragraphstyle",6]]]],[11,"new","","",265,[[],["paragraphcache",6]]],[11,"abandon","","",265,[[]]],[11,"reset","","",265,[[]]],[11,"print_statistics","","",265,[[]]],[11,"turn_on","","",265,[[["bool",15]]]],[11,"count","","",265,[[],["i32",15]]],[11,"new","","",265,[[]]],[11,"font_families","","",265,[[],["fontfamilies",3]]],[11,"set_font_families","","",265,[[]]],[11,"font_style","","",265,[[],["fontstyle",3]]],[11,"set_font_style","","",265,[[["fontstyle",3]]]],[11,"font_size","","",265,[[],["scalar",6]]],[11,"set_font_size","","",265,[[["scalar",6]]]],[11,"set_height","","",265,[[["scalar",6]]]],[11,"height","","",265,[[],["scalar",6]]],[11,"set_leading","","",265,[[["scalar",6]]]],[11,"leading","","",265,[[],["scalar",6]]],[11,"strut_enabled","","",265,[[],["bool",15]]],[11,"set_strut_enabled","","",265,[[["bool",15]]]],[11,"force_strut_height","","",265,[[],["bool",15]]],[11,"set_force_strut_height","","",265,[[["bool",15]]]],[11,"new","","",266,[[]]],[11,"strut_style","","",266,[[],["strutstyle",6]]],[11,"set_strut_style","","",266,[[["strutstyle",6]]]],[11,"text_style","","",266,[[],["textstyle",6]]],[11,"set_text_style","","",266,[[["textstyle",6]]]],[11,"text_direction","","",266,[[],["textdirection",4]]],[11,"set_text_direction","","",266,[[["textdirection",4]]]],[11,"text_align","","",266,[[],["textalign",4]]],[11,"set_text_align","","",266,[[["textalign",4]]]],[11,"max_lines","","",266,[[],[["usize",15],["option",4]]]],[11,"set_max_lines","","",266,[[]]],[11,"ellipsis","","",266,[[],["str",15]]],[11,"set_ellipsis","","",266,[[]]],[11,"height","","",266,[[],["scalar",6]]],[11,"set_height","","",266,[[["scalar",6]]]],[11,"text_height_behavior","","",266,[[],["textheightbehavior",4]]],[11,"set_text_height_behavior","","",266,[[["textheightbehavior",4]]]],[11,"unlimited_lines","","",266,[[],["bool",15]]],[11,"ellipsized","","",266,[[],["bool",15]]],[11,"effective_align","","",266,[[],["textalign",4]]],[11,"hinting_is_on","","",266,[[],["bool",15]]],[11,"turn_hinting_off","","",266,[[]]],[11,"draw_options","","",266,[[],["drawoptions",4]]],[11,"set_draw_options","","",266,[[["drawoptions",4]]]],[11,"new","skia_safe::textlayout","",156,[[["f64",15]]]],[11,"has_shadow","","",156,[[],["bool",15]]],[18,"NO_DECORATION","","",262,null],[18,"UNDERLINE","","",262,null],[18,"OVERLINE","","",262,null],[18,"LINE_THROUGH","","",262,null],[11,"empty","","Returns an empty set of flags",262,[[],["textdecoration",3]]],[11,"all","","Returns the set containing all flags.",262,[[],["textdecoration",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",262,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that â€¦",262,[[["u32",15]],[["option",4],["textdecoration",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any â€¦",262,[[["u32",15]],["textdecoration",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving allâ€¦",262,[[["u32",15]],["textdecoration",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",262,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",262,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦",262,[[["textdecoration",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained â€¦",262,[[["textdecoration",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",262,[[["textdecoration",3]]]],[11,"remove","","Removes the specified flags in-place.",262,[[["textdecoration",3]]]],[11,"toggle","","Toggles the specified flags in-place.",262,[[["textdecoration",3]]]],[11,"set","","Inserts or removes the specified flags depending on the â€¦",262,[[["bool",15],["textdecoration",3]]]],[18,"ALL","","",262,null],[11,"name","skia_safe","",265,[[],["str",15]]],[11,"value","","",265,[[],["i32",15]]],[11,"new","skia_safe::textlayout","",162,[[["placeholderalignment",4],["textbaseline",4],["scalar",6]]]],[11,"new","skia_safe","",265,[[]]],[11,"to_placeholder","","",265,[[]]],[11,"equals","","",265,[[["textstyle",6]],["bool",15]]],[11,"equals_by_fonts","","",265,[[["textstyle",6]],["bool",15]]],[11,"match_one_attribute","","",265,[[["styletype",4],["textstyle",6]],["bool",15]]],[11,"color","","",265,[[],["color",3]]],[11,"set_color","","",265,[[]]],[11,"foreground","","",265,[[],[["paint",6],["option",4]]]],[11,"set_foreground_color","","",265,[[]]],[11,"background","","",265,[[],[["paint",6],["option",4]]]],[11,"set_background_color","","",265,[[]]],[11,"decoration","","",265,[[],["decoration",3]]],[11,"decoration_mut","","",265,[[],["decoration",3]]],[11,"font_style","","",265,[[],["fontstyle",3]]],[11,"set_font_style","","",265,[[["fontstyle",3]]]],[11,"shadows","","",265,[[]]],[11,"add_shadow","","",265,[[["textshadow",3]]]],[11,"reset_shadows","","",265,[[]]],[11,"font_features","","",265,[[]]],[11,"add_font_feature","","",265,[[["i32",15]]]],[11,"reset_font_features","","",265,[[]]],[11,"font_size","","",265,[[],["scalar",6]]],[11,"set_font_size","","",265,[[["scalar",6]]]],[11,"font_families","","",265,[[],["fontfamilies",3]]],[11,"set_font_families","","",265,[[]]],[11,"set_height","","",265,[[["scalar",6]]]],[11,"height","","",265,[[],["scalar",6]]],[11,"set_height_override","","",265,[[["bool",15]]]],[11,"height_override","","",265,[[],["bool",15]]],[11,"set_letter_spacing","","",265,[[["scalar",6]]]],[11,"letter_spacing","","",265,[[],["scalar",6]]],[11,"set_word_spacing","","",265,[[["scalar",6]]]],[11,"word_spacing","","",265,[[],["scalar",6]]],[11,"typeface","","",265,[[],[["option",4],["typeface",6]]]],[11,"set_typeface","","",265,[[]]],[11,"locale","","",265,[[],["str",15]]],[11,"set_locale","","",265,[[]]],[11,"text_baseline","","",265,[[],["textbaseline",4]]],[11,"set_text_baseline","","",265,[[["textbaseline",4]]]],[11,"font_metrics","","",265,[[],["fontmetrics",3]]],[11,"is_placeholder","","",265,[[],["bool",15]]],[11,"set_placeholder","","",265,[[]]],[11,"new","skia_safe::textlayout","",163,[[["textrange",6],["textstyle",6]]]],[11,"add","","",163,[[["textrange",6]]]],[11,"new","","",164,[[["usize",15],["range",3],["placeholderstyle",3],["blockrange",6],["textrange",6],["textstyle",6]]]],[11,"new","skia_safe","",267,[[]]],[11,"family_name","","",267,[[],["str",15]]],[11,"alias","","",267,[[],["str",15]]],[11,"append_typeface","","",267,[[["typeface",6]]]],[11,"new","","",267,[[]]],[11,"register_typeface","","",267,[[["option",4],["typeface",6]],["usize",15]]],[11,"iter","skia_safe::textlayout","",263,[[]]],[11,"new","skia_safe::shaper::run_handler","",138,[[]]],[11,"new_primitive","skia_safe","",266,[[]]],[11,"new_shaper_driven_wrapper","","",266,[[],["option",4]]],[11,"new_shape_then_wrap","","",266,[[],["option",4]]],[11,"new_shape_dont_wrap_or_reorder","","",266,[[],["option",4]]],[11,"purge_harf_buzz_cache","","",266,[[]]],[11,"new_core_text","","",266,[[],["option",4]]],[11,"new","","",266,[[]]],[11,"purge_caches","","",266,[[]]],[11,"new_primitive","skia_safe::shaper","",292,[[]]],[11,"new_shaper_driven_wrapper","","",292,[[],["option",4]]],[11,"new_shape_then_wrap","","",292,[[],["option",4]]],[11,"new_shape_dont_wrap_or_reorder","","",292,[[],["option",4]]],[11,"purge_harf_buzz_cache","","",292,[[]]],[11,"new_core_text","","",292,[[],["option",4]]],[11,"new","","",292,[[]]],[11,"purge_caches","","",292,[[]]],[11,"current_font","skia_safe","",266,[[],["font",6]]],[11,"new_font_mgr_run_iterator","","",266,[[["str",15],["font",6]],[["borrows",3],["fontruniterator",6]]]],[11,"new_trivial_font_run_iterator","","",266,[[["usize",15],["font",6]],["fontruniterator",6]]],[11,"current_level","","",266,[[],["u8",15]]],[11,"new_bidi_run_iterator","","",266,[[["u8",15],["str",15]],[["option",4],["borrows",3]]]],[11,"new_icu_bidi_run_iterator","","",266,[[["u8",15],["str",15]],[["option",4],["borrows",3]]]],[11,"new_trivial_bidi_run_iterator","","",266,[[["usize",15],["u8",15]],["bidiruniterator",6]]],[11,"current_script","","",266,[[],["fourbytetag",3]]],[11,"new_script_run_iterator","","",266,[[["fourbytetag",3],["str",15]],[["borrows",3],["scriptruniterator",6]]]],[11,"new_hb_icu_script_run_iterator","","",266,[[["str",15]],[["borrows",3],["scriptruniterator",6]]]],[11,"new_trivial_script_run_iterator","","",266,[[["usize",15],["u8",15]],["scriptruniterator",6]]],[11,"current_language","","",266,[[],["cstr",3]]],[11,"new_std_language_run_iterator","","",266,[[["str",15]],[["option",4],["languageruniterator",6]]]],[11,"new_trivial_language_run_iterator","","",266,[[],["languageruniterator",6]]],[11,"shape","","",266,[[["font",6],["bool",15],["scalar",6],["str",15]]]],[11,"shape_with_iterators","","",266,[[["fontruniterator",6],["bidiruniterator",6],["languageruniterator",6],["scriptruniterator",6],["scalar",6],["str",15]]]],[11,"shape_with_iterators_and_features","","",266,[[["fontruniterator",6],["bidiruniterator",6],["languageruniterator",6],["scriptruniterator",6],["scalar",6],["str",15]]]],[11,"new","skia_safe::shaper","",264,[[["str",15]],["textblobbuilderrunhandler",3]]],[11,"make_blob","","",264,[[],[["textblob",6],["option",4]]]],[11,"end_point","","",264,[[],["point",3]]],[11,"shape_text_blob","skia_safe","",266,[[["font",6],["bool",15],["scalar",6],["str",15]],["option",4]]],[11,"add","","",265,[[["path",6],["pathop",4]]]],[11,"resolve","","",265,[[],[["option",4],["path",6]]]],[11,"op","","",265,[[["path",6],["pathop",4]],["option",4]]],[11,"simplify","","",265,[[],["option",4]]],[11,"tight_bounds","","",265,[[],[["option",4],["rect",3]]]],[11,"as_winding","","",265,[[],[["option",4],["path",6]]]],[11,"release","","Notify that the borrowed dependency is not referred to â€¦",268,[[]]],[11,"unwrap","","",269,[[]]],[11,"reset","skia_safe::utils","",58,[[]]],[11,"transform","","",58,[[["m44",3]]]],[11,"dot_with","","",58,[[],["scalar",6]]],[11,"reset","","",59,[[]]],[11,"update","","",59,[[]]],[11,"patch_to_matrix","","",59,[[["patch3d",3]],["matrix",3]]],[11,"new","skia_safe","",266,[[]]],[11,"save","","",266,[[]]],[11,"restore","","",266,[[]]],[11,"translate","","",266,[[]]],[11,"rotate_x","","",266,[[["scalar",6]]]],[11,"rotate_y","","",266,[[["scalar",6]]]],[11,"rotate_z","","",266,[[["scalar",6]]]],[11,"matrix","","",266,[[],["matrix",3]]],[11,"apply_to_canvas","","",266,[[["canvas",3]]]],[11,"dot_with_normal","","",266,[[],["scalar",6]]],[11,"new","","",265,[[]]],[11,"set_glyph","","",265,[[["glyphid",6],["f32",15]]]],[11,"set_metrics","","",265,[[["fontmetrics",3]]]],[11,"set_font_style","","",265,[[["fontstyle",3]]]],[11,"detach","","",265,[[],[["option",4],["typeface",6]]]],[11,"duration","","",265,[[],["option",4]]],[11,"set_mirror","","",265,[[["bool",15]]]],[11,"set_repeat_count","","",265,[[["scalar",6]]]],[11,"set_reset","","",265,[[["bool",15]]]],[11,"time_to_t","","",265,[[["duration",3]]]],[11,"new","","",265,[[["usize",15]]]],[11,"reset","","",265,[[["usize",15]]]],[11,"set_key_frame","","",265,[[["usize",15],["duration",3]],["bool",15]]],[11,"time_to_values","","",265,[[["duration",3]],["result",4]]],[11,"elem_count","","",265,[[],["usize",15]]],[11,"new_null","skia_safe::canvas","",210,[[],["ownedcanvas",3]]],[11,"from_svg","skia_safe","",265,[[],[["option",4],["path",6]]]],[11,"to_svg","","",265,[[],["string",3]]],[11,"draw_shadow","skia_safe::canvas","",210,[[["path",6],["scalar",6]]]],[11,"draw_str_align","","",210,[[["font",6],["align",4],["paint",6]]]],[11,"from_str","skia_safe","",265,[[["font",6]]]],[11,"from_str","skia_safe::path","",312,[[["font",6]]]]],"p":[[4,"CodecResult"],[4,"SelectionPolicy"],[4,"ZeroInitialized"],[3,"Options"],[4,"ScanlineOrder"],[4,"EncodedOrigin"],[4,"Enable"],[4,"ShaderCacheStrategy"],[3,"ContextOptions"],[3,"BackendContext"],[3,"TextureResourceInfo"],[3,"FenceInfo"],[3,"ID3D12CommandQueue"],[3,"ID3D12Device"],[3,"ID3D12Resource"],[3,"IDXGIAdapter1"],[4,"Format"],[4,"Standard"],[3,"TextureInfo"],[3,"FramebufferInfo"],[3,"Alloc"],[3,"YcbcrConversionInfo"],[3,"ImageInfo"],[4,"GetProcOf"],[3,"DrawableInfo"],[4,"ChromaLocation"],[3,"Extent2D"],[4,"Filter"],[4,"Format"],[4,"ImageLayout"],[4,"ImageTiling"],[3,"Offset2D"],[3,"PhysicalDeviceFeatures"],[3,"PhysicalDeviceFeatures2"],[3,"Rect2D"],[4,"SamplerYcbcrModelConversion"],[4,"SamplerYcbcrRange"],[4,"SharingMode"],[3,"Version"],[3,"ResourceCacheLimits"],[3,"ResourceCacheUsage"],[3,"DriverBugWorkarounds"],[4,"BackendAPI"],[4,"MipMapped"],[4,"Renderable"],[4,"Protected"],[4,"SurfaceOrigin"],[4,"SemaphoresSubmitted"],[8,"PointerWrapper"],[8,"ValueWrapper"],[8,"NativeTransmutableWrapper"],[8,"RefWrapper"],[3,"Flags"],[3,"Canvas"],[4,"Result"],[3,"TimeToT"],[3,"ShadowFlags"],[4,"Align"],[3,"Patch3D"],[3,"Camera3D"],[4,"TypefaceGlyph"],[13,"Image"],[3,"Lattice"],[4,"RectType"],[4,"PointMode"],[4,"SrcRectConstraint"],[3,"TopLayerPixels"],[8,"SetMatrix"],[4,"Edging"],[3,"Coordinate"],[3,"VariationPosition"],[3,"FontMetrics"],[3,"Axis"],[4,"Slant"],[3,"CubicResampler"],[4,"BitDepth"],[4,"CachingHint"],[4,"CompressionType"],[4,"MapDirection"],[4,"ApplyPerspectiveClip"],[4,"ScaleToFit"],[4,"Member"],[4,"AffineMember"],[8,"SetPrePostScale"],[8,"MapScalars"],[8,"Map2"],[4,"PaintStyle"],[4,"PaintCap"],[4,"PaintJoin"],[4,"PathDirection"],[4,"PathFillType"],[4,"ArcSize"],[4,"AddPathMode"],[4,"Verb"],[3,"PointData"],[3,"DashInfo"],[4,"PathVerb"],[4,"RegionOp"],[8,"Combine"],[8,"Intersects"],[4,"Type"],[4,"Corner"],[4,"FilterMode"],[4,"MipmapMode"],[3,"FilterOptions"],[4,"MediumBehavior"],[3,"SamplingOptions"],[4,"GradientTypeInternal"],[4,"GradientType"],[3,"GradientInfo"],[4,"InitStyle"],[4,"Style"],[4,"ContentChangeMode"],[4,"BackendHandleAccess"],[4,"BackendSurfaceAccess"],[4,"SerializeBehavior"],[3,"LocalizedString"],[4,"VertexMode"],[4,"AttributeType"],[4,"AttributeUsage"],[3,"Attribute"],[4,"PlaneConfig"],[4,"Subsampling"],[4,"Siting"],[4,"DataType"],[4,"DocumentStructureType"],[3,"Metadata"],[4,"Style"],[4,"GradientShaderColors"],[4,"InvertStyle"],[3,"HighContrastConfig"],[4,"Dither"],[3,"ArithmeticFPInputs"],[4,"Type"],[3,"Options"],[4,"Mode"],[8,"RunHandler"],[3,"RunInfo"],[3,"Buffer"],[3,"Feature"],[8,"RunIterator"],[8,"AsRunHandler"],[8,"AsNativeRunHandler"],[4,"Affinity"],[4,"RectHeightStyle"],[4,"RectWidthStyle"],[4,"TextAlign"],[4,"TextDirection"],[3,"PositionWithAffinity"],[3,"TextBox"],[8,"RangeExtensions"],[4,"TextBaseline"],[4,"TextHeightBehavior"],[4,"DrawOptions"],[3,"StyleMetrics"],[3,"LineMetrics"],[3,"TextShadow"],[4,"TextDecorationStyle"],[4,"TextDecorationMode"],[4,"StyleType"],[3,"Decoration"],[4,"PlaceholderAlignment"],[3,"PlaceholderStyle"],[3,"Block"],[3,"Placeholder"],[8,"ConditionallySend"],[4,"BlendMode"],[4,"BlendModeCoeff"],[4,"BlurStyle"],[4,"ClipOp"],[3,"RGB"],[3,"HSV"],[4,"ColorChannel"],[3,"Color4f"],[3,"ColorSpaceTransferFn"],[3,"XYZD50Hash"],[4,"CoverageMode"],[4,"EncodedImageFormat"],[4,"FilterQuality"],[8,"Flattenable"],[8,"NativeFlattenable"],[4,"TextEncoding"],[4,"FontHinting"],[4,"AlphaType"],[4,"ColorType"],[4,"YUVColorSpace"],[3,"V2"],[3,"V3"],[3,"V4"],[8,"Pixel"],[3,"IVector"],[3,"Point"],[3,"Point3"],[3,"IRect"],[3,"Rect"],[8,"RoundOut"],[3,"RSXform"],[8,"Scalar"],[8,"Scalars"],[3,"ISize"],[3,"Size"],[4,"PixelGeometry"],[3,"TextBlobRun"],[4,"TileMode"],[3,"DateTime"],[8,"Contains"],[8,"QuickReject"],[4,"PathOp"],[3,"SaveLayerFlags"],[3,"SaveLayerRec"],[3,"Canvas"],[3,"OwnedCanvas"],[3,"AutoRestoredCanvas"],[4,"AutoCanvasRestore"],[3,"Color"],[3,"ColorChannelFlag"],[3,"Flags"],[3,"ColorSpacePrimaries"],[3,"MatrixFlags"],[3,"CubicMap"],[3,"Iter"],[3,"Open"],[3,"OnPage"],[3,"Document"],[3,"FontArguments"],[3,"Flags"],[3,"Weight"],[3,"Width"],[3,"FontStyle"],[3,"M44"],[3,"TypeMask"],[3,"Matrix"],[3,"Vector4"],[3,"TypeMask"],[3,"Matrix44"],[3,"Iter"],[3,"RawIter"],[3,"PointFlags"],[3,"MatrixFlags"],[3,"SegmentMask"],[3,"Iterator"],[3,"Cliperator"],[3,"Spanerator"],[3,"RRect"],[3,"SurfacePropsFlags"],[3,"SurfaceProps"],[3,"FourByteTag"],[3,"Budgeted"],[3,"Bone"],[3,"BuilderFlags"],[3,"StructureElementNode"],[3,"Flags"],[3,"CropRect"],[3,"Flags"],[3,"cp"],[3,"BackendState"],[3,"FlushInfo"],[3,"ExtensionFlags"],[3,"FeatureFlags"],[3,"BackendContext"],[3,"AllocFlag"],[3,"NullHandle"],[3,"TextDecoration"],[3,"FontFamilies"],[3,"TextBlobBuilderRunHandler"],[3,"Handle"],[3,"RefHandle"],[3,"RCHandle"],[3,"Borrows"],[3,"Sendable"],[6,"Region"],[6,"scalar"],[6,"TextBoxes"],[6,"Buffer"],[6,"CommandBuffer"],[6,"Device"],[6,"DeviceMemory"],[6,"Instance"],[6,"PhysicalDevice"],[6,"Image"],[6,"Queue"],[6,"RenderPass"],[6,"FontMgr"],[6,"PathBuilder"],[6,"ParagraphStyle"],[6,"Bitmap"],[6,"Font"],[6,"Pixmap"],[6,"YUVAInfo"],[6,"SupportedDataTypes"],[6,"AttributeList"],[6,"BackendSurfaceMutableState"],[6,"Shaper"],[6,"View3D"],[6,"DataTable"],[6,"Codec"],[6,"ColorSpace"],[6,"TextBlobBuilder"],[6,"YUVAPixmapInfo"],[6,"YUVAPixmaps"],[6,"ImageFilter"],[6,"Paint"],[6,"Picture"],[6,"ColorFilter"],[6,"Uniform"],[6,"Varying"],[6,"RuntimeEffect"],[6,"BackendTexture"],[6,"BackendRenderTarget"],[6,"Interface"],[6,"YUVABackendTextureInfo"],[6,"YUVABackendTextures"],[6,"Path"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);