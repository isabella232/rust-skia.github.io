var searchIndex = JSON.parse('{\
"skia_safe":{"doc":"","i":[[4,"CodecResult","skia_safe","",null,null],[13,"Success","","",0,null],[13,"IncompleteInput","","",0,null],[13,"ErrorInInput","","",0,null],[13,"InvalidConversion","","",0,null],[13,"InvalidScale","","",0,null],[13,"InvalidParameters","","",0,null],[13,"InvalidInput","","",0,null],[13,"CouldNotRewind","","",0,null],[13,"InternalError","","",0,null],[13,"Unimplemented","","",0,null],[4,"BlendMode","","",null,null],[13,"Clear","","",1,null],[13,"Src","","",1,null],[13,"Dst","","",1,null],[13,"SrcOver","","",1,null],[13,"DstOver","","",1,null],[13,"SrcIn","","",1,null],[13,"DstIn","","",1,null],[13,"SrcOut","","",1,null],[13,"DstOut","","",1,null],[13,"SrcATop","","",1,null],[13,"DstATop","","",1,null],[13,"Xor","","",1,null],[13,"Plus","","",1,null],[13,"Modulate","","",1,null],[13,"Screen","","",1,null],[13,"Overlay","","",1,null],[13,"Darken","","",1,null],[13,"Lighten","","",1,null],[13,"ColorDodge","","",1,null],[13,"ColorBurn","","",1,null],[13,"HardLight","","",1,null],[13,"SoftLight","","",1,null],[13,"Difference","","",1,null],[13,"Exclusion","","",1,null],[13,"Multiply","","",1,null],[13,"Hue","","",1,null],[13,"Saturation","","",1,null],[13,"Color","","",1,null],[13,"Luminosity","","",1,null],[4,"BlendModeCoeff","","",null,null],[13,"Zero","","",2,null],[13,"One","","",2,null],[13,"SC","","",2,null],[13,"ISC","","",2,null],[13,"DC","","",2,null],[13,"IDC","","",2,null],[13,"SA","","",2,null],[13,"ISA","","",2,null],[13,"DA","","",2,null],[13,"IDA","","",2,null],[13,"CoeffCount","","",2,null],[4,"BlurStyle","","",null,null],[13,"Normal","","",3,null],[13,"Solid","","",3,null],[13,"Outer","","",3,null],[13,"Inner","","",3,null],[4,"ClipOp","","",null,null],[13,"Difference","","",4,null],[13,"Intersect","","",4,null],[13,"ExtraEnumNeedInternallyPleaseIgnoreWillGoAway2","","",4,null],[13,"ExtraEnumNeedInternallyPleaseIgnoreWillGoAway3","","",4,null],[13,"ExtraEnumNeedInternallyPleaseIgnoreWillGoAway4","","",4,null],[13,"ExtraEnumNeedInternallyPleaseIgnoreWillGoAway5","","",4,null],[4,"ColorChannel","","",null,null],[13,"R","","",5,null],[13,"G","","",5,null],[13,"B","","",5,null],[13,"A","","",5,null],[4,"CoverageMode","","",null,null],[13,"Union","","",6,null],[13,"Intersect","","",6,null],[13,"Difference","","",6,null],[13,"ReverseDifference","","",6,null],[13,"Xor","","",6,null],[4,"EncodedImageFormat","","",null,null],[13,"BMP","","",7,null],[13,"GIF","","",7,null],[13,"ICO","","",7,null],[13,"JPEG","","",7,null],[13,"PNG","","",7,null],[13,"WBMP","","",7,null],[13,"WEBP","","",7,null],[13,"PKM","","",7,null],[13,"KTX","","",7,null],[13,"ASTC","","",7,null],[13,"DNG","","",7,null],[13,"HEIF","","",7,null],[13,"AVIF","","",7,null],[4,"FilterQuality","","",null,null],[13,"None","","",8,null],[13,"Low","","",8,null],[13,"Medium","","",8,null],[13,"High","","",8,null],[4,"FontHinting","","",null,null],[13,"None","","",9,null],[13,"Slight","","",9,null],[13,"Normal","","",9,null],[13,"Full","","",9,null],[4,"AlphaType","","",null,null],[13,"Unknown","","",10,null],[13,"Opaque","","",10,null],[13,"Premul","","",10,null],[13,"Unpremul","","",10,null],[4,"YUVColorSpace","","",null,null],[13,"JPEG_Full","","",11,null],[13,"Rec601_Limited","","",11,null],[13,"Rec709_Full","","",11,null],[13,"Rec709_Limited","","",11,null],[13,"BT2020_8bit_Full","","",11,null],[13,"BT2020_8bit_Limited","","",11,null],[13,"BT2020_10bit_Full","","",11,null],[13,"BT2020_10bit_Limited","","",11,null],[13,"BT2020_12bit_Full","","",11,null],[13,"BT2020_12bit_Limited","","",11,null],[13,"Identity","","",11,null],[4,"PaintCap","","",null,null],[13,"Butt","","",12,null],[13,"Round","","",12,null],[13,"Square","","",12,null],[4,"PaintJoin","","",null,null],[13,"Miter","","",13,null],[13,"Round","","",13,null],[13,"Bevel","","",13,null],[4,"PaintStyle","","",null,null],[13,"Fill","","",14,null],[13,"Stroke","","",14,null],[13,"StrokeAndFill","","",14,null],[4,"PathFillType","","",null,null],[13,"Winding","","",15,null],[13,"EvenOdd","","",15,null],[13,"InverseWinding","","",15,null],[13,"InverseEvenOdd","","",15,null],[4,"PathDirection","","",null,null],[13,"CW","","",16,null],[13,"CCW","","",16,null],[4,"PathVerb","","",null,null],[13,"Move","","",17,null],[13,"Line","","",17,null],[13,"Quad","","",17,null],[13,"Conic","","",17,null],[13,"Cubic","","",17,null],[13,"Close","","",17,null],[4,"FilterMode","","",null,null],[13,"Nearest","","",18,null],[13,"Linear","","",18,null],[4,"MipmapMode","","",null,null],[13,"None","","",19,null],[13,"Nearest","","",19,null],[13,"Linear","","",19,null],[4,"TileMode","","",null,null],[13,"Clamp","","",20,null],[13,"Repeat","","",20,null],[13,"Mirror","","",20,null],[13,"Decal","","",20,null],[4,"PathOp","","",null,null],[13,"Difference","","",21,null],[13,"Intersect","","",21,null],[13,"Union","","",21,null],[13,"XOR","","",21,null],[13,"ReverseDifference","","",21,null],[0,"codec","","",null,null],[4,"Result","skia_safe::codec","",null,null],[13,"Success","","",0,null],[13,"IncompleteInput","","",0,null],[13,"ErrorInInput","","",0,null],[13,"InvalidConversion","","",0,null],[13,"InvalidScale","","",0,null],[13,"InvalidParameters","","",0,null],[13,"InvalidInput","","",0,null],[13,"CouldNotRewind","","",0,null],[13,"InternalError","","",0,null],[13,"Unimplemented","","",0,null],[4,"SelectionPolicy","","",null,null],[13,"PreferStillImage","","",22,null],[13,"PreferAnimation","","",22,null],[4,"ZeroInitialized","","",null,null],[13,"Yes","","",23,null],[13,"No","","",23,null],[5,"result_to_string","","",null,[[["result",4]]]],[3,"Options","","",null,null],[12,"zero_initialized","","",24,null],[12,"subset","","",24,null],[12,"frame_index","","",24,null],[12,"prior_frame","","",24,null],[6,"Codec","","",null,null],[4,"EncodedOrigin","","These values match the orientation â€¦",null,null],[13,"TopLeft","","Default",25,null],[13,"TopRight","","Reflected across y-axis",25,null],[13,"BottomRight","","Rotated 180",25,null],[13,"BottomLeft","","Reflected across x-axis",25,null],[13,"LeftTop","","Reflected across x-axis, Rotated 90 CCW",25,null],[13,"RightTop","","Rotated 90 CW",25,null],[13,"RightBottom","","Reflected across x-axis, Rotated 90 CW",25,null],[13,"LeftBottom","","Rotated 90 CCW",25,null],[0,"gpu","skia_safe","",null,null],[3,"DriverBugWorkarounds","skia_safe::gpu","",null,null],[12,"add_and_true_to_loop_condition","","",26,null],[12,"disable_blend_equation_advanced","","",26,null],[12,"disable_discard_framebuffer","","",26,null],[12,"disable_dual_source_blending_support","","",26,null],[12,"disable_texture_storage","","",26,null],[12,"disallow_large_instanced_draw","","",26,null],[12,"emulate_abs_int_function","","",26,null],[12,"flush_on_framebuffer_change","","",26,null],[12,"force_update_scissor_state_when_binding_fbo0","","",26,null],[12,"gl_clear_broken","","",26,null],[12,"max_fragment_uniform_vectors_32","","",26,null],[12,"max_msaa_sample_count_4","","",26,null],[12,"max_texture_size_limit_4096","","",26,null],[12,"pack_parameters_workaround_with_pack_buffer","","",26,null],[12,"remove_pow_with_constant_exponent","","",26,null],[12,"rewrite_do_while_loops","","",26,null],[12,"unbind_attachments_on_bound_render_fbo_delete","","",26,null],[12,"unfold_short_circuit_as_ternary_operation","","",26,null],[4,"BackendAPI","","",null,null],[13,"OpenGL","","",27,null],[13,"Vulkan","","",27,null],[13,"Metal","","",27,null],[13,"Direct3D","","",27,null],[13,"Dawn","","",27,null],[13,"Mock","","",27,null],[4,"Mipmapped","","",null,null],[13,"No","","",28,null],[13,"Yes","","",28,null],[4,"MipMapped","","",null,null],[13,"No","","",28,null],[13,"Yes","","",28,null],[4,"Renderable","","",null,null],[13,"No","","",29,null],[13,"Yes","","",29,null],[4,"Protected","","",null,null],[13,"No","","",30,null],[13,"Yes","","",30,null],[4,"SurfaceOrigin","","",null,null],[13,"TopLeft","","",31,null],[13,"BottomLeft","","",31,null],[4,"SemaphoresSubmitted","","",null,null],[13,"No","","",32,null],[13,"Yes","","",32,null],[0,"context_options","","",null,null],[4,"Enable","skia_safe::gpu::context_options","",null,null],[13,"No","","",33,null],[13,"Yes","","",33,null],[13,"Default","","",33,null],[4,"ShaderCacheStrategy","","",null,null],[13,"SkSL","","",34,null],[13,"BackendSource","","",34,null],[13,"BackendBinary","","",34,null],[3,"ContextOptions","","",null,null],[12,"suppress_prints","","",35,null],[12,"skip_gl_error_checks","","",35,null],[12,"max_texture_size_override","","",35,null],[12,"buffer_map_threshold","","",35,null],[12,"do_manual_mipmapping","","",35,null],[12,"disable_coverage_counting_paths","","",35,null],[12,"disable_distance_field_paths","","",35,null],[12,"allow_path_mask_caching","","",35,null],[12,"disable_gpu_yuv_conversion","","",35,null],[12,"glyph_cache_texture_maximum_bytes","","",35,null],[12,"min_distance_field_font_size","","",35,null],[12,"glyphs_as_paths_font_size","","",35,null],[12,"allow_multiple_glyph_cache_textures","","",35,null],[12,"avoid_stencil_buffers","","",35,null],[12,"sharpen_mipmapped_textures","","",35,null],[12,"use_draw_instead_of_clear","","",35,null],[12,"reduce_ops_task_splitting","","",35,null],[12,"prefer_external_images_over_es3","","",35,null],[12,"disable_driver_correctness_workarounds","","",35,null],[12,"runtime_program_cache_size","","",35,null],[12,"shader_cache_strategy","","",35,null],[12,"internal_multisample_count","","",35,null],[12,"max_cached_vulkan_secondary_command_buffers","","",35,null],[12,"suppress_mipmap_support","","",35,null],[12,"driver_bug_workarounds","","",35,null],[11,"new","","",35,[[]]],[0,"d3d","skia_safe::gpu","",null,null],[3,"cp","skia_safe::gpu::d3d","",null,null],[6,"ResourceStateEnum","","",null,null],[3,"ID3D12CommandQueue","","",null,null],[12,"lpVtbl","","",36,null],[3,"ID3D12Device","","",null,null],[12,"lpVtbl","","",37,null],[3,"ID3D12Resource","","",null,null],[12,"lpVtbl","","",38,null],[6,"D3D12_RESOURCE_STATES","","",null,null],[3,"IDXGIAdapter1","","",null,null],[12,"lpVtbl","","",39,null],[6,"DXGI_FORMAT","","",null,null],[3,"BackendContext","","",null,null],[12,"adapter","","",40,null],[12,"device","","",40,null],[12,"queue","","",40,null],[12,"memory_allocator","","",40,null],[12,"protected_context","","",40,null],[5,"safe_com_add_ref","","",null,[[]]],[5,"safe_com_release","","",null,[[]]],[6,"Alloc","","",null,null],[6,"MemoryAllocator","","",null,null],[3,"TextureResourceInfo","","",null,null],[12,"resource","","",41,null],[12,"alloc","","",41,null],[12,"resource_state","","",41,null],[12,"format","","",41,null],[12,"sample_count","","",41,null],[12,"level_count","","",41,null],[12,"sample_quality_pattern","","",41,null],[12,"protected","","",41,null],[3,"FenceInfo","","",null,null],[12,"fence","","",42,null],[12,"value","","",42,null],[0,"gl","skia_safe::gpu","",null,null],[4,"Format","skia_safe::gpu::gl","",null,null],[13,"Unknown","","",43,null],[13,"RGBA8","","",43,null],[13,"R8","","",43,null],[13,"ALPHA8","","",43,null],[13,"LUMINANCE8","","",43,null],[13,"LUMINANCE8_ALPHA8","","",43,null],[13,"BGRA8","","",43,null],[13,"RGB565","","",43,null],[13,"RGBA16F","","",43,null],[13,"R16F","","",43,null],[13,"RGB8","","",43,null],[13,"RG8","","",43,null],[13,"RGB10_A2","","",43,null],[13,"RGBA4","","",43,null],[13,"SRGB8_ALPHA8","","",43,null],[13,"COMPRESSED_ETC1_RGB8","","",43,null],[13,"COMPRESSED_RGB8_ETC2","","",43,null],[13,"COMPRESSED_RGB8_BC1","","",43,null],[13,"COMPRESSED_RGBA8_BC1","","",43,null],[13,"R16","","",43,null],[13,"RG16","","",43,null],[13,"RGBA16","","",43,null],[13,"RG16F","","",43,null],[13,"LUMINANCE16F","","",43,null],[13,"STENCIL_INDEX8","","",43,null],[13,"STENCIL_INDEX16","","",43,null],[13,"DEPTH24_STENCIL8","","",43,null],[4,"Standard","","",null,null],[13,"None","","",44,null],[13,"GL","","",44,null],[13,"GLES","","",44,null],[13,"WebGL","","",44,null],[6,"Enum","","",null,null],[6,"UInt","","",null,null],[6,"Extensions","","",null,null],[6,"Interface","","",null,null],[3,"TextureInfo","","",null,null],[12,"target","","",45,null],[12,"id","","",45,null],[12,"format","","",45,null],[3,"FramebufferInfo","","",null,null],[12,"fboid","","",46,null],[12,"format","","",46,null],[3,"BackendState","","",null,null],[0,"vk","skia_safe::gpu","",null,null],[6,"Bool32","skia_safe::gpu::vk","",null,null],[6,"Buffer","","",null,null],[4,"ChromaLocation","","",null,null],[13,"COSITED_EVEN","","",47,null],[13,"MIDPOINT","","",47,null],[13,"RANGE_SIZE","","",47,null],[13,"MAX_ENUM","","",47,null],[6,"CommandBuffer","","",null,null],[6,"Device","","",null,null],[6,"DeviceMemory","","",null,null],[6,"DeviceSize","","",null,null],[3,"Extent2D","","",null,null],[12,"width","","",48,null],[12,"height","","",48,null],[4,"Filter","","",null,null],[13,"NEAREST","","",49,null],[13,"LINEAR","","",49,null],[13,"CUBIC_IMG","","",49,null],[13,"RANGE_SIZE","","",49,null],[13,"MAX_ENUM","","",49,null],[6,"Flags","","",null,null],[4,"Format","","",null,null],[13,"UNDEFINED","","",50,null],[13,"R4G4_UNORM_PACK8","","",50,null],[13,"R4G4B4A4_UNORM_PACK16","","",50,null],[13,"B4G4R4A4_UNORM_PACK16","","",50,null],[13,"R5G6B5_UNORM_PACK16","","",50,null],[13,"B5G6R5_UNORM_PACK16","","",50,null],[13,"R5G5B5A1_UNORM_PACK16","","",50,null],[13,"B5G5R5A1_UNORM_PACK16","","",50,null],[13,"A1R5G5B5_UNORM_PACK16","","",50,null],[13,"R8_UNORM","","",50,null],[13,"R8_SNORM","","",50,null],[13,"R8_USCALED","","",50,null],[13,"R8_SSCALED","","",50,null],[13,"R8_UINT","","",50,null],[13,"R8_SINT","","",50,null],[13,"R8_SRGB","","",50,null],[13,"R8G8_UNORM","","",50,null],[13,"R8G8_SNORM","","",50,null],[13,"R8G8_USCALED","","",50,null],[13,"R8G8_SSCALED","","",50,null],[13,"R8G8_UINT","","",50,null],[13,"R8G8_SINT","","",50,null],[13,"R8G8_SRGB","","",50,null],[13,"R8G8B8_UNORM","","",50,null],[13,"R8G8B8_SNORM","","",50,null],[13,"R8G8B8_USCALED","","",50,null],[13,"R8G8B8_SSCALED","","",50,null],[13,"R8G8B8_UINT","","",50,null],[13,"R8G8B8_SINT","","",50,null],[13,"R8G8B8_SRGB","","",50,null],[13,"B8G8R8_UNORM","","",50,null],[13,"B8G8R8_SNORM","","",50,null],[13,"B8G8R8_USCALED","","",50,null],[13,"B8G8R8_SSCALED","","",50,null],[13,"B8G8R8_UINT","","",50,null],[13,"B8G8R8_SINT","","",50,null],[13,"B8G8R8_SRGB","","",50,null],[13,"R8G8B8A8_UNORM","","",50,null],[13,"R8G8B8A8_SNORM","","",50,null],[13,"R8G8B8A8_USCALED","","",50,null],[13,"R8G8B8A8_SSCALED","","",50,null],[13,"R8G8B8A8_UINT","","",50,null],[13,"R8G8B8A8_SINT","","",50,null],[13,"R8G8B8A8_SRGB","","",50,null],[13,"B8G8R8A8_UNORM","","",50,null],[13,"B8G8R8A8_SNORM","","",50,null],[13,"B8G8R8A8_USCALED","","",50,null],[13,"B8G8R8A8_SSCALED","","",50,null],[13,"B8G8R8A8_UINT","","",50,null],[13,"B8G8R8A8_SINT","","",50,null],[13,"B8G8R8A8_SRGB","","",50,null],[13,"A8B8G8R8_UNORM_PACK32","","",50,null],[13,"A8B8G8R8_SNORM_PACK32","","",50,null],[13,"A8B8G8R8_USCALED_PACK32","","",50,null],[13,"A8B8G8R8_SSCALED_PACK32","","",50,null],[13,"A8B8G8R8_UINT_PACK32","","",50,null],[13,"A8B8G8R8_SINT_PACK32","","",50,null],[13,"A8B8G8R8_SRGB_PACK32","","",50,null],[13,"A2R10G10B10_UNORM_PACK32","","",50,null],[13,"A2R10G10B10_SNORM_PACK32","","",50,null],[13,"A2R10G10B10_USCALED_PACK32","","",50,null],[13,"A2R10G10B10_SSCALED_PACK32","","",50,null],[13,"A2R10G10B10_UINT_PACK32","","",50,null],[13,"A2R10G10B10_SINT_PACK32","","",50,null],[13,"A2B10G10R10_UNORM_PACK32","","",50,null],[13,"A2B10G10R10_SNORM_PACK32","","",50,null],[13,"A2B10G10R10_USCALED_PACK32","","",50,null],[13,"A2B10G10R10_SSCALED_PACK32","","",50,null],[13,"A2B10G10R10_UINT_PACK32","","",50,null],[13,"A2B10G10R10_SINT_PACK32","","",50,null],[13,"R16_UNORM","","",50,null],[13,"R16_SNORM","","",50,null],[13,"R16_USCALED","","",50,null],[13,"R16_SSCALED","","",50,null],[13,"R16_UINT","","",50,null],[13,"R16_SINT","","",50,null],[13,"R16_SFLOAT","","",50,null],[13,"R16G16_UNORM","","",50,null],[13,"R16G16_SNORM","","",50,null],[13,"R16G16_USCALED","","",50,null],[13,"R16G16_SSCALED","","",50,null],[13,"R16G16_UINT","","",50,null],[13,"R16G16_SINT","","",50,null],[13,"R16G16_SFLOAT","","",50,null],[13,"R16G16B16_UNORM","","",50,null],[13,"R16G16B16_SNORM","","",50,null],[13,"R16G16B16_USCALED","","",50,null],[13,"R16G16B16_SSCALED","","",50,null],[13,"R16G16B16_UINT","","",50,null],[13,"R16G16B16_SINT","","",50,null],[13,"R16G16B16_SFLOAT","","",50,null],[13,"R16G16B16A16_UNORM","","",50,null],[13,"R16G16B16A16_SNORM","","",50,null],[13,"R16G16B16A16_USCALED","","",50,null],[13,"R16G16B16A16_SSCALED","","",50,null],[13,"R16G16B16A16_UINT","","",50,null],[13,"R16G16B16A16_SINT","","",50,null],[13,"R16G16B16A16_SFLOAT","","",50,null],[13,"R32_UINT","","",50,null],[13,"R32_SINT","","",50,null],[13,"R32_SFLOAT","","",50,null],[13,"R32G32_UINT","","",50,null],[13,"R32G32_SINT","","",50,null],[13,"R32G32_SFLOAT","","",50,null],[13,"R32G32B32_UINT","","",50,null],[13,"R32G32B32_SINT","","",50,null],[13,"R32G32B32_SFLOAT","","",50,null],[13,"R32G32B32A32_UINT","","",50,null],[13,"R32G32B32A32_SINT","","",50,null],[13,"R32G32B32A32_SFLOAT","","",50,null],[13,"R64_UINT","","",50,null],[13,"R64_SINT","","",50,null],[13,"R64_SFLOAT","","",50,null],[13,"R64G64_UINT","","",50,null],[13,"R64G64_SINT","","",50,null],[13,"R64G64_SFLOAT","","",50,null],[13,"R64G64B64_UINT","","",50,null],[13,"R64G64B64_SINT","","",50,null],[13,"R64G64B64_SFLOAT","","",50,null],[13,"R64G64B64A64_UINT","","",50,null],[13,"R64G64B64A64_SINT","","",50,null],[13,"R64G64B64A64_SFLOAT","","",50,null],[13,"B10G11R11_UFLOAT_PACK32","","",50,null],[13,"E5B9G9R9_UFLOAT_PACK32","","",50,null],[13,"D16_UNORM","","",50,null],[13,"X8_D24_UNORM_PACK32","","",50,null],[13,"D32_SFLOAT","","",50,null],[13,"S8_UINT","","",50,null],[13,"D16_UNORM_S8_UINT","","",50,null],[13,"D24_UNORM_S8_UINT","","",50,null],[13,"D32_SFLOAT_S8_UINT","","",50,null],[13,"BC1_RGB_UNORM_BLOCK","","",50,null],[13,"BC1_RGB_SRGB_BLOCK","","",50,null],[13,"BC1_RGBA_UNORM_BLOCK","","",50,null],[13,"BC1_RGBA_SRGB_BLOCK","","",50,null],[13,"BC2_UNORM_BLOCK","","",50,null],[13,"BC2_SRGB_BLOCK","","",50,null],[13,"BC3_UNORM_BLOCK","","",50,null],[13,"BC3_SRGB_BLOCK","","",50,null],[13,"BC4_UNORM_BLOCK","","",50,null],[13,"BC4_SNORM_BLOCK","","",50,null],[13,"BC5_UNORM_BLOCK","","",50,null],[13,"BC5_SNORM_BLOCK","","",50,null],[13,"BC6H_UFLOAT_BLOCK","","",50,null],[13,"BC6H_SFLOAT_BLOCK","","",50,null],[13,"BC7_UNORM_BLOCK","","",50,null],[13,"BC7_SRGB_BLOCK","","",50,null],[13,"ETC2_R8G8B8_UNORM_BLOCK","","",50,null],[13,"ETC2_R8G8B8_SRGB_BLOCK","","",50,null],[13,"ETC2_R8G8B8A1_UNORM_BLOCK","","",50,null],[13,"ETC2_R8G8B8A1_SRGB_BLOCK","","",50,null],[13,"ETC2_R8G8B8A8_UNORM_BLOCK","","",50,null],[13,"ETC2_R8G8B8A8_SRGB_BLOCK","","",50,null],[13,"EAC_R11_UNORM_BLOCK","","",50,null],[13,"EAC_R11_SNORM_BLOCK","","",50,null],[13,"EAC_R11G11_UNORM_BLOCK","","",50,null],[13,"EAC_R11G11_SNORM_BLOCK","","",50,null],[13,"ASTC_4x4_UNORM_BLOCK","","",50,null],[13,"ASTC_4x4_SRGB_BLOCK","","",50,null],[13,"ASTC_5x4_UNORM_BLOCK","","",50,null],[13,"ASTC_5x4_SRGB_BLOCK","","",50,null],[13,"ASTC_5x5_UNORM_BLOCK","","",50,null],[13,"ASTC_5x5_SRGB_BLOCK","","",50,null],[13,"ASTC_6x5_UNORM_BLOCK","","",50,null],[13,"ASTC_6x5_SRGB_BLOCK","","",50,null],[13,"ASTC_6x6_UNORM_BLOCK","","",50,null],[13,"ASTC_6x6_SRGB_BLOCK","","",50,null],[13,"ASTC_8x5_UNORM_BLOCK","","",50,null],[13,"ASTC_8x5_SRGB_BLOCK","","",50,null],[13,"ASTC_8x6_UNORM_BLOCK","","",50,null],[13,"ASTC_8x6_SRGB_BLOCK","","",50,null],[13,"ASTC_8x8_UNORM_BLOCK","","",50,null],[13,"ASTC_8x8_SRGB_BLOCK","","",50,null],[13,"ASTC_10x5_UNORM_BLOCK","","",50,null],[13,"ASTC_10x5_SRGB_BLOCK","","",50,null],[13,"ASTC_10x6_UNORM_BLOCK","","",50,null],[13,"ASTC_10x6_SRGB_BLOCK","","",50,null],[13,"ASTC_10x8_UNORM_BLOCK","","",50,null],[13,"ASTC_10x8_SRGB_BLOCK","","",50,null],[13,"ASTC_10x10_UNORM_BLOCK","","",50,null],[13,"ASTC_10x10_SRGB_BLOCK","","",50,null],[13,"ASTC_12x10_UNORM_BLOCK","","",50,null],[13,"ASTC_12x10_SRGB_BLOCK","","",50,null],[13,"ASTC_12x12_UNORM_BLOCK","","",50,null],[13,"ASTC_12x12_SRGB_BLOCK","","",50,null],[13,"G8B8G8R8_422_UNORM","","",50,null],[13,"B8G8R8G8_422_UNORM","","",50,null],[13,"G8_B8_R8_3PLANE_420_UNORM","","",50,null],[13,"G8_B8R8_2PLANE_420_UNORM","","",50,null],[13,"G8_B8_R8_3PLANE_422_UNORM","","",50,null],[13,"G8_B8R8_2PLANE_422_UNORM","","",50,null],[13,"G8_B8_R8_3PLANE_444_UNORM","","",50,null],[13,"R10X6_UNORM_PACK16","","",50,null],[13,"R10X6G10X6_UNORM_2PACK16","","",50,null],[13,"R10X6G10X6B10X6A10X6_UNORM_4PACK16","","",50,null],[13,"G10X6B10X6G10X6R10X6_422_UNORM_4PACK16","","",50,null],[13,"B10X6G10X6R10X6G10X6_422_UNORM_4PACK16","","",50,null],[13,"G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16","","",50,null],[13,"G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16","","",50,null],[13,"G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16","","",50,null],[13,"G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16","","",50,null],[13,"G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16","","",50,null],[13,"R12X4_UNORM_PACK16","","",50,null],[13,"R12X4G12X4_UNORM_2PACK16","","",50,null],[13,"R12X4G12X4B12X4A12X4_UNORM_4PACK16","","",50,null],[13,"G12X4B12X4G12X4R12X4_422_UNORM_4PACK16","","",50,null],[13,"B12X4G12X4R12X4G12X4_422_UNORM_4PACK16","","",50,null],[13,"G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16","","",50,null],[13,"G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16","","",50,null],[13,"G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16","","",50,null],[13,"G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16","","",50,null],[13,"G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16","","",50,null],[13,"G16B16G16R16_422_UNORM","","",50,null],[13,"B16G16R16G16_422_UNORM","","",50,null],[13,"G16_B16_R16_3PLANE_420_UNORM","","",50,null],[13,"G16_B16R16_2PLANE_420_UNORM","","",50,null],[13,"G16_B16_R16_3PLANE_422_UNORM","","",50,null],[13,"G16_B16R16_2PLANE_422_UNORM","","",50,null],[13,"G16_B16_R16_3PLANE_444_UNORM","","",50,null],[13,"PVRTC1_2BPP_UNORM_BLOCK_IMG","","",50,null],[13,"PVRTC1_4BPP_UNORM_BLOCK_IMG","","",50,null],[13,"PVRTC2_2BPP_UNORM_BLOCK_IMG","","",50,null],[13,"PVRTC2_4BPP_UNORM_BLOCK_IMG","","",50,null],[13,"PVRTC1_2BPP_SRGB_BLOCK_IMG","","",50,null],[13,"PVRTC1_4BPP_SRGB_BLOCK_IMG","","",50,null],[13,"PVRTC2_2BPP_SRGB_BLOCK_IMG","","",50,null],[13,"PVRTC2_4BPP_SRGB_BLOCK_IMG","","",50,null],[13,"RANGE_SIZE","","",50,null],[13,"MAX_ENUM","","",50,null],[6,"FormatFeatureFlags","","",null,null],[6,"Image","","",null,null],[4,"ImageLayout","","",null,null],[13,"UNDEFINED","","",51,null],[13,"GENERAL","","",51,null],[13,"COLOR_ATTACHMENT_OPTIMAL","","",51,null],[13,"DEPTH_STENCIL_ATTACHMENT_OPTIMAL","","",51,null],[13,"DEPTH_STENCIL_READ_ONLY_OPTIMAL","","",51,null],[13,"SHADER_READ_ONLY_OPTIMAL","","",51,null],[13,"TRANSFER_SRC_OPTIMAL","","",51,null],[13,"TRANSFER_DST_OPTIMAL","","",51,null],[13,"PREINITIALIZED","","",51,null],[13,"DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL","","",51,null],[13,"DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL","","",51,null],[13,"PRESENT_SRC_KHR","","",51,null],[13,"SHARED_PRESENT_KHR","","",51,null],[13,"RANGE_SIZE","","",51,null],[13,"MAX_ENUM","","",51,null],[4,"ImageTiling","","",null,null],[13,"OPTIMAL","","",52,null],[13,"LINEAR","","",52,null],[13,"RANGE_SIZE","","",52,null],[13,"MAX_ENUM","","",52,null],[6,"ImageUsageFlags","","",null,null],[6,"Instance","","",null,null],[3,"Offset2D","","",null,null],[12,"x","","",53,null],[12,"y","","",53,null],[6,"PhysicalDevice","","",null,null],[3,"PhysicalDeviceFeatures","","",null,null],[12,"_bindgen_opaque_blob","","",54,null],[3,"PhysicalDeviceFeatures2","","",null,null],[12,"_bindgen_opaque_blob","","",55,null],[6,"Queue","","",null,null],[3,"Rect2D","","",null,null],[12,"offset","","",56,null],[12,"extent","","",56,null],[6,"RenderPass","","",null,null],[4,"SamplerYcbcrModelConversion","","",null,null],[13,"RGB_IDENTITY","","",57,null],[13,"YCBCR_IDENTITY","","",57,null],[13,"YCBCR_709","","",57,null],[13,"YCBCR_601","","",57,null],[13,"YCBCR_2020","","",57,null],[13,"RANGE_SIZE","","",57,null],[13,"MAX_ENUM","","",57,null],[4,"SamplerYcbcrRange","","",null,null],[13,"ITU_FULL","","",58,null],[13,"ITU_NARROW","","",58,null],[13,"RANGE_SIZE","","",58,null],[13,"MAX_ENUM","","",58,null],[4,"SharingMode","","",null,null],[13,"EXCLUSIVE","","",59,null],[13,"CONCURRENT","","",59,null],[13,"RANGE_SIZE","","",59,null],[13,"MAX_ENUM","","",59,null],[3,"ExtensionFlags","","",null,null],[3,"FeatureFlags","","",null,null],[3,"BackendContext","","",null,null],[6,"GraphicsBackendMemory","","",null,null],[3,"Alloc","","",null,null],[12,"memory","","",60,null],[12,"offset","","",60,null],[12,"size","","",60,null],[12,"flags","","",60,null],[12,"backend_memory","","",60,null],[3,"AllocFlag","","",null,null],[3,"YcbcrConversionInfo","","",null,null],[12,"format","","",61,null],[12,"external_format","","",61,null],[12,"ycbcr_model","","",61,null],[12,"ycbcr_range","","",61,null],[12,"x_chroma_offset","","",61,null],[12,"y_chroma_offset","","",61,null],[12,"chroma_filter","","",61,null],[12,"force_explicit_reconstruction","","",61,null],[12,"format_features","","",61,null],[3,"ImageInfo","","",null,null],[12,"image","","",62,null],[12,"alloc","","",62,null],[12,"tiling","","",62,null],[12,"layout","","",62,null],[12,"format","","",62,null],[12,"image_usage_flags","","",62,null],[12,"sample_count","","",62,null],[12,"level_count","","",62,null],[12,"current_queue_family","","",62,null],[12,"protected","","",62,null],[12,"ycbcr_conversion_info","","",62,null],[12,"sharing_mode","","",62,null],[4,"GetProcOf","","",null,null],[13,"Instance","","",63,null],[13,"Device","","",63,null],[6,"GetProcResult","","",null,null],[8,"GetProc","","",null,null],[3,"DrawableInfo","","",null,null],[12,"secondary_command_buffer","","",64,null],[12,"color_attachment_index","","",64,null],[12,"compatible_render_pass","","",64,null],[12,"format","","",64,null],[12,"draw_bounds","","",64,null],[12,"image","","",64,null],[17,"QUEUE_FAMILY_IGNORED","","",null,null],[3,"NullHandle","","",null,null],[17,"NULL_HANDLE","","",null,null],[3,"Version","","",null,null],[11,"new","","",65,[[]]],[11,"major","","",65,[[]]],[11,"minor","","",65,[[]]],[11,"patch","","",65,[[]]],[6,"BackendDrawableInfo","skia_safe::gpu","",null,null],[6,"BackendFormat","","",null,null],[6,"BackendTexture","","",null,null],[6,"BackendRenderTarget","","",null,null],[6,"BackendSurfaceMutableState","","",null,null],[6,"DirectContext","","",null,null],[3,"ResourceCacheLimits","","",null,null],[12,"max_resources","","",66,null],[12,"max_resource_bytes","","",66,null],[3,"ResourceCacheUsage","","",null,null],[12,"resource_count","","",67,null],[12,"resource_bytes","","",67,null],[6,"Context","","",null,null],[6,"RecordingContext","","",null,null],[3,"FlushInfo","","",null,null],[6,"YUVABackendTextureInfo","","A description of a set [BackendTexture]s that hold the â€¦",null,null],[6,"YUVABackendTextures","","A set of [BackendTexture]s that hold the planar data for â€¦",null,null],[0,"wrapper","skia_safe","",null,null],[8,"PointerWrapper","skia_safe::wrapper","This trait supports the conversion of a wrapper into it\'s â€¦",null,null],[10,"wrap","","Wraps a native pointer into a wrapper type. Returns <code>None</code> â€¦",68,[[],["option",4]]],[10,"unwrap","","Unwraps the wrapper type into the native pointer.",68,[[]]],[10,"inner","","Access the wrapped pointer.",68,[[]]],[10,"inner_mut","","Access the wrapped pointer.",68,[[]]],[8,"ValueWrapper","","A trait that supports the conversion from a C/C++ value â€¦",null,null],[10,"wrap","","",69,[[]]],[10,"unwrap","","",69,[[]]],[10,"inner","","",69,[[]]],[10,"inner_mut","","",69,[[]]],[8,"NativeTransmutableWrapper","","A trait that supports the conversion from a C/C++ value â€¦",null,null],[10,"wrap","","",70,[[]]],[10,"unwrap","","",70,[[]]],[10,"inner","","",70,[[]]],[10,"inner_mut","","",70,[[]]],[8,"RefWrapper","","A trait that supports the conversion from a C/C++ â€¦",null,null],[10,"wrap_ref","","",71,[[]]],[10,"wrap_mut","","",71,[[]]],[10,"inner","","",71,[[]]],[10,"inner_mut","","",71,[[]]],[0,"private","skia_safe","",null,null],[0,"gpu","skia_safe::private","",null,null],[4,"SLType","skia_safe::private::gpu","",null,null],[13,"Void","","",72,null],[13,"Bool","","",72,null],[13,"Byte","","",72,null],[13,"Byte2","","",72,null],[13,"Byte3","","",72,null],[13,"Byte4","","",72,null],[13,"UByte","","",72,null],[13,"UByte2","","",72,null],[13,"UByte3","","",72,null],[13,"UByte4","","",72,null],[13,"Short","","",72,null],[13,"Short2","","",72,null],[13,"Short3","","",72,null],[13,"Short4","","",72,null],[13,"UShort","","",72,null],[13,"UShort2","","",72,null],[13,"UShort3","","",72,null],[13,"UShort4","","",72,null],[13,"Float","","",72,null],[13,"Float2","","",72,null],[13,"Float3","","",72,null],[13,"Float4","","",72,null],[13,"Float2x2","","",72,null],[13,"Float3x3","","",72,null],[13,"Float4x4","","",72,null],[13,"Half","","",72,null],[13,"Half2","","",72,null],[13,"Half3","","",72,null],[13,"Half4","","",72,null],[13,"Half2x2","","",72,null],[13,"Half3x3","","",72,null],[13,"Half4x4","","",72,null],[13,"Int","","",72,null],[13,"Int2","","",72,null],[13,"Int3","","",72,null],[13,"Int4","","",72,null],[13,"Uint","","",72,null],[13,"Uint2","","",72,null],[13,"Texture2DSampler","","",72,null],[13,"TextureExternalSampler","","",72,null],[13,"Texture2DRectSampler","","",72,null],[13,"Texture2D","","",72,null],[13,"Sampler","","",72,null],[13,"Input","","",72,null],[0,"svg","skia_safe","",null,null],[0,"canvas","skia_safe::svg","",null,null],[3,"Canvas","skia_safe::svg::canvas","",null,null],[3,"Flags","","",null,null],[18,"CONVERT_TEXT_TO_PATHS","","",73,null],[18,"NO_PRETTY_XML","","",73,null],[11,"empty","","Returns an empty set of flags",73,[[],["flags",3]]],[11,"all","","Returns the set containing all flags.",73,[[],["flags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",73,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that â€¦",73,[[],[["flags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any â€¦",73,[[],["flags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving allâ€¦",73,[[],["flags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",73,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",73,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦",73,[[["flags",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained â€¦",73,[[["flags",3]]]],[11,"insert","","Inserts the specified flags in-place.",73,[[["flags",3]]]],[11,"remove","","Removes the specified flags in-place.",73,[[["flags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",73,[[["flags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the â€¦",73,[[["flags",3]]]],[11,"new","","Creates a new SVG canvas.",74,[[],["canvas",3]]],[11,"end","","Ends the Canvas drawing and returns the resulting SVG. â€¦",74,[[],["data",6]]],[0,"utils","skia_safe","",null,null],[0,"interpolator","skia_safe::utils","This wrapper combines SkInterpolatorBase and â€¦",null,null],[4,"Result","skia_safe::utils::interpolator","",null,null],[13,"Normal_Result","","",75,null],[13,"FreezeStart_Result","","",75,null],[13,"FreezeEnd_Result","","",75,null],[6,"Interpolator","","",null,null],[3,"TimeToT","","",null,null],[12,"t","","",76,null],[12,"index","","",76,null],[12,"exact","","",76,null],[5,"unit_cubic_interp","","",null,[[["scalar",6]],["scalar",6]]],[0,"parse_path","skia_safe::utils","",null,null],[5,"from_svg","skia_safe::utils::parse_path","",null,[[],[["option",4],["path",6]]]],[5,"to_svg","","",null,[[["path",6]],["string",3]]],[0,"shadow_utils","skia_safe::utils","",null,null],[3,"ShadowFlags","skia_safe::utils::shadow_utils","",null,null],[18,"TRANSPARENT_OCCLUDER","","",77,null],[18,"GEOMETRIC_ONLY","","",77,null],[18,"ALL","","",77,null],[11,"empty","","Returns an empty set of flags",77,[[],["shadowflags",3]]],[11,"all","","Returns the set containing all flags.",77,[[],["shadowflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",77,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that â€¦",77,[[],[["option",4],["shadowflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any â€¦",77,[[],["shadowflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving allâ€¦",77,[[],["shadowflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",77,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",77,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦",77,[[["shadowflags",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained â€¦",77,[[["shadowflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",77,[[["shadowflags",3]]]],[11,"remove","","Removes the specified flags in-place.",77,[[["shadowflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",77,[[["shadowflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the â€¦",77,[[["shadowflags",3]]]],[5,"draw_shadow","","",null,[[["path",6],["canvas",3],["scalar",6]]]],[5,"local_bounds","","",null,[[["matrix",3],["path",6],["scalar",6]],[["option",4],["rect",3]]]],[5,"compute_tonal_colors","","",null,[[]]],[0,"text_utils","skia_safe::utils","",null,null],[4,"Align","skia_safe::utils::text_utils","",null,null],[13,"Left","","",78,null],[13,"Center","","",78,null],[13,"Right","","",78,null],[5,"draw_str","","",null,[[["font",6],["canvas",3],["paint",6],["align",4]]]],[5,"get_path","","",null,[[["font",6]],["path",6]]],[3,"Patch3D","skia_safe::utils","",null,null],[12,"u","","",79,null],[12,"v","","",79,null],[12,"origin","","",79,null],[3,"Camera3D","","",null,null],[12,"location","","",80,null],[12,"axis","","",80,null],[12,"zenith","","",80,null],[12,"observer","","",80,null],[6,"View3D","","",null,null],[6,"CustomTypefaceBuilder","","",null,null],[4,"TypefaceGlyph","","",null,null],[13,"Path","","",81,null],[13,"PathAndPaint","","",81,null],[13,"Image","","",81,null],[12,"image","skia_safe::utils::TypefaceGlyph","",82,null],[12,"scale","","",82,null],[13,"Picture","skia_safe::utils","",81,null],[5,"new_null_canvas","","",null,[[],["ownedcanvas",3]]],[0,"annotate","skia_safe","",null,null],[5,"rect_with_url","skia_safe::annotate","",null,[[["canvas",3],["data",6]]]],[5,"named_destination","","",null,[[["canvas",3],["data",6]]]],[5,"link_to_destination","","",null,[[["canvas",3],["data",6]]]],[0,"canvas","skia_safe","",null,null],[4,"PointMode","skia_safe::canvas","",null,null],[13,"Points","","",83,null],[13,"Lines","","",83,null],[13,"Polygon","","",83,null],[4,"SrcRectConstraint","","",null,null],[13,"Strict","","",84,null],[13,"Fast","","",84,null],[0,"lattice","","",null,null],[4,"RectType","skia_safe::canvas::lattice","",null,null],[13,"Default","","",85,null],[13,"Transparent","","",85,null],[13,"FixedColor","","",85,null],[3,"Lattice","","",null,null],[12,"x_divs","","",86,null],[12,"y_divs","","",86,null],[12,"rect_types","","",86,null],[12,"bounds","","",86,null],[12,"colors","","",86,null],[3,"Lattice","skia_safe::canvas","",null,null],[12,"x_divs","","",86,null],[12,"y_divs","","",86,null],[12,"rect_types","","",86,null],[12,"bounds","","",86,null],[12,"colors","","",86,null],[3,"SaveLayerFlags","","",null,null],[3,"SaveLayerRec","","",null,null],[3,"TopLayerPixels","","Provides access to Canvas\'s pixels. Returned by â€¦",null,null],[12,"pixels","","",87,null],[12,"info","","",87,null],[12,"row_bytes","","",87,null],[12,"origin","","",87,null],[3,"Canvas","","The canvas type that is returned when it is owned by â€¦",null,null],[3,"OwnedCanvas","","A type representing a canvas that is owned and dropped â€¦",null,null],[8,"SetMatrix","","",null,null],[10,"set_matrix","","",88,[[["matrix",3]]]],[8,"DrawImageNine","","",null,null],[10,"draw_image_nine","","",89,[[["option",4],["paint",6]]]],[8,"DrawImageLattice","","",null,null],[10,"draw_image_lattice","","",90,[[["option",4],["lattice",3],["paint",6]]]],[3,"AutoRestoredCanvas","","A reference to a Canvas that restores the Canvas\'s state â€¦",null,null],[4,"AutoCanvasRestore","","",null,null],[0,"colors","skia_safe","",null,null],[17,"TRANSPARENT","skia_safe::colors","",null,null],[17,"BLACK","","",null,null],[17,"DARK_GREY","","",null,null],[17,"GREY","","",null,null],[17,"LIGHT_GREY","","",null,null],[17,"WHITE","","",null,null],[17,"RED","","",null,null],[17,"GREEN","","",null,null],[17,"BLUE","","",null,null],[17,"YELLOW","","",null,null],[17,"CYAN","","",null,null],[17,"MAGENTA","","",null,null],[0,"color_filter","skia_safe","",null,null],[0,"color_filters","skia_safe::color_filter","",null,null],[5,"compose","skia_safe::color_filter::color_filters","",null,[[],[["option",4],["colorfilter",6]]]],[5,"matrix","","",null,[[["colormatrix",6]],["colorfilter",6]]],[5,"matrix_row_major","","",null,[[],["colorfilter",6]]],[5,"hsla_matrix_of_color_matrix","","",null,[[["colormatrix",6]],["colorfilter",6]]],[5,"hsla_matrix","","",null,[[],["colorfilter",6]]],[5,"blend","","",null,[[["blendmode",4]],[["option",4],["colorfilter",6]]]],[5,"linear_to_srgb_gamma","","",null,[[],["colorfilter",6]]],[5,"srgb_to_linear_gamma","","",null,[[],["colorfilter",6]]],[5,"lerp","","",null,[[],[["option",4],["colorfilter",6]]]],[3,"Flags","skia_safe::color_filter","",null,null],[6,"ColorFilter","","",null,null],[0,"color_filters","skia_safe","",null,null],[5,"compose","skia_safe::color_filters","",null,[[],[["option",4],["colorfilter",6]]]],[5,"matrix","","",null,[[["colormatrix",6]],["colorfilter",6]]],[5,"matrix_row_major","","",null,[[],["colorfilter",6]]],[5,"hsla_matrix_of_color_matrix","","",null,[[["colormatrix",6]],["colorfilter",6]]],[5,"hsla_matrix","","",null,[[],["colorfilter",6]]],[5,"blend","","",null,[[["blendmode",4]],[["option",4],["colorfilter",6]]]],[5,"linear_to_srgb_gamma","","",null,[[],["colorfilter",6]]],[5,"srgb_to_linear_gamma","","",null,[[],["colorfilter",6]]],[5,"lerp","","",null,[[],[["option",4],["colorfilter",6]]]],[0,"named_transfer_fn","skia_safe","",null,null],[17,"SRGB","skia_safe::named_transfer_fn","",null,null],[17,"DOT22","","",null,null],[17,"LINEAR","","",null,null],[17,"REC2020","","",null,null],[17,"PQ","","",null,null],[17,"HLG","","",null,null],[0,"contour_measure","skia_safe","",null,null],[6,"ContourMeasure","skia_safe::contour_measure","",null,null],[3,"MatrixFlags","","",null,null],[6,"ContourMeasureIter","","",null,null],[0,"document","skia_safe","",null,null],[0,"state","skia_safe::document","",null,null],[3,"Open","skia_safe::document::state","Document is currently open. May contain several pages.",null,null],[3,"OnPage","","Document is currently on a page and can be drawn onto.",null,null],[3,"Document","skia_safe::document","",null,null],[0,"draw_looper","skia_safe","",null,null],[6,"DrawLooper","skia_safe::draw_looper","",null,null],[3,"BlurShadowRec","","",null,null],[12,"sigma","","",91,null],[12,"offset","","",91,null],[12,"color","","",91,null],[12,"blur","","",91,null],[0,"drawable","skia_safe","",null,null],[0,"gpu_draw_handler","skia_safe::drawable","",null,null],[6,"GPUDrawHandler","skia_safe::drawable::gpu_draw_handler","",null,null],[6,"Drawable","skia_safe::drawable","",null,null],[6,"GPUDrawHandler","","",null,null],[0,"font","skia_safe","",null,null],[4,"Edging","skia_safe::font","",null,null],[13,"Alias","","",92,null],[13,"AntiAlias","","",92,null],[13,"SubpixelAntiAlias","","",92,null],[6,"Font","","",null,null],[0,"font_arguments","skia_safe","",null,null],[0,"variation_position","skia_safe::font_arguments","",null,null],[3,"Coordinate","skia_safe::font_arguments::variation_position","",null,null],[12,"axis","","",93,null],[12,"value","","",93,null],[3,"VariationPosition","skia_safe::font_arguments","",null,null],[12,"coordinates","","",94,null],[3,"FontArguments","","",null,null],[0,"font_metrics","skia_safe","",null,null],[3,"Flags","skia_safe::font_metrics","",null,null],[3,"FontMetrics","","",null,null],[12,"top","","",95,null],[12,"ascent","","",95,null],[12,"descent","","",95,null],[12,"bottom","","",95,null],[12,"leading","","",95,null],[12,"avg_char_width","","",95,null],[12,"max_char_width","","",95,null],[12,"x_min","","",95,null],[12,"x_max","","",95,null],[12,"x_height","","",95,null],[12,"cap_height","","",95,null],[0,"font_parameters","skia_safe","",null,null],[0,"variation","skia_safe::font_parameters","",null,null],[3,"Axis","skia_safe::font_parameters::variation","",null,null],[12,"tag","","",96,null],[12,"min","","",96,null],[12,"def","","",96,null],[12,"max","","",96,null],[3,"VariationAxis","skia_safe::font_parameters","",null,null],[12,"tag","","",96,null],[12,"min","","",96,null],[12,"def","","",96,null],[12,"max","","",96,null],[0,"font_style","skia_safe","",null,null],[4,"Slant","skia_safe::font_style","",null,null],[13,"Upright","","",97,null],[13,"Italic","","",97,null],[13,"Oblique","","",97,null],[3,"Weight","","Wrapper type of a font weight.",null,null],[3,"Width","","Wrapper type for the width of a font.",null,null],[3,"FontStyle","","",null,null],[0,"graphics","skia_safe","",null,null],[5,"init","skia_safe::graphics","",null,[[]]],[5,"font_cache_limit","","",null,[[]]],[5,"set_font_cache_limit","","",null,[[]]],[5,"font_cache_used","","",null,[[]]],[5,"font_cache_count_used","","",null,[[]]],[5,"font_cache_count_limit","","",null,[[]]],[5,"set_font_cache_count_limit","","",null,[[]]],[5,"font_cache_point_size_limit","","",null,[[]]],[5,"set_font_cache_point_size_limit","","",null,[[]]],[5,"purge_font_cache","","",null,[[]]],[5,"resource_cache_total_bytes_used","","",null,[[]]],[5,"resource_cache_total_bytes_limit","","",null,[[]]],[5,"set_resource_cache_total_bytes_limit","","",null,[[]]],[5,"purge_resource_cache","","",null,[[]]],[5,"resource_cache_single_allocation_byte_limit","","",null,[[],["option",4]]],[5,"set_resource_cache_single_allocation_byte_limit","","",null,[[["option",4]],["option",4]]],[5,"purge_all_caches","","",null,[[]]],[5,"set_flags","","",null,[[]]],[5,"allow_jit","","",null,[[]]],[0,"image","skia_safe","",null,null],[4,"BitDepth","skia_safe::image","",null,null],[13,"U8","","",98,null],[13,"F16","","",98,null],[4,"CachingHint","","",null,null],[13,"Allow","","",99,null],[13,"Disallow","","",99,null],[4,"CompressionType","","",null,null],[13,"None","","",100,null],[13,"ETC2_RGB8_UNORM","","",100,null],[13,"BC1_RGB8_UNORM","","",100,null],[13,"BC1_RGBA8_UNORM","","",100,null],[3,"CubicResampler","","Specify <code>b</code> and <code>c</code> (each between 0...1) to create a shader â€¦",null,null],[6,"Image","","",null,null],[0,"encode","skia_safe","",null,null],[5,"pixmap","skia_safe::encode","",null,[[["pixmap",6],["encodedimageformat",4]],[["option",4],["data",6]]]],[5,"bitmap","","",null,[[["bitmap",6],["encodedimageformat",4]],[["option",4],["data",6]]]],[0,"image_filter","skia_safe","",null,null],[4,"MapDirection","skia_safe::image_filter","",null,null],[13,"Forward","","",101,null],[13,"Reverse","","",101,null],[0,"crop_rect","","",null,null],[3,"CropEdge","skia_safe::image_filter::crop_rect","",null,null],[3,"CropRect","skia_safe::image_filter","",null,null],[6,"ImageFilter","","",null,null],[0,"matrix","skia_safe","",null,null],[4,"ApplyPerspectiveClip","skia_safe::matrix","",null,null],[13,"No","","",102,null],[13,"Yes","","",102,null],[4,"ScaleToFit","","",null,null],[13,"Fill","","",103,null],[13,"Start","","",103,null],[13,"Center","","",103,null],[13,"End","","",103,null],[3,"TypeMask","","",null,null],[3,"Matrix","","",null,null],[4,"Member","","",null,null],[13,"ScaleX","","",104,null],[13,"SkewX","","",104,null],[13,"TransX","","",104,null],[13,"SkewY","","",104,null],[13,"ScaleY","","",104,null],[13,"TransY","","",104,null],[13,"Persp0","","",104,null],[13,"Persp1","","",104,null],[13,"Persp2","","",104,null],[4,"AffineMember","","",null,null],[13,"ScaleX","","",105,null],[13,"SkewY","","",105,null],[13,"SkewX","","",105,null],[13,"ScaleY","","",105,null],[13,"TransX","","",105,null],[13,"TransY","","",105,null],[17,"IDENTITY","","",null,null],[0,"matrix44","skia_safe","",null,null],[3,"Vector4","skia_safe::matrix44","",null,null],[3,"TypeMask","","",null,null],[3,"Matrix44","","",null,null],[8,"SetPrePostScale","","",null,null],[10,"set_scale","","",106,[[]]],[10,"pre_scale","","",106,[[]]],[10,"post_scale","","",106,[[]]],[8,"MapScalars","","",null,null],[10,"map_scalars","","",107,[[]]],[8,"Map2","","",null,null],[10,"map2","","",108,[[]]],[0,"paint","skia_safe","",null,null],[4,"Style","skia_safe::paint","",null,null],[13,"Fill","","",14,null],[13,"Stroke","","",14,null],[13,"StrokeAndFill","","",14,null],[4,"Cap","","",null,null],[13,"Butt","","",12,null],[13,"Round","","",12,null],[13,"Square","","",12,null],[4,"Join","","",null,null],[13,"Miter","","",13,null],[13,"Round","","",13,null],[13,"Bevel","","",13,null],[6,"Paint","","",null,null],[0,"path","skia_safe","",null,null],[4,"Direction","skia_safe::path","",null,null],[13,"CW","","",16,null],[13,"CCW","","",16,null],[4,"FillType","","",null,null],[13,"Winding","","",15,null],[13,"EvenOdd","","",15,null],[13,"InverseWinding","","",15,null],[13,"InverseEvenOdd","","",15,null],[4,"ArcSize","","",null,null],[13,"Small","","",109,null],[13,"Large","","",109,null],[4,"AddPathMode","","",null,null],[13,"Append","","",110,null],[13,"Extend","","",110,null],[4,"Verb","","",null,null],[13,"Move","","",111,null],[13,"Line","","",111,null],[13,"Quad","","",111,null],[13,"Conic","","",111,null],[13,"Cubic","","",111,null],[13,"Close","","",111,null],[13,"Done","","",111,null],[3,"SegmentMask","","",null,null],[3,"Iter","","",null,null],[3,"RawIter","","",null,null],[6,"Path","","",null,null],[0,"path_effect","skia_safe","",null,null],[0,"point_data","skia_safe::path_effect","",null,null],[3,"PointFlags","skia_safe::path_effect::point_data","",null,null],[3,"PointData","skia_safe::path_effect","",null,null],[12,"flags","","",112,null],[12,"size","","",112,null],[12,"clip_rect","","",112,null],[12,"path","","",112,null],[12,"first","","",112,null],[12,"last","","",112,null],[3,"DashInfo","","",null,null],[12,"intervals","","",113,null],[12,"phase","","",113,null],[6,"PathEffect","","",null,null],[0,"path_measure","skia_safe","",null,null],[6,"PathMeasure","skia_safe::path_measure","",null,null],[3,"MatrixFlags","","",null,null],[0,"path_types","skia_safe","",null,null],[4,"PathFillType","skia_safe::path_types","",null,null],[13,"Winding","","",15,null],[13,"EvenOdd","","",15,null],[13,"InverseWinding","","",15,null],[13,"InverseEvenOdd","","",15,null],[4,"PathDirection","","",null,null],[13,"CW","","",16,null],[13,"CCW","","",16,null],[4,"PathVerb","","",null,null],[13,"Move","","",17,null],[13,"Line","","",17,null],[13,"Quad","","",17,null],[13,"Conic","","",17,null],[13,"Cubic","","",17,null],[13,"Close","","",17,null],[3,"PathSegmentMask","","",null,null],[0,"picture_recorder","skia_safe","",null,null],[6,"PictureRecorder","skia_safe::picture_recorder","",null,null],[0,"region","skia_safe","",null,null],[4,"RegionOp","skia_safe::region","",null,null],[13,"Difference","","",114,null],[13,"Intersect","","",114,null],[13,"Union","","",114,null],[13,"XOR","","",114,null],[13,"ReverseDifference","","",114,null],[13,"Replace","","",114,null],[6,"Region","","",null,null],[8,"Combine","","",null,null],[10,"combine","","",115,[[["regionop",4]]]],[11,"difference","","",115,[[]]],[11,"intersect","","",115,[[]]],[11,"xor","","",115,[[]]],[11,"union","","",115,[[]]],[11,"reverse_difference","","",115,[[]]],[11,"replace","","",115,[[]]],[8,"Intersects","","",null,null],[10,"intersects","","",116,[[]]],[3,"Iterator","","",null,null],[3,"Cliperator","","",null,null],[3,"Spanerator","","",null,null],[0,"rrect","skia_safe","",null,null],[4,"Type","skia_safe::rrect","",null,null],[13,"Empty","","",117,null],[13,"Rect","","",117,null],[13,"Oval","","",117,null],[13,"Simple","","",117,null],[13,"NinePatch","","",117,null],[13,"Complex","","",117,null],[4,"Corner","","",null,null],[13,"UpperLeft","","",118,null],[13,"UpperRight","","",118,null],[13,"LowerRight","","",118,null],[13,"LowerLeft","","",118,null],[3,"RRect","","",null,null],[0,"sampling_options","skia_safe","",null,null],[4,"FilterMode","skia_safe::sampling_options","",null,null],[13,"Nearest","","",18,null],[13,"Linear","","",18,null],[4,"MipmapMode","","",null,null],[13,"None","","",19,null],[13,"Nearest","","",19,null],[13,"Linear","","",19,null],[6,"SamplingMode","","",null,null],[3,"CubicResampler","","Specify <code>b</code> and <code>c</code> (each between 0...1) to create a shader â€¦",null,null],[3,"FilterOptions","","",null,null],[12,"sampling","","",119,null],[12,"mipmap","","",119,null],[4,"MediumBehavior","","",null,null],[13,"AsMipmapNearest","","",120,null],[13,"AsMipmapLinear","","",120,null],[3,"SamplingOptions","","",null,null],[12,"use_cubic","","",121,null],[12,"cubic","","",121,null],[12,"filter","","",121,null],[12,"mipmap","","",121,null],[0,"shader","skia_safe","",null,null],[4,"GradientTypeInternal","skia_safe::shader","",null,null],[13,"None","","",122,null],[13,"Color","","",122,null],[13,"Linear","","",122,null],[13,"Radial","","",122,null],[13,"Sweep","","",122,null],[13,"Conical","","",122,null],[0,"shaders","","",null,null],[5,"empty","skia_safe::shader::shaders","",null,[[],["shader",6]]],[5,"color","","",null,[[],["shader",6]]],[5,"color_in_space","","",null,[[],["shader",6]]],[5,"blend","","",null,[[["blendmode",4]],["shader",6]]],[5,"lerp","","",null,[[],[["option",4],["shader",6]]]],[5,"lerp2","","",null,[[["option",4],["matrix",3],["shader",6]]]],[4,"GradientType","skia_safe::shader","",null,null],[13,"Color","","",123,null],[13,"Linear","","",123,null],[13,"Radial","","",123,null],[13,"Conical","","",123,null],[13,"Sweep","","",123,null],[3,"GradientInfo","","",null,null],[12,"colors","","",124,null],[12,"color_offsets","","",124,null],[12,"tile_mode","","",124,null],[12,"gradient_flags","","",124,null],[6,"Shader","","",null,null],[0,"shaders","skia_safe","",null,null],[5,"empty","skia_safe::shaders","",null,[[],["shader",6]]],[5,"color","","",null,[[],["shader",6]]],[5,"color_in_space","","",null,[[],["shader",6]]],[5,"blend","","",null,[[["blendmode",4]],["shader",6]]],[5,"lerp","","",null,[[],[["option",4],["shader",6]]]],[5,"lerp2","","",null,[[["option",4],["matrix",3],["shader",6]]]],[0,"stroke_rec","skia_safe","",null,null],[4,"InitStyle","skia_safe::stroke_rec","",null,null],[13,"Hairline","","",125,null],[13,"Fill","","",125,null],[4,"Style","","",null,null],[13,"Hairline","","",126,null],[13,"Fill","","",126,null],[13,"Stroke","","",126,null],[13,"StrokeAndFill","","",126,null],[6,"StrokeRec","","",null,null],[0,"surface","skia_safe","",null,null],[4,"ContentChangeMode","skia_safe::surface","",null,null],[13,"Discard","","",127,null],[13,"Retain","","",127,null],[4,"BackendHandleAccess","","",null,null],[13,"FlushRead","","",128,null],[13,"FlushWrite","","",128,null],[13,"DiscardWrite","","",128,null],[4,"BackendSurfaceAccess","","",null,null],[13,"NoAccess","","",129,null],[13,"Present","","",129,null],[6,"Surface","","",null,null],[0,"typeface","skia_safe","",null,null],[4,"SerializeBehavior","skia_safe::typeface","",null,null],[13,"DoIncludeData","","",130,null],[13,"DontIncludeData","","",130,null],[13,"IncludeDataIfLocal","","",130,null],[6,"FontId","","",null,null],[6,"FontTableTag","","",null,null],[3,"LocalizedString","","",null,null],[12,"string","","",131,null],[12,"language","","",131,null],[6,"Typeface","","",null,null],[6,"LocalizedStringsIter","","",null,null],[0,"vertices","skia_safe","",null,null],[4,"VertexMode","skia_safe::vertices","",null,null],[13,"Triangles","","",132,null],[13,"TriangleStrip","","",132,null],[13,"TriangleFan","","",132,null],[4,"AttributeUsage","","",null,null],[13,"Raw","","",133,null],[13,"Color","","",133,null],[13,"Vector","","",133,null],[13,"NormalVector","","",133,null],[13,"Position","","",133,null],[6,"BoneIndices","","",null,null],[6,"BoneWeights","","",null,null],[3,"Bone","","",null,null],[4,"AttributeType","","",null,null],[13,"Float","","",134,null],[13,"Float2","","",134,null],[13,"Float3","","",134,null],[13,"Float4","","",134,null],[13,"Byte4UNorm","","",134,null],[3,"Attribute","","",null,null],[12,"ty","","",135,null],[12,"usage","","",135,null],[12,"marker_id","","",135,null],[6,"Vertices","","",null,null],[3,"BuilderFlags","","",null,null],[6,"Builder","","",null,null],[0,"yuva_info","skia_safe","",null,null],[4,"PlaneConfig","skia_safe::yuva_info","Specifies how YUV (and optionally A) are divided among â€¦",null,null],[13,"Unknown","","",136,null],[13,"Y_U_V","","",136,null],[13,"Y_V_U","","",136,null],[13,"Y_UV","","",136,null],[13,"Y_VU","","",136,null],[13,"YUV","","",136,null],[13,"UYV","","",136,null],[13,"Y_U_V_A","","",136,null],[13,"Y_V_U_A","","",136,null],[13,"Y_UV_A","","",136,null],[13,"Y_VU_A","","",136,null],[13,"YUVA","","",136,null],[13,"UYVA","","",136,null],[4,"Siting","","Describes how subsampled chroma values are sited relative â€¦",null,null],[13,"Centered","","",137,null],[6,"YUVAInfo","","Specifies the structure of planes for a YUV image with â€¦",null,null],[4,"Subsampling","","UV subsampling is also specified in the enum value names â€¦",null,null],[13,"Unknown","","",138,null],[13,"S444","","",138,null],[13,"S422","","",138,null],[13,"S420","","",138,null],[13,"S440","","",138,null],[13,"S411","","",138,null],[13,"S410","","",138,null],[5,"subsampling_factors","","Ratio of Y/A values to U/V values in x and y.",null,[[["subsampling",4]]]],[5,"plane_subsampling_factors","","<code>SubsamplingFactors(Subsampling)</code> if <code>plane_index</code> refers to â€¦",null,[[["planeconfig",4],["subsampling",4]]]],[5,"plane_dimensions","","Given image dimensions, a planer configuration, â€¦",null,[[["encodedorigin",4],["planeconfig",4],["subsampling",4]],[["vec",3],["isize",3]]]],[5,"num_planes","","Number of planes for a given [PlaneConfig].",null,[[["planeconfig",4]]]],[5,"num_channels_in_plane","","Number of Y, U, V, A channels in the ith plane for a â€¦",null,[[["planeconfig",4]],["option",4]]],[5,"has_alpha","","Does the [PlaneConfig] have alpha values?",null,[[["planeconfig",4]]]],[0,"yuva_pixmaps","skia_safe","",null,null],[4,"DataType","skia_safe::yuva_pixmaps","",null,null],[13,"Unorm8","","",139,null],[13,"Unorm16","","",139,null],[13,"Float16","","",139,null],[13,"Unorm10_Unorm2","","",139,null],[0,"yuva_pixmap_info","","",null,null],[4,"PlaneConfig","skia_safe::yuva_pixmaps::yuva_pixmap_info","",null,null],[13,"Unknown","","",136,null],[13,"Y_U_V","","",136,null],[13,"Y_V_U","","",136,null],[13,"Y_UV","","",136,null],[13,"Y_VU","","",136,null],[13,"YUV","","",136,null],[13,"UYV","","",136,null],[13,"Y_U_V_A","","",136,null],[13,"Y_V_U_A","","",136,null],[13,"Y_UV_A","","",136,null],[13,"Y_VU_A","","",136,null],[13,"YUVA","","",136,null],[13,"UYVA","","",136,null],[4,"DataType","","Data type for Y, U, V, and possibly A channels â€¦",null,null],[13,"Unorm8","","",139,null],[13,"Unorm16","","",139,null],[13,"Float16","","",139,null],[13,"Unorm10_Unorm2","","",139,null],[4,"Subsampling","","UV subsampling is also specified in the enum value names â€¦",null,null],[13,"Unknown","","",138,null],[13,"S444","","",138,null],[13,"S422","","",138,null],[13,"S420","","",138,null],[13,"S440","","",138,null],[13,"S411","","",138,null],[13,"S410","","",138,null],[6,"SupportedDataTypes","","",null,null],[5,"default_color_type_for_data_type","","Gets the default [ColorType] to use with <code>num_channels</code> â€¦",null,[[["datatype",4]],["colortype",4]]],[5,"num_channels_and_data_type","","If the [ColorType] is supported for YUVA pixmaps this â€¦",null,[[["colortype",4]]]],[6,"YUVAPixmapInfo","skia_safe::yuva_pixmaps","[YUVAInfo] combined with per-plane [ColorType]s and row â€¦",null,null],[6,"YUVAPixmaps","","Helper to store [Pixmap] planes as described by a [â€¦",null,null],[0,"yuva_pixmap_info","skia_safe","",null,null],[4,"PlaneConfig","skia_safe::yuva_pixmap_info","",null,null],[13,"Unknown","","",136,null],[13,"Y_U_V","","",136,null],[13,"Y_V_U","","",136,null],[13,"Y_UV","","",136,null],[13,"Y_VU","","",136,null],[13,"YUV","","",136,null],[13,"UYV","","",136,null],[13,"Y_U_V_A","","",136,null],[13,"Y_V_U_A","","",136,null],[13,"Y_UV_A","","",136,null],[13,"Y_VU_A","","",136,null],[13,"YUVA","","",136,null],[13,"UYVA","","",136,null],[4,"DataType","","Data type for Y, U, V, and possibly A channels â€¦",null,null],[13,"Unorm8","","",139,null],[13,"Unorm16","","",139,null],[13,"Float16","","",139,null],[13,"Unorm10_Unorm2","","",139,null],[4,"Subsampling","","UV subsampling is also specified in the enum value names â€¦",null,null],[13,"Unknown","","",138,null],[13,"S444","","",138,null],[13,"S422","","",138,null],[13,"S420","","",138,null],[13,"S440","","",138,null],[13,"S411","","",138,null],[13,"S410","","",138,null],[6,"SupportedDataTypes","","",null,null],[5,"default_color_type_for_data_type","","Gets the default [ColorType] to use with <code>num_channels</code> â€¦",null,[[["datatype",4]],["colortype",4]]],[5,"num_channels_and_data_type","","If the [ColorType] is supported for YUVA pixmaps this â€¦",null,[[["colortype",4]]]],[0,"pdf","skia_safe","",null,null],[4,"DocumentStructureType","skia_safe::pdf","",null,null],[13,"Document","","",140,null],[13,"Part","","",140,null],[13,"Art","","",140,null],[13,"Sect","","",140,null],[13,"Div","","",140,null],[13,"BlockQuote","","",140,null],[13,"Caption","","",140,null],[13,"TOC","","",140,null],[13,"TOCI","","",140,null],[13,"Index","","",140,null],[13,"NonStruct","","",140,null],[13,"Private","","",140,null],[13,"H","","",140,null],[13,"H1","","",140,null],[13,"H2","","",140,null],[13,"H3","","",140,null],[13,"H4","","",140,null],[13,"H5","","",140,null],[13,"H6","","",140,null],[13,"P","","",140,null],[13,"L","","",140,null],[13,"LI","","",140,null],[13,"Lbl","","",140,null],[13,"LBody","","",140,null],[13,"Table","","",140,null],[13,"TR","","",140,null],[13,"TH","","",140,null],[13,"TD","","",140,null],[13,"THead","","",140,null],[13,"TBody","","",140,null],[13,"TFoot","","",140,null],[13,"Span","","",140,null],[13,"Quote","","",140,null],[13,"Note","","",140,null],[13,"Reference","","",140,null],[13,"BibEntry","","",140,null],[13,"Code","","",140,null],[13,"Link","","",140,null],[13,"Annot","","",140,null],[13,"Ruby","","",140,null],[13,"RB","","",140,null],[13,"RT","","",140,null],[13,"RP","","",140,null],[13,"Warichu","","",140,null],[13,"WT","","",140,null],[13,"WP","","",140,null],[13,"Figure","","",140,null],[13,"Formula","","",140,null],[13,"Form","","",140,null],[6,"AttributeList","","",null,null],[3,"StructureElementNode","","",null,null],[3,"Metadata","","",null,null],[12,"title","","",141,null],[12,"author","","",141,null],[12,"subject","","",141,null],[12,"keywords","","",141,null],[12,"creator","","",141,null],[12,"producer","","",141,null],[12,"creation","","",141,null],[12,"modified","","",141,null],[12,"raster_dpi","","",141,null],[12,"pdfa","","",141,null],[12,"encoding_quality","","",141,null],[5,"new_document","","",null,[[["option",4],["metadata",3]],["document",3]]],[0,"path_1d_path_effect","skia_safe","",null,null],[4,"Style","skia_safe::path_1d_path_effect","",null,null],[13,"Translate","","",142,null],[13,"Rotate","","",142,null],[13,"Morph","","",142,null],[5,"new","","",null,[[["path",6],["scalar",6],["style",4]],[["option",4],["patheffect",6]]]],[0,"line_2d_path_effect","skia_safe","",null,null],[5,"new","skia_safe::line_2d_path_effect","",null,[[["scalar",6],["matrix",3]],[["option",4],["patheffect",6]]]],[0,"path_2d_path_effect","skia_safe","",null,null],[5,"new","skia_safe::path_2d_path_effect","",null,[[["matrix",3],["path",6]],["patheffect",6]]],[0,"alpha_threshold_filter","skia_safe","",null,null],[0,"arithmetic_image_filter","","",null,null],[3,"ArithmeticFPInputs","skia_safe::arithmetic_image_filter","",null,null],[12,"k","","",143,null],[12,"enforce_pm_color","","",143,null],[0,"blur_draw_looper","skia_safe","",null,null],[5,"new","skia_safe::blur_draw_looper","",null,[[["scalar",6]],[["drawlooper",6],["option",4]]]],[5,"new_with_color_space","","",null,[[["scalar",6],["colorspace",6]],[["drawlooper",6],["option",4]]]],[0,"blur_image_filter","skia_safe","",null,null],[0,"color_filter_image_filter","","",null,null],[0,"color_matrix","","",null,null],[6,"ColorMatrix","skia_safe::color_matrix","",null,null],[0,"color_matrix_filter","skia_safe","",null,null],[5,"new_lighting","skia_safe::color_matrix_filter","",null,[[],[["option",4],["colorfilter",6]]]],[0,"compose_image_filter","skia_safe","",null,null],[0,"corner_path_effect","","",null,null],[5,"new","skia_safe::corner_path_effect","",null,[[["scalar",6]],[["option",4],["patheffect",6]]]],[0,"dash_path_effect","skia_safe","",null,null],[5,"new","skia_safe::dash_path_effect","",null,[[["scalar",6]],[["option",4],["patheffect",6]]]],[0,"discrete_path_effect","skia_safe","",null,null],[5,"new","skia_safe::discrete_path_effect","",null,[[["scalar",6]],[["option",4],["patheffect",6]]]],[0,"displacement_map_effect","skia_safe","",null,null],[0,"drop_shadow_image_filter","","",null,null],[4,"ShadowMode","skia_safe::drop_shadow_image_filter","",null,null],[13,"DrawShadowAndForeground","","",144,null],[13,"DrawShadowOnly","","",144,null],[5,"new","","",null,[[["shadowmode",4]],[["option",4],["imagefilter",6]]]],[0,"gradient_shader","skia_safe","",null,null],[3,"Flags","skia_safe::gradient_shader","",null,null],[5,"linear","","",null,[[["tilemode",4]],[["option",4],["shader",6]]]],[5,"radial","","",null,[[["scalar",6],["tilemode",4]],[["option",4],["shader",6]]]],[5,"two_point_conical","","",null,[[["scalar",6],["tilemode",4]],[["option",4],["shader",6]]]],[5,"sweep","","",null,[[["tilemode",4]],[["option",4],["shader",6]]]],[4,"GradientShaderColors","","Type that represents either a slice of Color, or a slice â€¦",null,null],[13,"Colors","","",145,null],[13,"ColorsInSpace","","",145,null],[0,"high_contrast_filter","skia_safe","",null,null],[0,"high_contrast_config","skia_safe::high_contrast_filter","",null,null],[4,"InvertStyle","skia_safe::high_contrast_filter::high_contrast_config","",null,null],[13,"NoInvert","","",146,null],[13,"InvertBrightness","","",146,null],[13,"InvertLightness","","",146,null],[3,"HighContrastConfig","skia_safe::high_contrast_filter","",null,null],[12,"grayscale","","",147,null],[12,"invert_style","","",147,null],[12,"contrast","","",147,null],[5,"new","","",null,[[["highcontrastconfig",3]],[["option",4],["colorfilter",6]]]],[0,"high_contrast_config","skia_safe","",null,null],[4,"InvertStyle","skia_safe::high_contrast_config","",null,null],[13,"NoInvert","","",146,null],[13,"InvertBrightness","","",146,null],[13,"InvertLightness","","",146,null],[0,"image_filters","skia_safe","",null,null],[4,"Dither","skia_safe::image_filters","",null,null],[13,"No","","",148,null],[13,"Yes","","",148,null],[3,"CropRect","","",null,null],[5,"alpha_threshold","","",null,[[["region",6],["scalar",6]],[["option",4],["imagefilter",6]]]],[5,"arithmetic","","",null,[[["scalar",6]],[["option",4],["imagefilter",6]]]],[5,"blend","","",null,[[["blendmode",4]],[["option",4],["imagefilter",6]]]],[5,"blur","","",null,[[],[["option",4],["imagefilter",6]]]],[5,"color_filter","","",null,[[],[["option",4],["imagefilter",6]]]],[5,"compose","","",null,[[],[["option",4],["imagefilter",6]]]],[5,"displacement_map","","",null,[[["scalar",6]],[["option",4],["imagefilter",6]]]],[5,"drop_shadow","","",null,[[],[["option",4],["imagefilter",6]]]],[5,"drop_shadow_only","","",null,[[],[["option",4],["imagefilter",6]]]],[5,"image","","",null,[[],[["option",4],["imagefilter",6]]]],[5,"magnifier","","",null,[[["scalar",6]],[["option",4],["imagefilter",6]]]],[5,"matrix_convolution","","",null,[[["scalar",6],["tilemode",4]],[["option",4],["imagefilter",6]]]],[5,"matrix_transform","","",null,[[["matrix",3],["filterquality",4]],[["option",4],["imagefilter",6]]]],[5,"merge","","",null,[[],[["option",4],["imagefilter",6]]]],[5,"offset","","",null,[[],[["option",4],["imagefilter",6]]]],[5,"paint","","",null,[[["paint",6]],[["option",4],["imagefilter",6]]]],[5,"picture","","",null,[[],[["option",4],["imagefilter",6]]]],[5,"shader","","",null,[[],[["option",4],["imagefilter",6]]]],[5,"shader_with_dither","","",null,[[["dither",4]],[["option",4],["imagefilter",6]]]],[5,"tile","","",null,[[],[["option",4],["imagefilter",6]]]],[5,"xfermode","","",null,[[["blendmode",4]],[["option",4],["imagefilter",6]]]],[5,"dilate","","",null,[[],[["option",4],["imagefilter",6]]]],[5,"erode","","",null,[[],[["option",4],["imagefilter",6]]]],[5,"distant_lit_diffuse","","",null,[[["scalar",6]],[["option",4],["imagefilter",6]]]],[5,"point_lit_diffuse","","",null,[[["scalar",6]],[["option",4],["imagefilter",6]]]],[5,"spot_lit_diffuse","","",null,[[["scalar",6]],[["option",4],["imagefilter",6]]]],[5,"distant_lit_specular","","",null,[[["scalar",6]],[["option",4],["imagefilter",6]]]],[5,"point_lit_specular","","",null,[[["scalar",6]],[["option",4],["imagefilter",6]]]],[5,"spot_lit_specular","","",null,[[["scalar",6]],[["option",4],["imagefilter",6]]]],[0,"image_source","skia_safe","",null,null],[0,"layer_draw_looper","","",null,null],[3,"Bits","skia_safe::layer_draw_looper","",null,null],[4,"BitFlags","","",null,null],[13,"Bits","","",149,null],[13,"EntirePaint","","",149,null],[3,"LayerInfo","","",null,null],[12,"paint_bits","","",150,null],[12,"color_mode","","",150,null],[12,"offset","","",150,null],[12,"post_translate","","",150,null],[6,"Builder","","",null,null],[0,"lighting_image_filter","skia_safe","",null,null],[0,"luma_color_filter","","",null,null],[5,"new","skia_safe::luma_color_filter","",null,[[],["colorfilter",6]]],[0,"magnifier_image_filter","skia_safe","",null,null],[0,"matrix_convolution_image_filter","","",null,null],[0,"merge_image_filter","","",null,null],[0,"offset_image_filter","","",null,null],[0,"merge_path_effect","","",null,null],[5,"new","skia_safe::merge_path_effect","",null,[[["pathop",4]],["patheffect",6]]],[0,"matrix_path_effect","skia_safe","",null,null],[5,"new_translate","skia_safe::matrix_path_effect","",null,[[],[["option",4],["patheffect",6]]]],[5,"new","","",null,[[["matrix",3]],[["option",4],["patheffect",6]]]],[0,"stroke_path_effect","skia_safe","",null,null],[5,"new","skia_safe::stroke_path_effect","",null,[[["scalar",6],["join",4],["cap",4]],[["option",4],["patheffect",6]]]],[0,"overdraw_color_filter","skia_safe","",null,null],[17,"NUM_COLORS","skia_safe::overdraw_color_filter","",null,null],[5,"new","","",null,[[],["colorfilter",6]]],[0,"paint_image_filter","skia_safe","",null,null],[0,"perlin_noise_shader","","",null,null],[5,"fractal_noise","skia_safe::perlin_noise_shader","",null,[[["scalar",6]],[["option",4],["shader",6]]]],[5,"turbulence","","",null,[[["scalar",6]],[["option",4],["shader",6]]]],[0,"picture_image_filter","skia_safe","",null,null],[0,"runtime_effect","","",null,null],[0,"uniform","skia_safe::runtime_effect","",null,null],[4,"Type","skia_safe::runtime_effect::uniform","",null,null],[13,"Float","","",151,null],[13,"Float2","","",151,null],[13,"Float3","","",151,null],[13,"Float4","","",151,null],[13,"Float2x2","","",151,null],[13,"Float3x3","","",151,null],[13,"Float4x4","","",151,null],[3,"Flags","","",null,null],[6,"Uniform","skia_safe::runtime_effect","",null,null],[6,"Variable","","",null,null],[6,"Varying","","",null,null],[6,"RuntimeEffect","","",null,null],[5,"new","","",null,[[],[["runtimeeffect",6],["string",3],["result",4]]]],[0,"shader_mask_filter","skia_safe","",null,null],[5,"new","skia_safe::shader_mask_filter","",null,[[],["maskfilter",6]]],[0,"stroke_and_fill_path_effect","skia_safe","",null,null],[5,"new","skia_safe::stroke_and_fill_path_effect","",null,[[],["patheffect",6]]],[0,"table_color_filter","skia_safe","",null,null],[5,"from_table","skia_safe::table_color_filter","",null,[[],["colorfilter",6]]],[5,"from_argb","","",null,[[["option",4]],["colorfilter",6]]],[0,"table_mask_filter","skia_safe","",null,null],[5,"new_gamma_table","skia_safe::table_mask_filter","",null,[[["scalar",6]]]],[5,"new_clip_table","","",null,[[]]],[5,"new","","",null,[[],["maskfilter",6]]],[5,"new_gamma","","",null,[[["scalar",6]],["maskfilter",6]]],[5,"new_clip","","",null,[[],["maskfilter",6]]],[0,"tile_image_filter","skia_safe","",null,null],[0,"trim_path_effect","","",null,null],[4,"Mode","skia_safe::trim_path_effect","",null,null],[13,"Normal","","",152,null],[13,"Inverted","","",152,null],[5,"new","","",null,[[["scalar",6]],[["option",4],["patheffect",6]]]],[0,"xfer_mode_image_filter","skia_safe","",null,null],[0,"shaper","","",null,null],[3,"Feature","skia_safe::shaper","",null,null],[12,"tag","","",153,null],[12,"value","","",153,null],[12,"start","","",153,null],[12,"end","","",153,null],[0,"run_handler","","",null,null],[8,"RunHandler","skia_safe::shaper::run_handler","",null,null],[10,"begin_line","","",154,[[]]],[10,"run_info","","",154,[[["runinfo",3]]]],[10,"commit_run_info","","",154,[[]]],[10,"run_buffer","","",154,[[["runinfo",3]],["buffer",3]]],[10,"commit_run_buffer","","",154,[[["runinfo",3]]]],[10,"commit_line","","",154,[[]]],[3,"RunInfo","","",null,null],[12,"font","","",155,null],[12,"bidi_level","","",155,null],[12,"advance","","",155,null],[12,"glyph_count","","",155,null],[12,"utf8_range","","",155,null],[3,"Buffer","","",null,null],[12,"glyphs","","",156,null],[12,"positions","","",156,null],[12,"offsets","","",156,null],[12,"clusters","","",156,null],[12,"point","","",156,null],[0,"icu","skia_safe::shaper","",null,null],[5,"init","skia_safe::shaper::icu","On Windows, this function writes the file <code>icudtl.dat</code> into â€¦",null,[[]]],[8,"RunHandler","skia_safe::shaper","",null,null],[10,"begin_line","","",154,[[]]],[10,"run_info","","",154,[[["runinfo",3]]]],[10,"commit_run_info","","",154,[[]]],[10,"run_buffer","","",154,[[["runinfo",3]],["buffer",3]]],[10,"commit_run_buffer","","",154,[[["runinfo",3]]]],[10,"commit_line","","",154,[[]]],[6,"Shaper","","",null,null],[8,"RunIterator","","",null,null],[10,"consume","","",157,[[]]],[10,"end_of_current_run","","",157,[[]]],[10,"at_end","","",157,[[]]],[6,"FontRunIterator","","",null,null],[6,"BiDiRunIterator","","",null,null],[6,"ScriptRunIterator","","",null,null],[6,"LanguageRunIterator","","",null,null],[8,"AsRunHandler","","",null,null],[16,"RunHandler","","",158,null],[10,"as_run_handler","","",158,[[]]],[8,"AsNativeRunHandler","","A trait for accessing the native run handler instance â€¦",null,null],[10,"as_native_run_handler","","",159,[[],["skshaper_runhandler",3]]],[3,"TextBlobBuilderRunHandler","","",null,null],[0,"icu","skia_safe","",null,null],[5,"init","skia_safe::icu","On Windows, this function writes the file <code>icudtl.dat</code> into â€¦",null,[[]]],[0,"textlayout","skia_safe","",null,null],[4,"Affinity","skia_safe::textlayout","",null,null],[13,"Upstream","","",160,null],[13,"Downstream","","",160,null],[4,"RectHeightStyle","","",null,null],[13,"Tight","","",161,null],[13,"Max","","",161,null],[13,"IncludeLineSpacingMiddle","","",161,null],[13,"IncludeLineSpacingTop","","",161,null],[13,"IncludeLineSpacingBottom","","",161,null],[13,"Strut","","",161,null],[4,"RectWidthStyle","","",null,null],[13,"Tight","","",162,null],[13,"Max","","",162,null],[4,"TextAlign","","",null,null],[13,"Left","","",163,null],[13,"Right","","",163,null],[13,"Center","","",163,null],[13,"Justify","","",163,null],[13,"Start","","",163,null],[13,"End","","",163,null],[4,"TextDirection","","",null,null],[13,"RTL","","",164,null],[13,"LTR","","",164,null],[3,"PositionWithAffinity","","",null,null],[12,"position","","",165,null],[12,"affinity","","",165,null],[4,"TextBaseline","","",null,null],[13,"Alphabetic","","",166,null],[13,"Ideographic","","",166,null],[4,"TextHeightBehavior","","",null,null],[13,"All","","",167,null],[13,"DisableFirstAscent","","",167,null],[13,"DisableLastDescent","","",167,null],[13,"DisableAll","","",167,null],[4,"DrawOptions","","",null,null],[13,"Record","","",168,null],[13,"Replay","","",168,null],[13,"Direct","","",168,null],[4,"TextDecorationStyle","","",null,null],[13,"Solid","","",169,null],[13,"Double","","",169,null],[13,"Dotted","","",169,null],[13,"Dashed","","",169,null],[13,"Wavy","","",169,null],[4,"TextDecorationMode","","",null,null],[13,"Gaps","","",170,null],[13,"Through","","",170,null],[4,"StyleType","","",null,null],[13,"None","","",171,null],[13,"AllAttributes","","",171,null],[13,"Font","","",171,null],[13,"Foreground","","",171,null],[13,"Background","","",171,null],[13,"Shadow","","",171,null],[13,"Decorations","","",171,null],[13,"LetterSpacing","","",171,null],[13,"WordSpacing","","",171,null],[4,"PlaceholderAlignment","","",null,null],[13,"Baseline","","",172,null],[13,"AboveBaseline","","",172,null],[13,"BelowBaseline","","",172,null],[13,"Top","","",172,null],[13,"Bottom","","",172,null],[13,"Middle","","",172,null],[3,"TextBox","","",null,null],[12,"rect","","",173,null],[12,"direct","","",173,null],[17,"EMPTY_INDEX","","",null,null],[8,"RangeExtensions","","",null,null],[10,"width","","",174,[[]]],[10,"shift","","",174,[[]]],[10,"contains","","",174,[[]]],[10,"intersects","","",174,[[]]],[10,"intersection","","",174,[[]]],[10,"empty","","",174,[[]]],[17,"EMPTY_RANGE","","",null,null],[6,"FontCollection","","",null,null],[3,"StyleMetrics","","",null,null],[12,"text_style","","",175,null],[12,"font_metrics","","",175,null],[3,"LineMetrics","","",null,null],[12,"start_index","","",176,null],[12,"end_index","","",176,null],[12,"end_excluding_whitespaces","","",176,null],[12,"end_including_newline","","",176,null],[12,"hard_break","","",176,null],[12,"ascent","","",176,null],[12,"descent","","",176,null],[12,"unscaled_ascent","","",176,null],[12,"height","","",176,null],[12,"width","","",176,null],[12,"left","","",176,null],[12,"baseline","","",176,null],[12,"line_number","","",176,null],[6,"Paragraph","","",null,null],[6,"TextBoxes","","",null,null],[6,"LineMetricsVector","","",null,null],[6,"ParagraphBuilder","","",null,null],[6,"ParagraphCache","","",null,null],[6,"StrutStyle","","",null,null],[6,"ParagraphStyle","","",null,null],[3,"TextShadow","","",null,null],[12,"color","","",177,null],[12,"offset","","",177,null],[12,"blur_radius","","",177,null],[3,"TextDecoration","","",null,null],[17,"ALL_TEXT_DECORATIONS","","",null,null],[3,"Decoration","","",null,null],[12,"ty","","",178,null],[12,"mode","","",178,null],[12,"color","","",178,null],[12,"style","","",178,null],[12,"thickness_multiplier","","",178,null],[6,"FontFeature","","",null,null],[3,"PlaceholderStyle","","",null,null],[12,"width","","",179,null],[12,"height","","",179,null],[12,"alignment","","",179,null],[12,"baseline","","",179,null],[12,"baseline_offset","","",179,null],[6,"TextStyle","","",null,null],[6,"TextIndex","","",null,null],[6,"TextRange","","",null,null],[17,"EMPTY_TEXT","","",null,null],[3,"Block","","",null,null],[12,"range","","",180,null],[12,"style","","",180,null],[6,"BlockIndex","","",null,null],[6,"BlockRange","","",null,null],[17,"EMPTY_BLOCK","","",null,null],[17,"EMPTY_BLOCKS","","",null,null],[3,"Placeholder","","",null,null],[12,"range","","",181,null],[12,"style","","",181,null],[12,"text_style","","",181,null],[12,"blocks_before","","",181,null],[12,"text_before","","",181,null],[6,"TypefaceFontStyleSet","","",null,null],[6,"TypefaceFontProvider","","",null,null],[3,"FontFamilies","","Efficient reference type to a C++ vector of font family â€¦",null,null],[6,"Codec","skia_safe","",null,null],[4,"EncodedOrigin","","These values match the orientation â€¦",null,null],[13,"TopLeft","","Default",25,null],[13,"TopRight","","Reflected across y-axis",25,null],[13,"BottomRight","","Rotated 180",25,null],[13,"BottomLeft","","Reflected across x-axis",25,null],[13,"LeftTop","","Reflected across x-axis, Rotated 90 CCW",25,null],[13,"RightTop","","Rotated 90 CW",25,null],[13,"RightBottom","","Reflected across x-axis, Rotated 90 CW",25,null],[13,"LeftBottom","","Rotated 90 CCW",25,null],[3,"Borrows","","",null,null],[8,"ConditionallySend","","",null,null],[10,"can_send","","Returns <code>true</code> if the handle can be sent to another thread.",182,[[]]],[10,"wrap_send","","Wrap the handle in a type that can be sent to another â€¦",182,[[],[["result",4],["sendable",3]]]],[3,"Handle","","Wraps a native type that can be represented and used in â€¦",null,null],[3,"RCHandle","","A wrapper type represented by a reference counted pointer â€¦",null,null],[3,"RefHandle","","A wrapper type that represents a native type with a â€¦",null,null],[3,"Sendable","","",null,null],[6,"BBoxHierarchy","","",null,null],[6,"BBHFactory","","",null,null],[6,"Bitmap","","[Bitmap] describes a two-dimensional raster pixel array. [â€¦",null,null],[4,"AutoCanvasRestore","","",null,null],[3,"Canvas","","The canvas type that is returned when it is owned by â€¦",null,null],[3,"OwnedCanvas","","A type representing a canvas that is owned and dropped â€¦",null,null],[3,"Color","","",null,null],[3,"RGB","","",null,null],[12,"r","","",183,null],[12,"g","","",183,null],[12,"b","","",183,null],[3,"HSV","","",null,null],[12,"h","","",184,null],[12,"s","","",184,null],[12,"v","","",184,null],[6,"PMColor","","",null,null],[5,"pre_multiply_argb","","",null,[[["u8cpu",6]],["pmcolor",6]]],[5,"pre_multiply_color","","",null,[[],["pmcolor",6]]],[3,"ColorChannelFlag","","",null,null],[3,"Color4f","","",null,null],[12,"r","","",185,null],[12,"g","","",185,null],[12,"b","","",185,null],[12,"a","","",185,null],[6,"ColorFilter","","",null,null],[3,"ColorSpacePrimaries","","",null,null],[3,"ColorSpaceTransferFn","","",null,null],[12,"g","","",186,null],[12,"a","","",186,null],[12,"b","","",186,null],[12,"c","","",186,null],[12,"d","","",186,null],[12,"e","","",186,null],[12,"f","","",186,null],[6,"ColorSpace","","",null,null],[3,"XYZD50Hash","","",null,null],[12,"0","","",187,null],[6,"ContourMeasure","","",null,null],[6,"ContourMeasureIter","","",null,null],[3,"CubicMap","","",null,null],[6,"Data","","",null,null],[6,"DataTable","","",null,null],[3,"Iter","","",null,null],[6,"DeferredDisplayList","","",null,null],[6,"DeferredDisplayListRecorder","","",null,null],[3,"Document","","",null,null],[6,"DrawLooper","","",null,null],[6,"Drawable","","",null,null],[8,"Flattenable","","",null,null],[10,"type_name","","",188,[[],["cstr",3]]],[10,"serialize","","",188,[[],["data",6]]],[10,"deserialize","","",188,[[],["option",4]]],[8,"NativeFlattenable","","",null,null],[10,"native_flattenable","","",189,[[],["skflattenable",3]]],[10,"native_deserialize","","",189,[[]]],[6,"Font","","",null,null],[3,"FontArguments","","",null,null],[3,"FontMetrics","","",null,null],[12,"top","","",95,null],[12,"ascent","","",95,null],[12,"descent","","",95,null],[12,"bottom","","",95,null],[12,"leading","","",95,null],[12,"avg_char_width","","",95,null],[12,"max_char_width","","",95,null],[12,"x_min","","",95,null],[12,"x_max","","",95,null],[12,"x_height","","",95,null],[12,"cap_height","","",95,null],[6,"FontStyleSet","","",null,null],[6,"FontMgr","","",null,null],[3,"FontStyle","","",null,null],[4,"TextEncoding","","",null,null],[13,"UTF8","","",190,null],[13,"UTF16","","",190,null],[13,"UTF32","","",190,null],[13,"GlyphId","","",190,null],[6,"Image","","",null,null],[6,"ImageFilter","","",null,null],[6,"ImageGenerator","","",null,null],[4,"ColorType","","",null,null],[13,"Unknown","","",191,null],[13,"Alpha8","","",191,null],[13,"RGB565","","",191,null],[13,"ARGB4444","","",191,null],[13,"RGBA8888","","",191,null],[13,"RGB888x","","",191,null],[13,"BGRA8888","","",191,null],[13,"RGBA1010102","","",191,null],[13,"BGRA1010102","","",191,null],[13,"RGB101010x","","",191,null],[13,"BGR101010x","","",191,null],[13,"Gray8","","",191,null],[13,"RGBAF16Norm","","",191,null],[13,"RGBAF16","","",191,null],[13,"RGBAF32","","",191,null],[13,"R8G8UNorm","","",191,null],[13,"A16Float","","",191,null],[13,"R16G16Float","","",191,null],[13,"A16UNorm","","",191,null],[13,"R16G16UNorm","","",191,null],[13,"R16G16B16A16UNorm","","",191,null],[6,"ColorInfo","","",null,null],[6,"ImageInfo","","",null,null],[3,"V2","","",null,null],[12,"x","","",192,null],[12,"y","","",192,null],[3,"V3","","",null,null],[12,"x","","",193,null],[12,"y","","",193,null],[12,"z","","",193,null],[3,"V4","","",null,null],[12,"x","","",194,null],[12,"y","","",194,null],[12,"z","","",194,null],[12,"w","","",194,null],[3,"M44","","",null,null],[6,"MaskFilter","","",null,null],[3,"Matrix","","",null,null],[3,"Matrix44","","",null,null],[3,"Vector4","","",null,null],[17,"MILESTONE","","",null,null],[6,"Paint","","",null,null],[6,"Path","","",null,null],[6,"PathBuilder","","",null,null],[6,"PathEffect","","",null,null],[6,"PathMeasure","","",null,null],[3,"PathSegmentMask","","",null,null],[6,"Picture","","",null,null],[6,"PictureRecorder","","",null,null],[6,"PixelRef","","",null,null],[6,"Pixmap","","",null,null],[3,"IVector","","",null,null],[12,"x","","",195,null],[12,"y","","",195,null],[3,"IPoint","","",null,null],[12,"x","","",195,null],[12,"y","","",195,null],[6,"Vector","","",null,null],[3,"Point","","",null,null],[12,"x","","",196,null],[12,"y","","",196,null],[6,"Vector3","","",null,null],[6,"Color3f","","",null,null],[3,"Point3","","",null,null],[12,"x","","",197,null],[12,"y","","",197,null],[12,"z","","",197,null],[3,"IRect","","",null,null],[12,"left","","",198,null],[12,"top","","",198,null],[12,"right","","",198,null],[12,"bottom","","",198,null],[17,"EMPTY_IRECT","","",null,null],[3,"Rect","","",null,null],[12,"left","","",199,null],[12,"top","","",199,null],[12,"right","","",199,null],[12,"bottom","","",199,null],[8,"RoundOut","","",null,null],[10,"round_out","","",200,[[]]],[6,"Region","","",null,null],[3,"RRect","","",null,null],[3,"RSXform","","",null,null],[12,"scos","","",201,null],[12,"ssin","","",201,null],[12,"tx","","",201,null],[12,"ty","","",201,null],[3,"CubicResampler","","Specify <code>b</code> and <code>c</code> (each between 0...1) to create a shader â€¦",null,null],[3,"FilterOptions","","",null,null],[12,"sampling","","",119,null],[12,"mipmap","","",119,null],[6,"SamplingMode","","",null,null],[3,"SamplingOptions","","",null,null],[12,"use_cubic","","",121,null],[12,"cubic","","",121,null],[12,"filter","","",121,null],[12,"mipmap","","",121,null],[6,"scalar","","",null,null],[8,"Scalar","","",null,null],[18,"ZERO","","",202,null],[18,"NEARLY_ZERO","","",202,null],[18,"ONE","","",202,null],[18,"HALF","","",202,null],[10,"nearly_equal","","",202,[[["scalar",6]]]],[10,"nearly_zero","","",202,[[]]],[8,"Scalars","","",null,null],[10,"are_finite","","",203,[[]]],[5,"radians_to_degrees","","",null,[[["scalar",6]],["scalar",6]]],[6,"Shader","","",null,null],[3,"ISize","","",null,null],[12,"width","","",204,null],[12,"height","","",204,null],[3,"Size","","",null,null],[12,"width","","",205,null],[12,"height","","",205,null],[6,"StrokeRec","","",null,null],[6,"Surface","","",null,null],[6,"SurfaceCharacterization","","",null,null],[4,"PixelGeometry","","",null,null],[13,"Unknown","","",206,null],[13,"RGBH","","",206,null],[13,"BGRH","","",206,null],[13,"RGBV","","",206,null],[13,"BGRV","","",206,null],[3,"SurfacePropsFlags","","",null,null],[3,"SurfaceProps","","",null,null],[5,"test_surface_props_layout","","",null,[[]]],[5,"swap_rb","","",null,[[]]],[5,"swap_rb_inplace","","",null,[[]]],[6,"TextBlob","","",null,null],[6,"TextBlobBuilder","","",null,null],[6,"TextBlobIter","","",null,null],[3,"TextBlobRun","","",null,null],[12,"glyph_indices","","",207,null],[3,"DateTime","","",null,null],[12,"time_zone_minutes","","",208,null],[12,"year","","",208,null],[12,"month","","",208,null],[12,"day_of_week","","",208,null],[12,"day","","",208,null],[12,"hour","","",208,null],[12,"minute","","",208,null],[12,"second","","",208,null],[6,"Typeface","","",null,null],[3,"FourByteTag","","",null,null],[6,"GlyphId","","",null,null],[6,"Unichar","","",null,null],[3,"Budgeted","","",null,null],[6,"Vertices","","",null,null],[6,"YUVAInfo","","Specifies the structure of planes for a YUV image with â€¦",null,null],[6,"YUVAPixmapInfo","","[YUVAInfo] combined with per-plane [ColorType]s and row â€¦",null,null],[6,"YUVAPixmaps","","Helper to store [Pixmap] planes as described by a [â€¦",null,null],[8,"Contains","","",null,null],[10,"contains","","",209,[[]]],[8,"QuickReject","","",null,null],[10,"quick_reject","","",210,[[]]],[6,"ColorMatrix","","",null,null],[3,"HighContrastConfig","","",null,null],[12,"grayscale","","",147,null],[12,"invert_style","","",147,null],[12,"contrast","","",147,null],[6,"RuntimeEffect","","",null,null],[6,"Shaper","","",null,null],[5,"op","","",null,[[["path",6],["pathop",4]],[["option",4],["path",6]]]],[5,"simplify","","",null,[[["path",6]],[["option",4],["path",6]]]],[5,"tight_bounds","","",null,[[["path",6]],[["option",4],["rect",3]]]],[5,"as_winding","","",null,[[["path",6]],[["option",4],["path",6]]]],[6,"OpBuilder","","",null,null],[11,"from","skia_safe::codec","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","skia_safe","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","skia_safe::paint","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","skia_safe::path_types","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"wrap","","",17,[[]]],[11,"unwrap","","",17,[[]]],[11,"inner","","",17,[[]]],[11,"inner_mut","","",17,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","skia_safe::sampling_options","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","skia_safe","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","skia_safe::codec","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"wrap","","",25,[[]]],[11,"unwrap","","",25,[[]]],[11,"inner","","",25,[[]]],[11,"inner_mut","","",25,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","skia_safe::canvas","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from","skia_safe::canvas::lattice","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from","skia_safe::canvas","",211,[[]]],[11,"into","","",211,[[]]],[11,"to_owned","","",211,[[]]],[11,"clone_into","","",211,[[]]],[11,"borrow","","",211,[[]]],[11,"borrow_mut","","",211,[[]]],[11,"try_from","","",211,[[],["result",4]]],[11,"try_into","","",211,[[],["result",4]]],[11,"type_id","","",211,[[],["typeid",3]]],[11,"wrap","","",212,[[]]],[11,"unwrap","","",212,[[]]],[11,"inner","","",212,[[]]],[11,"inner_mut","","",212,[[]]],[11,"from","","",212,[[]]],[11,"into","","",212,[[]]],[11,"borrow","","",212,[[]]],[11,"borrow_mut","","",212,[[]]],[11,"try_from","","",212,[[],["result",4]]],[11,"try_into","","",212,[[],["result",4]]],[11,"type_id","","",212,[[],["typeid",3]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from","","",213,[[]]],[11,"into","","",213,[[]]],[11,"borrow","","",213,[[]]],[11,"borrow_mut","","",213,[[]]],[11,"try_from","","",213,[[],["result",4]]],[11,"try_into","","",213,[[],["result",4]]],[11,"type_id","","",213,[[],["typeid",3]]],[11,"from","","",214,[[]]],[11,"into","","",214,[[]]],[11,"borrow","","",214,[[]]],[11,"borrow_mut","","",214,[[]]],[11,"try_from","","",214,[[],["result",4]]],[11,"try_into","","",214,[[],["result",4]]],[11,"type_id","","",214,[[],["typeid",3]]],[11,"from","","",215,[[]]],[11,"into","","",215,[[]]],[11,"borrow","","",215,[[]]],[11,"borrow_mut","","",215,[[]]],[11,"try_from","","",215,[[],["result",4]]],[11,"try_into","","",215,[[],["result",4]]],[11,"type_id","","",215,[[],["typeid",3]]],[11,"from","","",216,[[]]],[11,"into","","",216,[[]]],[11,"borrow","","",216,[[]]],[11,"borrow_mut","","",216,[[]]],[11,"try_from","","",216,[[],["result",4]]],[11,"try_into","","",216,[[],["result",4]]],[11,"type_id","","",216,[[],["typeid",3]]],[11,"wrap","skia_safe","",217,[[]]],[11,"unwrap","","",217,[[]]],[11,"inner","","",217,[[]]],[11,"inner_mut","","",217,[[]]],[11,"from","","",217,[[]]],[11,"into","","",217,[[]]],[11,"to_owned","","",217,[[]]],[11,"clone_into","","",217,[[]]],[11,"borrow","","",217,[[]]],[11,"borrow_mut","","",217,[[]]],[11,"try_from","","",217,[[],["result",4]]],[11,"try_into","","",217,[[],["result",4]]],[11,"type_id","","",217,[[],["typeid",3]]],[11,"from","","",183,[[]]],[11,"into","","",183,[[]]],[11,"to_owned","","",183,[[]]],[11,"clone_into","","",183,[[]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"try_into","","",183,[[],["result",4]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"from","","",184,[[]]],[11,"into","","",184,[[]]],[11,"to_owned","","",184,[[]]],[11,"clone_into","","",184,[[]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"try_into","","",184,[[],["result",4]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"from","","",218,[[]]],[11,"into","","",218,[[]]],[11,"to_owned","","",218,[[]]],[11,"clone_into","","",218,[[]]],[11,"borrow","","",218,[[]]],[11,"borrow_mut","","",218,[[]]],[11,"try_from","","",218,[[],["result",4]]],[11,"try_into","","",218,[[],["result",4]]],[11,"type_id","","",218,[[],["typeid",3]]],[11,"wrap","","",185,[[]]],[11,"unwrap","","",185,[[]]],[11,"inner","","",185,[[]]],[11,"inner_mut","","",185,[[]]],[11,"from","","",185,[[]]],[11,"into","","",185,[[]]],[11,"to_owned","","",185,[[]]],[11,"clone_into","","",185,[[]]],[11,"borrow","","",185,[[]]],[11,"borrow_mut","","",185,[[]]],[11,"try_from","","",185,[[],["result",4]]],[11,"try_into","","",185,[[],["result",4]]],[11,"type_id","","",185,[[],["typeid",3]]],[11,"from","skia_safe::color_filter","",219,[[]]],[11,"into","","",219,[[]]],[11,"to_owned","","",219,[[]]],[11,"clone_into","","",219,[[]]],[11,"borrow","","",219,[[]]],[11,"borrow_mut","","",219,[[]]],[11,"try_from","","",219,[[],["result",4]]],[11,"try_into","","",219,[[],["result",4]]],[11,"type_id","","",219,[[],["typeid",3]]],[11,"wrap","skia_safe","",220,[[]]],[11,"unwrap","","",220,[[]]],[11,"inner","","",220,[[]]],[11,"inner_mut","","",220,[[]]],[11,"from","","",220,[[]]],[11,"into","","",220,[[]]],[11,"to_owned","","",220,[[]]],[11,"clone_into","","",220,[[]]],[11,"borrow","","",220,[[]]],[11,"borrow_mut","","",220,[[]]],[11,"try_from","","",220,[[],["result",4]]],[11,"try_into","","",220,[[],["result",4]]],[11,"type_id","","",220,[[],["typeid",3]]],[11,"from","","",186,[[]]],[11,"into","","",186,[[]]],[11,"to_owned","","",186,[[]]],[11,"clone_into","","",186,[[]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"try_into","","",186,[[],["result",4]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"from","","",187,[[]]],[11,"into","","",187,[[]]],[11,"to_owned","","",187,[[]]],[11,"clone_into","","",187,[[]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"try_into","","",187,[[],["result",4]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"from","skia_safe::contour_measure","",221,[[]]],[11,"into","","",221,[[]]],[11,"to_owned","","",221,[[]]],[11,"clone_into","","",221,[[]]],[11,"borrow","","",221,[[]]],[11,"borrow_mut","","",221,[[]]],[11,"try_from","","",221,[[],["result",4]]],[11,"try_into","","",221,[[],["result",4]]],[11,"type_id","","",221,[[],["typeid",3]]],[11,"wrap","skia_safe","",222,[[]]],[11,"unwrap","","",222,[[]]],[11,"inner","","",222,[[]]],[11,"inner_mut","","",222,[[]]],[11,"from","","",222,[[]]],[11,"into","","",222,[[]]],[11,"to_owned","","",222,[[]]],[11,"clone_into","","",222,[[]]],[11,"borrow","","",222,[[]]],[11,"borrow_mut","","",222,[[]]],[11,"try_from","","",222,[[],["result",4]]],[11,"try_into","","",222,[[],["result",4]]],[11,"type_id","","",222,[[],["typeid",3]]],[11,"from","","",223,[[]]],[11,"into","","",223,[[]]],[11,"into_iter","","",223,[[]]],[11,"borrow","","",223,[[]]],[11,"borrow_mut","","",223,[[]]],[11,"try_from","","",223,[[],["result",4]]],[11,"try_into","","",223,[[],["result",4]]],[11,"type_id","","",223,[[],["typeid",3]]],[11,"from","skia_safe::document::state","",224,[[]]],[11,"into","","",224,[[]]],[11,"borrow","","",224,[[]]],[11,"borrow_mut","","",224,[[]]],[11,"try_from","","",224,[[],["result",4]]],[11,"try_into","","",224,[[],["result",4]]],[11,"type_id","","",224,[[],["typeid",3]]],[11,"from","","",225,[[]]],[11,"into","","",225,[[]]],[11,"borrow","","",225,[[]]],[11,"borrow_mut","","",225,[[]]],[11,"try_from","","",225,[[],["result",4]]],[11,"try_into","","",225,[[],["result",4]]],[11,"type_id","","",225,[[],["typeid",3]]],[11,"from","skia_safe::document","",226,[[]]],[11,"into","","",226,[[]]],[11,"borrow","","",226,[[]]],[11,"borrow_mut","","",226,[[]]],[11,"try_from","","",226,[[],["result",4]]],[11,"try_into","","",226,[[],["result",4]]],[11,"type_id","","",226,[[],["typeid",3]]],[11,"wrap","skia_safe::draw_looper","",91,[[]]],[11,"unwrap","","",91,[[]]],[11,"inner","","",91,[[]]],[11,"inner_mut","","",91,[[]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"from","skia_safe::font","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"wrap","skia_safe::font_arguments::variation_position","",93,[[]]],[11,"unwrap","","",93,[[]]],[11,"inner","","",93,[[]]],[11,"inner_mut","","",93,[[]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"from","skia_safe::font_arguments","",94,[[]]],[11,"into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"wrap","","",227,[[]]],[11,"unwrap","","",227,[[]]],[11,"inner","","",227,[[]]],[11,"inner_mut","","",227,[[]]],[11,"from","","",227,[[]]],[11,"into","","",227,[[]]],[11,"borrow","","",227,[[]]],[11,"borrow_mut","","",227,[[]]],[11,"try_from","","",227,[[],["result",4]]],[11,"try_into","","",227,[[],["result",4]]],[11,"type_id","","",227,[[],["typeid",3]]],[11,"from","skia_safe::font_metrics","",228,[[]]],[11,"into","","",228,[[]]],[11,"to_owned","","",228,[[]]],[11,"clone_into","","",228,[[]]],[11,"borrow","","",228,[[]]],[11,"borrow_mut","","",228,[[]]],[11,"try_from","","",228,[[],["result",4]]],[11,"try_into","","",228,[[],["result",4]]],[11,"type_id","","",228,[[],["typeid",3]]],[11,"wrap","","",95,[[]]],[11,"unwrap","","",95,[[]]],[11,"inner","","",95,[[]]],[11,"inner_mut","","",95,[[]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"wrap","skia_safe::font_parameters::variation","",96,[[]]],[11,"unwrap","","",96,[[]]],[11,"inner","","",96,[[]]],[11,"inner_mut","","",96,[[]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"from","skia_safe::font_style","",97,[[]]],[11,"into","","",97,[[]]],[11,"to_owned","","",97,[[]]],[11,"clone_into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"wrap","","",229,[[]]],[11,"unwrap","","",229,[[]]],[11,"inner","","",229,[[]]],[11,"inner_mut","","",229,[[]]],[11,"from","","",229,[[]]],[11,"into","","",229,[[]]],[11,"to_owned","","",229,[[]]],[11,"clone_into","","",229,[[]]],[11,"borrow","","",229,[[]]],[11,"borrow_mut","","",229,[[]]],[11,"try_from","","",229,[[],["result",4]]],[11,"try_into","","",229,[[],["result",4]]],[11,"type_id","","",229,[[],["typeid",3]]],[11,"wrap","","",230,[[]]],[11,"unwrap","","",230,[[]]],[11,"inner","","",230,[[]]],[11,"inner_mut","","",230,[[]]],[11,"from","","",230,[[]]],[11,"into","","",230,[[]]],[11,"to_owned","","",230,[[]]],[11,"clone_into","","",230,[[]]],[11,"borrow","","",230,[[]]],[11,"borrow_mut","","",230,[[]]],[11,"try_from","","",230,[[],["result",4]]],[11,"try_into","","",230,[[],["result",4]]],[11,"type_id","","",230,[[],["typeid",3]]],[11,"wrap","","",231,[[]]],[11,"unwrap","","",231,[[]]],[11,"inner","","",231,[[]]],[11,"inner_mut","","",231,[[]]],[11,"from","","",231,[[]]],[11,"into","","",231,[[]]],[11,"to_owned","","",231,[[]]],[11,"clone_into","","",231,[[]]],[11,"borrow","","",231,[[]]],[11,"borrow_mut","","",231,[[]]],[11,"try_from","","",231,[[],["result",4]]],[11,"try_into","","",231,[[],["result",4]]],[11,"type_id","","",231,[[],["typeid",3]]],[11,"wrap","skia_safe","",190,[[]]],[11,"unwrap","","",190,[[]]],[11,"inner","","",190,[[]]],[11,"inner_mut","","",190,[[]]],[11,"from","","",190,[[]]],[11,"into","","",190,[[]]],[11,"to_owned","","",190,[[]]],[11,"clone_into","","",190,[[]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"try_into","","",190,[[],["result",4]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"from","skia_safe::image","",98,[[]]],[11,"into","","",98,[[]]],[11,"to_owned","","",98,[[]]],[11,"clone_into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"to_owned","","",100,[[]]],[11,"clone_into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from","skia_safe::image_filter","",101,[[]]],[11,"into","","",101,[[]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from","skia_safe::image_filter::crop_rect","",232,[[]]],[11,"into","","",232,[[]]],[11,"to_owned","","",232,[[]]],[11,"clone_into","","",232,[[]]],[11,"borrow","","",232,[[]]],[11,"borrow_mut","","",232,[[]]],[11,"try_from","","",232,[[],["result",4]]],[11,"try_into","","",232,[[],["result",4]]],[11,"type_id","","",232,[[],["typeid",3]]],[11,"wrap","skia_safe::image_filter","",233,[[]]],[11,"unwrap","","",233,[[]]],[11,"inner","","",233,[[]]],[11,"inner_mut","","",233,[[]]],[11,"from","","",233,[[]]],[11,"into","","",233,[[]]],[11,"to_owned","","",233,[[]]],[11,"clone_into","","",233,[[]]],[11,"borrow","","",233,[[]]],[11,"borrow_mut","","",233,[[]]],[11,"try_from","","",233,[[],["result",4]]],[11,"try_into","","",233,[[],["result",4]]],[11,"type_id","","",233,[[],["typeid",3]]],[11,"wrap","skia_safe","",191,[[]]],[11,"unwrap","","",191,[[]]],[11,"inner","","",191,[[]]],[11,"inner_mut","","",191,[[]]],[11,"from","","",191,[[]]],[11,"into","","",191,[[]]],[11,"to_owned","","",191,[[]]],[11,"clone_into","","",191,[[]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"try_into","","",191,[[],["result",4]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"wrap","","",192,[[]]],[11,"unwrap","","",192,[[]]],[11,"inner","","",192,[[]]],[11,"inner_mut","","",192,[[]]],[11,"from","","",192,[[]]],[11,"into","","",192,[[]]],[11,"to_owned","","",192,[[]]],[11,"clone_into","","",192,[[]]],[11,"borrow","","",192,[[]]],[11,"borrow_mut","","",192,[[]]],[11,"try_from","","",192,[[],["result",4]]],[11,"try_into","","",192,[[],["result",4]]],[11,"type_id","","",192,[[],["typeid",3]]],[11,"wrap","","",193,[[]]],[11,"unwrap","","",193,[[]]],[11,"inner","","",193,[[]]],[11,"inner_mut","","",193,[[]]],[11,"from","","",193,[[]]],[11,"into","","",193,[[]]],[11,"to_owned","","",193,[[]]],[11,"clone_into","","",193,[[]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"try_into","","",193,[[],["result",4]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"wrap","","",194,[[]]],[11,"unwrap","","",194,[[]]],[11,"inner","","",194,[[]]],[11,"inner_mut","","",194,[[]]],[11,"from","","",194,[[]]],[11,"into","","",194,[[]]],[11,"to_owned","","",194,[[]]],[11,"clone_into","","",194,[[]]],[11,"borrow","","",194,[[]]],[11,"borrow_mut","","",194,[[]]],[11,"try_from","","",194,[[],["result",4]]],[11,"try_into","","",194,[[],["result",4]]],[11,"type_id","","",194,[[],["typeid",3]]],[11,"wrap","","",234,[[]]],[11,"unwrap","","",234,[[]]],[11,"inner","","",234,[[]]],[11,"inner_mut","","",234,[[]]],[11,"from","","",234,[[]]],[11,"into","","",234,[[]]],[11,"to_owned","","",234,[[]]],[11,"clone_into","","",234,[[]]],[11,"borrow","","",234,[[]]],[11,"borrow_mut","","",234,[[]]],[11,"try_from","","",234,[[],["result",4]]],[11,"try_into","","",234,[[],["result",4]]],[11,"type_id","","",234,[[],["typeid",3]]],[11,"from","skia_safe::matrix","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"to_owned","","",103,[[]]],[11,"clone_into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","","",235,[[]]],[11,"into","","",235,[[]]],[11,"to_owned","","",235,[[]]],[11,"clone_into","","",235,[[]]],[11,"borrow","","",235,[[]]],[11,"borrow_mut","","",235,[[]]],[11,"try_from","","",235,[[],["result",4]]],[11,"try_into","","",235,[[],["result",4]]],[11,"type_id","","",235,[[],["typeid",3]]],[11,"wrap","","",236,[[]]],[11,"unwrap","","",236,[[]]],[11,"inner","","",236,[[]]],[11,"inner_mut","","",236,[[]]],[11,"from","","",236,[[]]],[11,"into","","",236,[[]]],[11,"to_owned","","",236,[[]]],[11,"clone_into","","",236,[[]]],[11,"borrow","","",236,[[]]],[11,"borrow_mut","","",236,[[]]],[11,"try_from","","",236,[[],["result",4]]],[11,"try_into","","",236,[[],["result",4]]],[11,"type_id","","",236,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"to_owned","","",104,[[]]],[11,"clone_into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"to_owned","","",105,[[]]],[11,"clone_into","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"wrap","skia_safe::matrix44","",237,[[]]],[11,"unwrap","","",237,[[]]],[11,"inner","","",237,[[]]],[11,"inner_mut","","",237,[[]]],[11,"from","","",237,[[]]],[11,"into","","",237,[[]]],[11,"to_owned","","",237,[[]]],[11,"clone_into","","",237,[[]]],[11,"borrow","","",237,[[]]],[11,"borrow_mut","","",237,[[]]],[11,"try_from","","",237,[[],["result",4]]],[11,"try_into","","",237,[[],["result",4]]],[11,"type_id","","",237,[[],["typeid",3]]],[11,"from","","",238,[[]]],[11,"into","","",238,[[]]],[11,"to_owned","","",238,[[]]],[11,"clone_into","","",238,[[]]],[11,"borrow","","",238,[[]]],[11,"borrow_mut","","",238,[[]]],[11,"try_from","","",238,[[],["result",4]]],[11,"try_into","","",238,[[],["result",4]]],[11,"type_id","","",238,[[],["typeid",3]]],[11,"wrap","","",239,[[]]],[11,"unwrap","","",239,[[]]],[11,"inner","","",239,[[]]],[11,"inner_mut","","",239,[[]]],[11,"from","","",239,[[]]],[11,"into","","",239,[[]]],[11,"to_owned","","",239,[[]]],[11,"clone_into","","",239,[[]]],[11,"borrow","","",239,[[]]],[11,"borrow_mut","","",239,[[]]],[11,"try_from","","",239,[[],["result",4]]],[11,"try_into","","",239,[[],["result",4]]],[11,"type_id","","",239,[[],["typeid",3]]],[11,"from","skia_safe::path","",109,[[]]],[11,"into","","",109,[[]]],[11,"to_owned","","",109,[[]]],[11,"clone_into","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"to_owned","","",110,[[]]],[11,"clone_into","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"to_owned","","",111,[[]]],[11,"clone_into","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"from","","",240,[[]]],[11,"into","","",240,[[]]],[11,"into_iter","","",240,[[]]],[11,"borrow","","",240,[[]]],[11,"borrow_mut","","",240,[[]]],[11,"try_from","","",240,[[],["result",4]]],[11,"try_into","","",240,[[],["result",4]]],[11,"type_id","","",240,[[],["typeid",3]]],[11,"from","","",241,[[]]],[11,"into","","",241,[[]]],[11,"into_iter","","",241,[[]]],[11,"borrow","","",241,[[]]],[11,"borrow_mut","","",241,[[]]],[11,"try_from","","",241,[[],["result",4]]],[11,"try_into","","",241,[[],["result",4]]],[11,"type_id","","",241,[[],["typeid",3]]],[11,"from","skia_safe::path_effect::point_data","",242,[[]]],[11,"into","","",242,[[]]],[11,"to_owned","","",242,[[]]],[11,"clone_into","","",242,[[]]],[11,"borrow","","",242,[[]]],[11,"borrow_mut","","",242,[[]]],[11,"try_from","","",242,[[],["result",4]]],[11,"try_into","","",242,[[],["result",4]]],[11,"type_id","","",242,[[],["typeid",3]]],[11,"wrap","skia_safe::path_effect","",112,[[]]],[11,"unwrap","","",112,[[]]],[11,"inner","","",112,[[]]],[11,"inner_mut","","",112,[[]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"from","skia_safe::path_measure","",243,[[]]],[11,"into","","",243,[[]]],[11,"to_owned","","",243,[[]]],[11,"clone_into","","",243,[[]]],[11,"borrow","","",243,[[]]],[11,"borrow_mut","","",243,[[]]],[11,"try_from","","",243,[[],["result",4]]],[11,"try_into","","",243,[[],["result",4]]],[11,"type_id","","",243,[[],["typeid",3]]],[11,"from","skia_safe::path","",244,[[]]],[11,"into","","",244,[[]]],[11,"to_owned","","",244,[[]]],[11,"clone_into","","",244,[[]]],[11,"borrow","","",244,[[]]],[11,"borrow_mut","","",244,[[]]],[11,"try_from","","",244,[[],["result",4]]],[11,"try_into","","",244,[[],["result",4]]],[11,"type_id","","",244,[[],["typeid",3]]],[11,"wrap","skia_safe","",195,[[]]],[11,"unwrap","","",195,[[]]],[11,"inner","","",195,[[]]],[11,"inner_mut","","",195,[[]]],[11,"from","","",195,[[]]],[11,"into","","",195,[[]]],[11,"to_owned","","",195,[[]]],[11,"clone_into","","",195,[[]]],[11,"borrow","","",195,[[]]],[11,"borrow_mut","","",195,[[]]],[11,"try_from","","",195,[[],["result",4]]],[11,"try_into","","",195,[[],["result",4]]],[11,"type_id","","",195,[[],["typeid",3]]],[11,"wrap","","",196,[[]]],[11,"unwrap","","",196,[[]]],[11,"inner","","",196,[[]]],[11,"inner_mut","","",196,[[]]],[11,"from","","",196,[[]]],[11,"into","","",196,[[]]],[11,"to_owned","","",196,[[]]],[11,"clone_into","","",196,[[]]],[11,"borrow","","",196,[[]]],[11,"borrow_mut","","",196,[[]]],[11,"try_from","","",196,[[],["result",4]]],[11,"try_into","","",196,[[],["result",4]]],[11,"type_id","","",196,[[],["typeid",3]]],[11,"wrap","","",197,[[]]],[11,"unwrap","","",197,[[]]],[11,"inner","","",197,[[]]],[11,"inner_mut","","",197,[[]]],[11,"from","","",197,[[]]],[11,"into","","",197,[[]]],[11,"to_owned","","",197,[[]]],[11,"clone_into","","",197,[[]]],[11,"borrow","","",197,[[]]],[11,"borrow_mut","","",197,[[]]],[11,"try_from","","",197,[[],["result",4]]],[11,"try_into","","",197,[[],["result",4]]],[11,"type_id","","",197,[[],["typeid",3]]],[11,"wrap","","",198,[[]]],[11,"unwrap","","",198,[[]]],[11,"inner","","",198,[[]]],[11,"inner_mut","","",198,[[]]],[11,"from","","",198,[[]]],[11,"into","","",198,[[]]],[11,"to_owned","","",198,[[]]],[11,"clone_into","","",198,[[]]],[11,"borrow","","",198,[[]]],[11,"borrow_mut","","",198,[[]]],[11,"try_from","","",198,[[],["result",4]]],[11,"try_into","","",198,[[],["result",4]]],[11,"type_id","","",198,[[],["typeid",3]]],[11,"wrap","","",199,[[]]],[11,"unwrap","","",199,[[]]],[11,"inner","","",199,[[]]],[11,"inner_mut","","",199,[[]]],[11,"from","","",199,[[]]],[11,"into","","",199,[[]]],[11,"to_owned","","",199,[[]]],[11,"clone_into","","",199,[[]]],[11,"borrow","","",199,[[]]],[11,"borrow_mut","","",199,[[]]],[11,"try_from","","",199,[[],["result",4]]],[11,"try_into","","",199,[[],["result",4]]],[11,"type_id","","",199,[[],["typeid",3]]],[11,"from","skia_safe::region","",114,[[]]],[11,"into","","",114,[[]]],[11,"to_owned","","",114,[[]]],[11,"clone_into","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"wrap","","",245,[[]]],[11,"unwrap","","",245,[[]]],[11,"inner","","",245,[[]]],[11,"inner_mut","","",245,[[]]],[11,"from","","",245,[[]]],[11,"into","","",245,[[]]],[11,"into_iter","","",245,[[]]],[11,"to_owned","","",245,[[]]],[11,"clone_into","","",245,[[]]],[11,"borrow","","",245,[[]]],[11,"borrow_mut","","",245,[[]]],[11,"try_from","","",245,[[],["result",4]]],[11,"try_into","","",245,[[],["result",4]]],[11,"type_id","","",245,[[],["typeid",3]]],[11,"wrap","","",246,[[]]],[11,"unwrap","","",246,[[]]],[11,"inner","","",246,[[]]],[11,"inner_mut","","",246,[[]]],[11,"from","","",246,[[]]],[11,"into","","",246,[[]]],[11,"into_iter","","",246,[[]]],[11,"to_owned","","",246,[[]]],[11,"clone_into","","",246,[[]]],[11,"borrow","","",246,[[]]],[11,"borrow_mut","","",246,[[]]],[11,"try_from","","",246,[[],["result",4]]],[11,"try_into","","",246,[[],["result",4]]],[11,"type_id","","",246,[[],["typeid",3]]],[11,"wrap","","",247,[[]]],[11,"unwrap","","",247,[[]]],[11,"inner","","",247,[[]]],[11,"inner_mut","","",247,[[]]],[11,"from","","",247,[[]]],[11,"into","","",247,[[]]],[11,"into_iter","","",247,[[]]],[11,"to_owned","","",247,[[]]],[11,"clone_into","","",247,[[]]],[11,"borrow","","",247,[[]]],[11,"borrow_mut","","",247,[[]]],[11,"try_from","","",247,[[],["result",4]]],[11,"try_into","","",247,[[],["result",4]]],[11,"type_id","","",247,[[],["typeid",3]]],[11,"from","skia_safe::rrect","",117,[[]]],[11,"into","","",117,[[]]],[11,"to_owned","","",117,[[]]],[11,"clone_into","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"to_owned","","",118,[[]]],[11,"clone_into","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"wrap","","",248,[[]]],[11,"unwrap","","",248,[[]]],[11,"inner","","",248,[[]]],[11,"inner_mut","","",248,[[]]],[11,"from","","",248,[[]]],[11,"into","","",248,[[]]],[11,"to_owned","","",248,[[]]],[11,"clone_into","","",248,[[]]],[11,"borrow","","",248,[[]]],[11,"borrow_mut","","",248,[[]]],[11,"try_from","","",248,[[],["result",4]]],[11,"try_into","","",248,[[],["result",4]]],[11,"type_id","","",248,[[],["typeid",3]]],[11,"wrap","skia_safe","",201,[[]]],[11,"unwrap","","",201,[[]]],[11,"inner","","",201,[[]]],[11,"inner_mut","","",201,[[]]],[11,"from","","",201,[[]]],[11,"into","","",201,[[]]],[11,"to_owned","","",201,[[]]],[11,"clone_into","","",201,[[]]],[11,"borrow","","",201,[[]]],[11,"borrow_mut","","",201,[[]]],[11,"try_from","","",201,[[],["result",4]]],[11,"try_into","","",201,[[],["result",4]]],[11,"type_id","","",201,[[],["typeid",3]]],[11,"wrap","skia_safe::image","",249,[[]]],[11,"unwrap","","",249,[[]]],[11,"inner","","",249,[[]]],[11,"inner_mut","","",249,[[]]],[11,"from","","",249,[[]]],[11,"into","","",249,[[]]],[11,"to_owned","","",249,[[]]],[11,"clone_into","","",249,[[]]],[11,"borrow","","",249,[[]]],[11,"borrow_mut","","",249,[[]]],[11,"try_from","","",249,[[],["result",4]]],[11,"try_into","","",249,[[],["result",4]]],[11,"type_id","","",249,[[],["typeid",3]]],[11,"from","skia_safe::sampling_options","",119,[[]]],[11,"into","","",119,[[]]],[11,"to_owned","","",119,[[]]],[11,"clone_into","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"wrap","","",120,[[]]],[11,"unwrap","","",120,[[]]],[11,"inner","","",120,[[]]],[11,"inner_mut","","",120,[[]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"to_owned","","",120,[[]]],[11,"clone_into","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"wrap","","",121,[[]]],[11,"unwrap","","",121,[[]]],[11,"inner","","",121,[[]]],[11,"inner_mut","","",121,[[]]],[11,"from","","",121,[[]]],[11,"into","","",121,[[]]],[11,"to_owned","","",121,[[]]],[11,"clone_into","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"from","skia_safe::shader","",122,[[]]],[11,"into","","",122,[[]]],[11,"to_owned","","",122,[[]]],[11,"clone_into","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"from","","",123,[[]]],[11,"into","","",123,[[]]],[11,"to_owned","","",123,[[]]],[11,"clone_into","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"to_owned","","",124,[[]]],[11,"clone_into","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"wrap","skia_safe","",204,[[]]],[11,"unwrap","","",204,[[]]],[11,"inner","","",204,[[]]],[11,"inner_mut","","",204,[[]]],[11,"from","","",204,[[]]],[11,"into","","",204,[[]]],[11,"to_owned","","",204,[[]]],[11,"clone_into","","",204,[[]]],[11,"borrow","","",204,[[]]],[11,"borrow_mut","","",204,[[]]],[11,"try_from","","",204,[[],["result",4]]],[11,"try_into","","",204,[[],["result",4]]],[11,"type_id","","",204,[[],["typeid",3]]],[11,"wrap","","",205,[[]]],[11,"unwrap","","",205,[[]]],[11,"inner","","",205,[[]]],[11,"inner_mut","","",205,[[]]],[11,"from","","",205,[[]]],[11,"into","","",205,[[]]],[11,"to_owned","","",205,[[]]],[11,"clone_into","","",205,[[]]],[11,"borrow","","",205,[[]]],[11,"borrow_mut","","",205,[[]]],[11,"try_from","","",205,[[],["result",4]]],[11,"try_into","","",205,[[],["result",4]]],[11,"type_id","","",205,[[],["typeid",3]]],[11,"from","skia_safe::stroke_rec","",125,[[]]],[11,"into","","",125,[[]]],[11,"to_owned","","",125,[[]]],[11,"clone_into","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"to_owned","","",126,[[]]],[11,"clone_into","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"from","skia_safe::surface","",127,[[]]],[11,"into","","",127,[[]]],[11,"to_owned","","",127,[[]]],[11,"clone_into","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"to_owned","","",128,[[]]],[11,"clone_into","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"from","","",129,[[]]],[11,"into","","",129,[[]]],[11,"to_owned","","",129,[[]]],[11,"clone_into","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"wrap","skia_safe","",206,[[]]],[11,"unwrap","","",206,[[]]],[11,"inner","","",206,[[]]],[11,"inner_mut","","",206,[[]]],[11,"from","","",206,[[]]],[11,"into","","",206,[[]]],[11,"to_owned","","",206,[[]]],[11,"clone_into","","",206,[[]]],[11,"borrow","","",206,[[]]],[11,"borrow_mut","","",206,[[]]],[11,"try_from","","",206,[[],["result",4]]],[11,"try_into","","",206,[[],["result",4]]],[11,"type_id","","",206,[[],["typeid",3]]],[11,"from","","",250,[[]]],[11,"into","","",250,[[]]],[11,"to_owned","","",250,[[]]],[11,"clone_into","","",250,[[]]],[11,"borrow","","",250,[[]]],[11,"borrow_mut","","",250,[[]]],[11,"try_from","","",250,[[],["result",4]]],[11,"try_into","","",250,[[],["result",4]]],[11,"type_id","","",250,[[],["typeid",3]]],[11,"wrap","","",251,[[]]],[11,"unwrap","","",251,[[]]],[11,"inner","","",251,[[]]],[11,"inner_mut","","",251,[[]]],[11,"from","","",251,[[]]],[11,"into","","",251,[[]]],[11,"to_owned","","",251,[[]]],[11,"clone_into","","",251,[[]]],[11,"borrow","","",251,[[]]],[11,"borrow_mut","","",251,[[]]],[11,"try_from","","",251,[[],["result",4]]],[11,"try_into","","",251,[[],["result",4]]],[11,"type_id","","",251,[[],["typeid",3]]],[11,"from","","",207,[[]]],[11,"into","","",207,[[]]],[11,"borrow","","",207,[[]]],[11,"borrow_mut","","",207,[[]]],[11,"try_from","","",207,[[],["result",4]]],[11,"try_into","","",207,[[],["result",4]]],[11,"type_id","","",207,[[],["typeid",3]]],[11,"wrap","","",208,[[]]],[11,"unwrap","","",208,[[]]],[11,"inner","","",208,[[]]],[11,"inner_mut","","",208,[[]]],[11,"from","","",208,[[]]],[11,"into","","",208,[[]]],[11,"to_owned","","",208,[[]]],[11,"clone_into","","",208,[[]]],[11,"borrow","","",208,[[]]],[11,"borrow_mut","","",208,[[]]],[11,"try_from","","",208,[[],["result",4]]],[11,"try_into","","",208,[[],["result",4]]],[11,"type_id","","",208,[[],["typeid",3]]],[11,"from","skia_safe::typeface","",130,[[]]],[11,"into","","",130,[[]]],[11,"to_owned","","",130,[[]]],[11,"clone_into","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"to_owned","","",131,[[]]],[11,"clone_into","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"wrap","skia_safe","",252,[[]]],[11,"unwrap","","",252,[[]]],[11,"inner","","",252,[[]]],[11,"inner_mut","","",252,[[]]],[11,"from","","",252,[[]]],[11,"into","","",252,[[]]],[11,"to_owned","","",252,[[]]],[11,"clone_into","","",252,[[]]],[11,"borrow","","",252,[[]]],[11,"borrow_mut","","",252,[[]]],[11,"try_from","","",252,[[],["result",4]]],[11,"try_into","","",252,[[],["result",4]]],[11,"type_id","","",252,[[],["typeid",3]]],[11,"wrap","","",253,[[]]],[11,"unwrap","","",253,[[]]],[11,"inner","","",253,[[]]],[11,"inner_mut","","",253,[[]]],[11,"from","","",253,[[]]],[11,"into","","",253,[[]]],[11,"to_owned","","",253,[[]]],[11,"clone_into","","",253,[[]]],[11,"borrow","","",253,[[]]],[11,"borrow_mut","","",253,[[]]],[11,"try_from","","",253,[[],["result",4]]],[11,"try_into","","",253,[[],["result",4]]],[11,"type_id","","",253,[[],["typeid",3]]],[11,"from","skia_safe::vertices","",132,[[]]],[11,"into","","",132,[[]]],[11,"to_owned","","",132,[[]]],[11,"clone_into","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"to_owned","","",133,[[]]],[11,"clone_into","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"from","","",254,[[]]],[11,"into","","",254,[[]]],[11,"to_owned","","",254,[[]]],[11,"clone_into","","",254,[[]]],[11,"borrow","","",254,[[]]],[11,"borrow_mut","","",254,[[]]],[11,"try_from","","",254,[[],["result",4]]],[11,"try_into","","",254,[[],["result",4]]],[11,"type_id","","",254,[[],["typeid",3]]],[11,"wrap","","",134,[[]]],[11,"unwrap","","",134,[[]]],[11,"inner","","",134,[[]]],[11,"inner_mut","","",134,[[]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"to_owned","","",134,[[]]],[11,"clone_into","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"wrap","","",135,[[]]],[11,"unwrap","","",135,[[]]],[11,"inner","","",135,[[]]],[11,"inner_mut","","",135,[[]]],[11,"from","","",135,[[]]],[11,"into","","",135,[[]]],[11,"to_owned","","",135,[[]]],[11,"clone_into","","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"from","","",255,[[]]],[11,"into","","",255,[[]]],[11,"to_owned","","",255,[[]]],[11,"clone_into","","",255,[[]]],[11,"borrow","","",255,[[]]],[11,"borrow_mut","","",255,[[]]],[11,"try_from","","",255,[[],["result",4]]],[11,"try_into","","",255,[[],["result",4]]],[11,"type_id","","",255,[[],["typeid",3]]],[11,"from","skia_safe::yuva_pixmap_info","",136,[[]]],[11,"into","","",136,[[]]],[11,"to_owned","","",136,[[]]],[11,"clone_into","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"from","skia_safe::yuva_info","",137,[[]]],[11,"into","","",137,[[]]],[11,"to_owned","","",137,[[]]],[11,"clone_into","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"wrap","","",138,[[]]],[11,"unwrap","","",138,[[]]],[11,"inner","","",138,[[]]],[11,"inner_mut","","",138,[[]]],[11,"from","","",138,[[]]],[11,"into","","",138,[[]]],[11,"to_owned","","",138,[[]]],[11,"clone_into","","",138,[[]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"from","skia_safe::yuva_pixmap_info","",139,[[]]],[11,"into","","",139,[[]]],[11,"to_owned","","",139,[[]]],[11,"clone_into","","",139,[[]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"from","skia_safe::pdf","",140,[[]]],[11,"into","","",140,[[]]],[11,"to_owned","","",140,[[]]],[11,"clone_into","","",140,[[]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"from","","",256,[[]]],[11,"into","","",256,[[]]],[11,"borrow","","",256,[[]]],[11,"borrow_mut","","",256,[[]]],[11,"try_from","","",256,[[],["result",4]]],[11,"try_into","","",256,[[],["result",4]]],[11,"type_id","","",256,[[],["typeid",3]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"from","skia_safe::path_1d_path_effect","",142,[[]]],[11,"into","","",142,[[]]],[11,"to_owned","","",142,[[]]],[11,"clone_into","","",142,[[]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"from","skia_safe::arithmetic_image_filter","",143,[[]]],[11,"into","","",143,[[]]],[11,"to_owned","","",143,[[]]],[11,"clone_into","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"from","skia_safe::drop_shadow_image_filter","",144,[[]]],[11,"into","","",144,[[]]],[11,"to_owned","","",144,[[]]],[11,"clone_into","","",144,[[]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"from","skia_safe::gradient_shader","",257,[[]]],[11,"into","","",257,[[]]],[11,"to_owned","","",257,[[]]],[11,"clone_into","","",257,[[]]],[11,"borrow","","",257,[[]]],[11,"borrow_mut","","",257,[[]]],[11,"try_from","","",257,[[],["result",4]]],[11,"try_into","","",257,[[],["result",4]]],[11,"type_id","","",257,[[],["typeid",3]]],[11,"from","","",145,[[]]],[11,"into","","",145,[[]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"from","skia_safe::high_contrast_config","",146,[[]]],[11,"into","","",146,[[]]],[11,"to_owned","","",146,[[]]],[11,"clone_into","","",146,[[]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"wrap","skia_safe::high_contrast_filter","",147,[[]]],[11,"unwrap","","",147,[[]]],[11,"inner","","",147,[[]]],[11,"inner_mut","","",147,[[]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"to_owned","","",147,[[]]],[11,"clone_into","","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"from","skia_safe::image_filters","",148,[[]]],[11,"into","","",148,[[]]],[11,"to_owned","","",148,[[]]],[11,"clone_into","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"wrap","","",258,[[]]],[11,"unwrap","","",258,[[]]],[11,"inner","","",258,[[]]],[11,"inner_mut","","",258,[[]]],[11,"from","","",258,[[]]],[11,"into","","",258,[[]]],[11,"to_owned","","",258,[[]]],[11,"clone_into","","",258,[[]]],[11,"borrow","","",258,[[]]],[11,"borrow_mut","","",258,[[]]],[11,"try_from","","",258,[[],["result",4]]],[11,"try_into","","",258,[[],["result",4]]],[11,"type_id","","",258,[[],["typeid",3]]],[11,"from","skia_safe::layer_draw_looper","",259,[[]]],[11,"into","","",259,[[]]],[11,"to_owned","","",259,[[]]],[11,"clone_into","","",259,[[]]],[11,"borrow","","",259,[[]]],[11,"borrow_mut","","",259,[[]]],[11,"try_from","","",259,[[],["result",4]]],[11,"try_into","","",259,[[],["result",4]]],[11,"type_id","","",259,[[],["typeid",3]]],[11,"from","","",149,[[]]],[11,"into","","",149,[[]]],[11,"to_owned","","",149,[[]]],[11,"clone_into","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"to_owned","","",150,[[]]],[11,"clone_into","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"from","skia_safe::runtime_effect::uniform","",151,[[]]],[11,"into","","",151,[[]]],[11,"to_owned","","",151,[[]]],[11,"clone_into","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"from","","",260,[[]]],[11,"into","","",260,[[]]],[11,"to_owned","","",260,[[]]],[11,"clone_into","","",260,[[]]],[11,"borrow","","",260,[[]]],[11,"borrow_mut","","",260,[[]]],[11,"try_from","","",260,[[],["result",4]]],[11,"try_into","","",260,[[],["result",4]]],[11,"type_id","","",260,[[],["typeid",3]]],[11,"from","skia_safe::trim_path_effect","",152,[[]]],[11,"into","","",152,[[]]],[11,"to_owned","","",152,[[]]],[11,"clone_into","","",152,[[]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"from","skia_safe::gpu","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","skia_safe::gpu::context_options","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"wrap","","",35,[[]]],[11,"unwrap","","",35,[[]]],[11,"inner","","",35,[[]]],[11,"inner_mut","","",35,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"wrap","skia_safe::gpu::d3d","",261,[[]]],[11,"unwrap","","",261,[[]]],[11,"inner","","",261,[[]]],[11,"inner_mut","","",261,[[]]],[11,"from","","",261,[[]]],[11,"into","","",261,[[]]],[11,"to_owned","","",261,[[]]],[11,"clone_into","","",261,[[]]],[11,"borrow","","",261,[[]]],[11,"borrow_mut","","",261,[[]]],[11,"try_from","","",261,[[],["result",4]]],[11,"try_into","","",261,[[],["result",4]]],[11,"type_id","","",261,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"wrap","","",40,[[]]],[11,"unwrap","","",40,[[]]],[11,"inner","","",40,[[]]],[11,"inner_mut","","",40,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"wrap","","",41,[[]]],[11,"unwrap","","",41,[[]]],[11,"inner","","",41,[[]]],[11,"inner_mut","","",41,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","skia_safe::gpu","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","skia_safe::gpu::gl","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"wrap","","",45,[[]]],[11,"unwrap","","",45,[[]]],[11,"inner","","",45,[[]]],[11,"inner_mut","","",45,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"wrap","","",46,[[]]],[11,"unwrap","","",46,[[]]],[11,"inner","","",46,[[]]],[11,"inner_mut","","",46,[[]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",262,[[]]],[11,"into","","",262,[[]]],[11,"to_owned","","",262,[[]]],[11,"clone_into","","",262,[[]]],[11,"borrow","","",262,[[]]],[11,"borrow_mut","","",262,[[]]],[11,"try_from","","",262,[[],["result",4]]],[11,"try_into","","",262,[[],["result",4]]],[11,"type_id","","",262,[[],["typeid",3]]],[11,"wrap","skia_safe::gpu","",263,[[]]],[11,"unwrap","","",263,[[]]],[11,"inner","","",263,[[]]],[11,"inner_mut","","",263,[[]]],[11,"from","","",263,[[]]],[11,"into","","",263,[[]]],[11,"borrow","","",263,[[]]],[11,"borrow_mut","","",263,[[]]],[11,"try_from","","",263,[[],["result",4]]],[11,"try_into","","",263,[[],["result",4]]],[11,"type_id","","",263,[[],["typeid",3]]],[11,"from","skia_safe::gpu::vk","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"wrap","","",264,[[]]],[11,"unwrap","","",264,[[]]],[11,"inner","","",264,[[]]],[11,"inner_mut","","",264,[[]]],[11,"from","","",264,[[]]],[11,"into","","",264,[[]]],[11,"to_owned","","",264,[[]]],[11,"clone_into","","",264,[[]]],[11,"borrow","","",264,[[]]],[11,"borrow_mut","","",264,[[]]],[11,"try_from","","",264,[[],["result",4]]],[11,"try_into","","",264,[[],["result",4]]],[11,"type_id","","",264,[[],["typeid",3]]],[11,"wrap","","",265,[[]]],[11,"unwrap","","",265,[[]]],[11,"inner","","",265,[[]]],[11,"inner_mut","","",265,[[]]],[11,"from","","",265,[[]]],[11,"into","","",265,[[]]],[11,"to_owned","","",265,[[]]],[11,"clone_into","","",265,[[]]],[11,"borrow","","",265,[[]]],[11,"borrow_mut","","",265,[[]]],[11,"try_from","","",265,[[],["result",4]]],[11,"try_into","","",265,[[],["result",4]]],[11,"type_id","","",265,[[],["typeid",3]]],[11,"from","","",266,[[]]],[11,"into","","",266,[[]]],[11,"borrow","","",266,[[]]],[11,"borrow_mut","","",266,[[]]],[11,"try_from","","",266,[[],["result",4]]],[11,"try_into","","",266,[[],["result",4]]],[11,"type_id","","",266,[[],["typeid",3]]],[11,"wrap","","",60,[[]]],[11,"unwrap","","",60,[[]]],[11,"inner","","",60,[[]]],[11,"inner_mut","","",60,[[]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",267,[[]]],[11,"into","","",267,[[]]],[11,"to_owned","","",267,[[]]],[11,"clone_into","","",267,[[]]],[11,"borrow","","",267,[[]]],[11,"borrow_mut","","",267,[[]]],[11,"try_from","","",267,[[],["result",4]]],[11,"try_into","","",267,[[],["result",4]]],[11,"type_id","","",267,[[],["typeid",3]]],[11,"wrap","","",61,[[]]],[11,"unwrap","","",61,[[]]],[11,"inner","","",61,[[]]],[11,"inner_mut","","",61,[[]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"wrap","","",62,[[]]],[11,"unwrap","","",62,[[]]],[11,"inner","","",62,[[]]],[11,"inner_mut","","",62,[[]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"wrap","","",64,[[]]],[11,"unwrap","","",64,[[]]],[11,"inner","","",64,[[]]],[11,"inner_mut","","",64,[[]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",268,[[]]],[11,"into","","",268,[[]]],[11,"borrow","","",268,[[]]],[11,"borrow_mut","","",268,[[]]],[11,"try_from","","",268,[[],["result",4]]],[11,"try_into","","",268,[[],["result",4]]],[11,"type_id","","",268,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","skia_safe::textlayout","",160,[[]]],[11,"into","","",160,[[]]],[11,"to_owned","","",160,[[]]],[11,"clone_into","","",160,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"from","","",161,[[]]],[11,"into","","",161,[[]]],[11,"to_owned","","",161,[[]]],[11,"clone_into","","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"from","","",162,[[]]],[11,"into","","",162,[[]]],[11,"to_owned","","",162,[[]]],[11,"clone_into","","",162,[[]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"from","","",163,[[]]],[11,"into","","",163,[[]]],[11,"to_owned","","",163,[[]]],[11,"clone_into","","",163,[[]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"from","","",164,[[]]],[11,"into","","",164,[[]]],[11,"to_owned","","",164,[[]]],[11,"clone_into","","",164,[[]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"from","","",165,[[]]],[11,"into","","",165,[[]]],[11,"to_owned","","",165,[[]]],[11,"clone_into","","",165,[[]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"try_into","","",165,[[],["result",4]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"from","","",166,[[]]],[11,"into","","",166,[[]]],[11,"to_owned","","",166,[[]]],[11,"clone_into","","",166,[[]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"from","","",167,[[]]],[11,"into","","",167,[[]]],[11,"to_owned","","",167,[[]]],[11,"clone_into","","",167,[[]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"from","","",168,[[]]],[11,"into","","",168,[[]]],[11,"to_owned","","",168,[[]]],[11,"clone_into","","",168,[[]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"wrap","","",173,[[]]],[11,"unwrap","","",173,[[]]],[11,"inner","","",173,[[]]],[11,"inner_mut","","",173,[[]]],[11,"from","","",173,[[]]],[11,"into","","",173,[[]]],[11,"to_owned","","",173,[[]]],[11,"clone_into","","",173,[[]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"wrap","","",175,[[]]],[11,"unwrap","","",175,[[]]],[11,"inner","","",175,[[]]],[11,"inner_mut","","",175,[[]]],[11,"from","","",175,[[]]],[11,"into","","",175,[[]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"try_into","","",175,[[],["result",4]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"wrap","","",176,[[]]],[11,"unwrap","","",176,[[]]],[11,"inner","","",176,[[]]],[11,"inner_mut","","",176,[[]]],[11,"from","","",176,[[]]],[11,"into","","",176,[[]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"try_into","","",176,[[],["result",4]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"wrap","","",177,[[]]],[11,"unwrap","","",177,[[]]],[11,"inner","","",177,[[]]],[11,"inner_mut","","",177,[[]]],[11,"from","","",177,[[]]],[11,"into","","",177,[[]]],[11,"to_owned","","",177,[[]]],[11,"clone_into","","",177,[[]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"try_into","","",177,[[],["result",4]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"from","","",169,[[]]],[11,"into","","",169,[[]]],[11,"to_owned","","",169,[[]]],[11,"clone_into","","",169,[[]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"try_into","","",169,[[],["result",4]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"from","","",170,[[]]],[11,"into","","",170,[[]]],[11,"to_owned","","",170,[[]]],[11,"clone_into","","",170,[[]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"try_into","","",170,[[],["result",4]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"from","","",171,[[]]],[11,"into","","",171,[[]]],[11,"to_owned","","",171,[[]]],[11,"clone_into","","",171,[[]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"try_into","","",171,[[],["result",4]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"from","","",172,[[]]],[11,"into","","",172,[[]]],[11,"to_owned","","",172,[[]]],[11,"clone_into","","",172,[[]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"try_into","","",172,[[],["result",4]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"from","","",269,[[]]],[11,"into","","",269,[[]]],[11,"to_owned","","",269,[[]]],[11,"clone_into","","",269,[[]]],[11,"borrow","","",269,[[]]],[11,"borrow_mut","","",269,[[]]],[11,"try_from","","",269,[[],["result",4]]],[11,"try_into","","",269,[[],["result",4]]],[11,"type_id","","",269,[[],["typeid",3]]],[11,"wrap","","",178,[[]]],[11,"unwrap","","",178,[[]]],[11,"inner","","",178,[[]]],[11,"inner_mut","","",178,[[]]],[11,"from","","",178,[[]]],[11,"into","","",178,[[]]],[11,"to_owned","","",178,[[]]],[11,"clone_into","","",178,[[]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"try_into","","",178,[[],["result",4]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"wrap","","",179,[[]]],[11,"unwrap","","",179,[[]]],[11,"inner","","",179,[[]]],[11,"inner_mut","","",179,[[]]],[11,"from","","",179,[[]]],[11,"into","","",179,[[]]],[11,"to_owned","","",179,[[]]],[11,"clone_into","","",179,[[]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"try_into","","",179,[[],["result",4]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"wrap","","",180,[[]]],[11,"unwrap","","",180,[[]]],[11,"inner","","",180,[[]]],[11,"inner_mut","","",180,[[]]],[11,"from","","",180,[[]]],[11,"into","","",180,[[]]],[11,"to_owned","","",180,[[]]],[11,"clone_into","","",180,[[]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"try_into","","",180,[[],["result",4]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"wrap","","",181,[[]]],[11,"unwrap","","",181,[[]]],[11,"inner","","",181,[[]]],[11,"inner_mut","","",181,[[]]],[11,"from","","",181,[[]]],[11,"into","","",181,[[]]],[11,"to_owned","","",181,[[]]],[11,"clone_into","","",181,[[]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"try_into","","",181,[[],["result",4]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"from","","",270,[[]]],[11,"into","","",270,[[]]],[11,"borrow","","",270,[[]]],[11,"borrow_mut","","",270,[[]]],[11,"try_from","","",270,[[],["result",4]]],[11,"try_into","","",270,[[],["result",4]]],[11,"type_id","","",270,[[],["typeid",3]]],[11,"from","skia_safe::shaper","",153,[[]]],[11,"into","","",153,[[]]],[11,"to_owned","","",153,[[]]],[11,"clone_into","","",153,[[]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"from","skia_safe::shaper::run_handler","",155,[[]]],[11,"into","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"from","","",156,[[]]],[11,"into","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"from","skia_safe::shaper","",271,[[]]],[11,"into","","",271,[[]]],[11,"borrow","","",271,[[]]],[11,"borrow_mut","","",271,[[]]],[11,"try_from","","",271,[[],["result",4]]],[11,"try_into","","",271,[[],["result",4]]],[11,"type_id","","",271,[[],["typeid",3]]],[11,"from","skia_safe","",272,[[]]],[11,"into","","",272,[[]]],[11,"into_iter","","",272,[[]]],[11,"to_owned","","",272,[[]]],[11,"clone_into","","",272,[[]]],[11,"borrow","","",272,[[]]],[11,"borrow_mut","","",272,[[]]],[11,"try_from","","",272,[[],["result",4]]],[11,"try_into","","",272,[[],["result",4]]],[11,"type_id","","",272,[[],["typeid",3]]],[11,"from","","",273,[[]]],[11,"into","","",273,[[]]],[11,"into_iter","","",273,[[]]],[11,"to_owned","","",273,[[]]],[11,"clone_into","","",273,[[]]],[11,"borrow","","",273,[[]]],[11,"borrow_mut","","",273,[[]]],[11,"try_from","","",273,[[],["result",4]]],[11,"try_into","","",273,[[],["result",4]]],[11,"type_id","","",273,[[],["typeid",3]]],[11,"from","","",274,[[]]],[11,"into","","",274,[[]]],[11,"to_owned","","",274,[[]]],[11,"clone_into","","",274,[[]]],[11,"borrow","","",274,[[]]],[11,"borrow_mut","","",274,[[]]],[11,"try_from","","",274,[[],["result",4]]],[11,"try_into","","",274,[[],["result",4]]],[11,"type_id","","",274,[[],["typeid",3]]],[11,"from","","",275,[[]]],[11,"into","","",275,[[]]],[11,"into_iter","","",275,[[]]],[11,"borrow","","",275,[[]]],[11,"borrow_mut","","",275,[[]]],[11,"try_from","","",275,[[],["result",4]]],[11,"try_into","","",275,[[],["result",4]]],[11,"type_id","","",275,[[],["typeid",3]]],[11,"from","","",276,[[]]],[11,"into","","",276,[[]]],[11,"borrow","","",276,[[]]],[11,"borrow_mut","","",276,[[]]],[11,"try_from","","",276,[[],["result",4]]],[11,"try_into","","",276,[[],["result",4]]],[11,"type_id","","",276,[[],["typeid",3]]],[11,"from","skia_safe::private::gpu","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","skia_safe::svg::canvas","",74,[[]]],[11,"into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"wrap","skia_safe::utils","",79,[[]]],[11,"unwrap","","",79,[[]]],[11,"inner","","",79,[[]]],[11,"inner_mut","","",79,[[]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"wrap","","",80,[[]]],[11,"unwrap","","",80,[[]]],[11,"inner","","",80,[[]]],[11,"inner_mut","","",80,[[]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","skia_safe::utils::interpolator","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","skia_safe::utils::shadow_utils","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","skia_safe::utils::text_utils","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"eq","skia_safe::path_types","",16,[[["skpathdirection",4]]]],[11,"eq","skia_safe::image_filter","",101,[[["skimagefilter_mapdirection",4]]]],[11,"eq","skia_safe::font","",92,[[["skfont_edging",4]]]],[11,"eq","skia_safe::paint","",14,[[["skpaint_style",4]]]],[11,"eq","skia_safe::gpu::gl","",44,[[["grglstandard",4]]]],[11,"eq","skia_safe::yuva_pixmap_info","",139,[[["skyuvapixmapinfo_datatype",4]]]],[11,"eq","skia_safe::gpu","",30,[[["grprotected",4]]]],[11,"eq","skia_safe::path","",109,[[["skpath_arcsize",4]]]],[11,"eq","skia_safe","",7,[[["skencodedimageformat",4]]]],[11,"eq","skia_safe::rrect","",117,[[["skrrect_type",4]]]],[11,"eq","skia_safe::drop_shadow_image_filter","",144,[[["skdropshadowimagefilter_shadowmode",4]]]],[11,"eq","skia_safe::paint","",12,[[["skpaint_cap",4]]]],[11,"eq","skia_safe::textlayout","",169,[[["skia_textlayout_textdecorationstyle",4]]]],[11,"eq","skia_safe","",4,[[["skclipop",4]]]],[11,"eq","skia_safe::textlayout","",162,[[["skia_textlayout_rectwidthstyle",4]]]],[11,"eq","skia_safe::shader","",122,[[["skshader_gradienttype",4]]]],[11,"eq","skia_safe::gpu::vk","",50,[[["vkformat",4]]]],[11,"eq","skia_safe::canvas","",84,[[["skcanvas_srcrectconstraint",4]]]],[11,"eq","skia_safe::textlayout","",166,[[["skia_textlayout_textbaseline",4]]]],[11,"eq","skia_safe","",3,[[["skblurstyle",4]]]],[11,"eq","skia_safe::textlayout","",171,[[["skia_textlayout_styletype",4]]]],[11,"eq","skia_safe::gpu","",31,[[["grsurfaceorigin",4]]]],[11,"eq","skia_safe","",9,[[["skfonthinting",4]]]],[11,"eq","skia_safe::utils::interpolator","",75,[[["skinterpolatorbase_result",4]]]],[11,"eq","skia_safe::gpu::context_options","",33,[[["grcontextoptions_enable",4]]]],[11,"eq","skia_safe","",21,[[["skpathop",4]]]],[11,"eq","skia_safe::yuva_pixmap_info","",136,[[["skyuvainfo_planeconfig",4]]]],[11,"eq","skia_safe::path","",110,[[["skpath_addpathmode",4]]]],[11,"eq","skia_safe::gpu::vk","",52,[[["vkimagetiling",4]]]],[11,"eq","skia_safe::matrix","",102,[[["skapplyperspectiveclip",4]]]],[11,"eq","skia_safe::textlayout","",168,[[["skia_textlayout_drawoptions",4]]]],[11,"eq","skia_safe::surface","",128,[[["sksurface_backendhandleaccess",4]]]],[11,"eq","skia_safe::gpu::vk","",49,[[["vkfilter",4]]]],[11,"eq","skia_safe::canvas::lattice","",85,[[["skcanvas_lattice_recttype",4]]]],[11,"eq","skia_safe::gpu::vk","",58,[[["vksamplerycbcrrange",4]]]],[11,"eq","skia_safe::gpu::gl","",43,[[["grglformat",4]]]],[11,"eq","skia_safe::sampling_options","",19,[[["skmipmapmode",4]]]],[11,"eq","skia_safe::path_types","",17,[[["skpathverb",4]]]],[11,"eq","skia_safe::path_1d_path_effect","",142,[[["skpath1dpatheffect_style",4]]]],[11,"eq","skia_safe","",1,[[["skblendmode",4]]]],[11,"eq","","",8,[[["skfilterquality",4]]]],[11,"eq","skia_safe::gpu::vk","",59,[[["vksharingmode",4]]]],[11,"eq","skia_safe::gpu","",29,[[["grrenderable",4]]]],[11,"eq","skia_safe::textlayout","",163,[[["skia_textlayout_textalign",4]]]],[11,"eq","skia_safe::paint","",13,[[["skpaint_join",4]]]],[11,"eq","skia_safe::gpu::vk","",47,[[["vkchromalocation",4]]]],[11,"eq","skia_safe::codec","",0,[[["skcodec_result",4]]]],[11,"eq","skia_safe::rrect","",118,[[["skrrect_corner",4]]]],[11,"eq","skia_safe::typeface","",130,[[["sktypeface_serializebehavior",4]]]],[11,"eq","skia_safe::gpu","",32,[[["grsemaphoressubmitted",4]]]],[11,"eq","skia_safe::textlayout","",160,[[["skia_textlayout_affinity",4]]]],[11,"eq","skia_safe","",2,[[["skblendmodecoeff",4]]]],[11,"eq","","",10,[[["skalphatype",4]]]],[11,"eq","skia_safe::runtime_effect::uniform","",151,[[["skruntimeeffect_uniform_type",4]]]],[11,"eq","skia_safe","",20,[[["sktilemode",4]]]],[11,"eq","skia_safe::high_contrast_config","",146,[[["skhighcontrastconfig_invertstyle",4]]]],[11,"eq","skia_safe::region","",114,[[["skregion_op",4]]]],[11,"eq","skia_safe::textlayout","",164,[[["skia_textlayout_textdirection",4]]]],[11,"eq","skia_safe::codec","",22,[[["skcodec_selectionpolicy",4]]]],[11,"eq","skia_safe::pdf","",140,[[["skpdf_documentstructuretype",4]]]],[11,"eq","skia_safe::image","",99,[[["skimage_cachinghint",4]]]],[11,"eq","skia_safe::stroke_rec","",125,[[["skstrokerec_initstyle",4]]]],[11,"eq","skia_safe::surface","",127,[[["sksurface_contentchangemode",4]]]],[11,"eq","skia_safe","",5,[[["skcolorchannel",4]]]],[11,"eq","skia_safe::font_style","",97,[[["skfontstyle_slant",4]]]],[11,"eq","skia_safe::stroke_rec","",126,[[["skstrokerec_style",4]]]],[11,"eq","skia_safe::gpu::vk","",57,[[["vksamplerycbcrmodelconversion",4]]]],[11,"eq","skia_safe","",11,[[["skyuvcolorspace",4]]]],[11,"eq","skia_safe::gpu","",28,[[["grmipmapped",4]]]],[11,"eq","skia_safe::surface","",129,[[["sksurface_backendsurfaceaccess",4]]]],[11,"eq","skia_safe::image_filters","",148,[[["skimagefilters_dither",4]]]],[11,"eq","skia_safe::textlayout","",161,[[["skia_textlayout_rectheightstyle",4]]]],[11,"eq","skia_safe::gpu","",27,[[["grbackendapi",4]]]],[11,"eq","skia_safe::path_types","",15,[[["skpathfilltype",4]]]],[11,"eq","skia_safe::textlayout","",172,[[["skia_textlayout_placeholderalignment",4]]]],[11,"eq","","",170,[[["skia_textlayout_textdecorationmode",4]]]],[11,"eq","skia_safe::path","",111,[[["skpath_verb",4]]]],[11,"eq","skia_safe::textlayout","",167,[[["skia_textlayout_textheightbehavior",4]]]],[11,"eq","skia_safe::trim_path_effect","",152,[[["sktrimpatheffect_mode",4]]]],[11,"eq","skia_safe::sampling_options","",18,[[["skfiltermode",4]]]],[11,"eq","skia_safe::utils::text_utils","",78,[[["sktextutils_align",4]]]],[11,"eq","skia_safe","",6,[[["skcoveragemode",4]]]],[11,"eq","skia_safe::gpu::vk","",51,[[["vkimagelayout",4]]]],[11,"eq","skia_safe::yuva_info","",137,[[["skyuvainfo_siting",4]]]],[11,"eq","skia_safe::private::gpu","",72,[[["grsltype",4]]]],[11,"eq","skia_safe::image","",100,[[["skimage_compressiontype",4]]]],[11,"eq","skia_safe::canvas","",83,[[["skcanvas_pointmode",4]]]],[11,"eq","skia_safe::image","",98,[[["skimage_bitdepth",4]]]],[11,"eq","skia_safe::gpu::context_options","",34,[[["grcontextoptions_shadercachestrategy",4]]]],[11,"eq","skia_safe::codec","",23,[[["skcodec_zeroinitialized",4]]]],[11,"eq","skia_safe::vertices","",132,[[["skvertices_vertexmode",4]]]],[11,"eq","skia_safe::matrix","",103,[[["skmatrix_scaletofit",4]]]],[11,"eq","skia_safe::vertices","",133,[[["skvertices_attribute_usage",4]]]],[11,"from","skia_safe::gpu::gl","",43,[[],["grglformat",4]]],[11,"from","skia_safe::path","",111,[[["skpathverb",4]],["skpath_verb",4]]],[11,"fmt","skia_safe","",3,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::path_1d_path_effect","",142,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::gpu::vk","",48,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::gpu","",26,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",29,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::gpu::vk","",55,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::textlayout","",166,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::vertices","",133,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::region","",114,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::gpu","",27,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::stroke_rec","",126,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe","",7,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::typeface","",130,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::gpu::gl","",44,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::path_types","",17,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::shaper","",153,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe","",20,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::gpu","",31,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::paint","",13,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::font_style","",97,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::textlayout","",165,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::rrect","",117,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::surface","",129,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::paint","",14,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::image","",98,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::pdf","",140,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::trim_path_effect","",152,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe","",6,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::textlayout","",169,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",170,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::private::gpu","",72,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::yuva_pixmap_info","",139,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::gpu::vk","",50,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::gpu","",32,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::runtime_effect::uniform","",151,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::textlayout","",172,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::codec","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::textlayout","",161,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::font","",92,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe","",21,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",1,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::paint","",12,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::drop_shadow_image_filter","",144,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::textlayout","",171,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::yuva_pixmap_info","",136,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::gpu::vk","",59,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::path_types","",15,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::canvas","",83,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::gpu::context_options","",33,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::utils::text_utils","",78,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::sampling_options","",18,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::textlayout","",164,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::matrix","",103,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::textlayout","",163,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",168,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::image","",99,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::gpu::vk","",57,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::image_filters","",148,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe","",9,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::matrix","",102,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe","",10,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",5,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::canvas::lattice","",85,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::gpu::vk","",52,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::path_types","",16,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::textlayout","",162,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe","",2,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",11,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::path","",111,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",109,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::surface","",127,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::textlayout","",160,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::gpu","",30,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::textlayout","",167,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::gpu::vk","",47,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::gpu::context_options","",34,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::yuva_info","",137,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::gpu::vk","",53,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::image_filter","",101,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::gpu::vk","",51,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe","",4,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::stroke_rec","",125,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::rrect","",118,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::utils::interpolator","",75,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::codec","",22,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::path","",110,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::gpu","",28,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::shader","",122,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::high_contrast_config","",146,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::canvas","",84,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::surface","",128,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::image","",100,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::gpu::vk","",56,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",49,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::gpu::gl","",43,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::vertices","",132,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe","",8,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::gpu::vk","",58,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::sampling_options","",19,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","skia_safe::codec","",23,[[["formatter",3]],[["result",4],["error",3]]]],[11,"default","skia_safe::textlayout","",171,[[],["skia_textlayout_styletype",4]]],[11,"default","","",169,[[],["skia_textlayout_textdecorationstyle",4]]],[11,"default","skia_safe","",3,[[],["skblurstyle",4]]],[11,"default","","",4,[[],["skclipop",4]]],[11,"default","skia_safe::paint","",13,[[],["skpaint_join",4]]],[11,"default","skia_safe","",11,[[],["skyuvcolorspace",4]]],[11,"default","skia_safe::path_types","",16,[[],["skpathdirection",4]]],[11,"default","skia_safe::textlayout","",170,[[],["skia_textlayout_textdecorationmode",4]]],[11,"default","","",172,[[],["skia_textlayout_placeholderalignment",4]]],[11,"default","skia_safe","",20,[[],["sktilemode",4]]],[11,"default","skia_safe::textlayout","",166,[[],["skia_textlayout_textbaseline",4]]],[11,"default","","",161,[[],["skia_textlayout_rectheightstyle",4]]],[11,"default","","",163,[[],["skia_textlayout_textalign",4]]],[11,"default","skia_safe::paint","",12,[[],["skpaint_cap",4]]],[11,"default","skia_safe::canvas::lattice","",85,[[],["skcanvas_lattice_recttype",4]]],[11,"default","skia_safe::textlayout","",165,[[],["skia_textlayout_positionwithaffinity",3]]],[11,"default","","",162,[[],["skia_textlayout_rectwidthstyle",4]]],[11,"default","","",160,[[],["skia_textlayout_affinity",4]]],[11,"default","skia_safe","",1,[[],["skblendmode",4]]],[11,"clone","skia_safe::paint","",13,[[],["skpaint_join",4]]],[11,"clone","skia_safe::stroke_rec","",126,[[],["skstrokerec_style",4]]],[11,"clone","skia_safe::image_filter","",101,[[],["skimagefilter_mapdirection",4]]],[11,"clone","skia_safe::canvas","",83,[[],["skcanvas_pointmode",4]]],[11,"clone","skia_safe","",3,[[],["skblurstyle",4]]],[11,"clone","skia_safe::image","",99,[[],["skimage_cachinghint",4]]],[11,"clone","skia_safe::gpu::vk","",56,[[],["vkrect2d",3]]],[11,"clone","skia_safe","",8,[[],["skfilterquality",4]]],[11,"clone","skia_safe::textlayout","",168,[[],["skia_textlayout_drawoptions",4]]],[11,"clone","skia_safe::path","",111,[[],["skpath_verb",4]]],[11,"clone","skia_safe::pdf","",140,[[],["skpdf_documentstructuretype",4]]],[11,"clone","skia_safe::gpu","",30,[[],["grprotected",4]]],[11,"clone","skia_safe","",1,[[],["skblendmode",4]]],[11,"clone","skia_safe::gpu::vk","",51,[[],["vkimagelayout",4]]],[11,"clone","skia_safe","",6,[[],["skcoveragemode",4]]],[11,"clone","skia_safe::paint","",12,[[],["skpaint_cap",4]]],[11,"clone","skia_safe::font_style","",97,[[],["skfontstyle_slant",4]]],[11,"clone","skia_safe::runtime_effect::uniform","",151,[[],["skruntimeeffect_uniform_type",4]]],[11,"clone","skia_safe::textlayout","",171,[[],["skia_textlayout_styletype",4]]],[11,"clone","skia_safe::image","",100,[[],["skimage_compressiontype",4]]],[11,"clone","skia_safe::gpu","",32,[[],["grsemaphoressubmitted",4]]],[11,"clone","skia_safe::path","",110,[[],["skpath_addpathmode",4]]],[11,"clone","skia_safe::gpu::vk","",58,[[],["vksamplerycbcrrange",4]]],[11,"clone","skia_safe::stroke_rec","",125,[[],["skstrokerec_initstyle",4]]],[11,"clone","skia_safe::codec","",0,[[],["skcodec_result",4]]],[11,"clone","skia_safe::path_types","",16,[[],["skpathdirection",4]]],[11,"clone","skia_safe::textlayout","",165,[[],["skia_textlayout_positionwithaffinity",3]]],[11,"clone","skia_safe::private::gpu","",72,[[],["grsltype",4]]],[11,"clone","skia_safe::codec","",22,[[],["skcodec_selectionpolicy",4]]],[11,"clone","skia_safe","",4,[[],["skclipop",4]]],[11,"clone","skia_safe::gpu::vk","",47,[[],["vkchromalocation",4]]],[11,"clone","skia_safe::path_1d_path_effect","",142,[[],["skpath1dpatheffect_style",4]]],[11,"clone","skia_safe::gpu::context_options","",33,[[],["grcontextoptions_enable",4]]],[11,"clone","skia_safe::gpu::vk","",55,[[],["vkphysicaldevicefeatures2",3]]],[11,"clone","skia_safe::font","",92,[[],["skfont_edging",4]]],[11,"clone","skia_safe::canvas","",84,[[],["skcanvas_srcrectconstraint",4]]],[11,"clone","skia_safe::typeface","",130,[[],["sktypeface_serializebehavior",4]]],[11,"clone","skia_safe","",21,[[],["skpathop",4]]],[11,"clone","skia_safe::trim_path_effect","",152,[[],["sktrimpatheffect_mode",4]]],[11,"clone","skia_safe::textlayout","",170,[[],["skia_textlayout_textdecorationmode",4]]],[11,"clone","","",162,[[],["skia_textlayout_rectwidthstyle",4]]],[11,"clone","skia_safe::surface","",128,[[],["sksurface_backendhandleaccess",4]]],[11,"clone","skia_safe","",2,[[],["skblendmodecoeff",4]]],[11,"clone","","",7,[[],["skencodedimageformat",4]]],[11,"clone","skia_safe::canvas::lattice","",85,[[],["skcanvas_lattice_recttype",4]]],[11,"clone","skia_safe","",5,[[],["skcolorchannel",4]]],[11,"clone","skia_safe::path","",109,[[],["skpath_arcsize",4]]],[11,"clone","skia_safe","",9,[[],["skfonthinting",4]]],[11,"clone","skia_safe::surface","",129,[[],["sksurface_backendsurfaceaccess",4]]],[11,"clone","skia_safe::textlayout","",164,[[],["skia_textlayout_textdirection",4]]],[11,"clone","skia_safe::yuva_pixmap_info","",139,[[],["skyuvapixmapinfo_datatype",4]]],[11,"clone","","",136,[[],["skyuvainfo_planeconfig",4]]],[11,"clone","skia_safe::rrect","",118,[[],["skrrect_corner",4]]],[11,"clone","skia_safe::gpu::vk","",50,[[],["vkformat",4]]],[11,"clone","skia_safe::gpu::gl","",44,[[],["grglstandard",4]]],[11,"clone","skia_safe::gpu","",29,[[],["grrenderable",4]]],[11,"clone","skia_safe::high_contrast_config","",146,[[],["skhighcontrastconfig_invertstyle",4]]],[11,"clone","skia_safe::gpu::context_options","",34,[[],["grcontextoptions_shadercachestrategy",4]]],[11,"clone","skia_safe::path_types","",17,[[],["skpathverb",4]]],[11,"clone","skia_safe","",10,[[],["skalphatype",4]]],[11,"clone","skia_safe::codec","",23,[[],["skcodec_zeroinitialized",4]]],[11,"clone","skia_safe::image","",98,[[],["skimage_bitdepth",4]]],[11,"clone","skia_safe::gpu","",28,[[],["grmipmapped",4]]],[11,"clone","skia_safe::gpu::vk","",52,[[],["vkimagetiling",4]]],[11,"clone","skia_safe::matrix","",103,[[],["skmatrix_scaletofit",4]]],[11,"clone","skia_safe::vertices","",133,[[],["skvertices_attribute_usage",4]]],[11,"clone","skia_safe::yuva_info","",137,[[],["skyuvainfo_siting",4]]],[11,"clone","skia_safe::textlayout","",163,[[],["skia_textlayout_textalign",4]]],[11,"clone","","",167,[[],["skia_textlayout_textheightbehavior",4]]],[11,"clone","","",161,[[],["skia_textlayout_rectheightstyle",4]]],[11,"clone","skia_safe::gpu::vk","",57,[[],["vksamplerycbcrmodelconversion",4]]],[11,"clone","skia_safe::utils::interpolator","",75,[[],["skinterpolatorbase_result",4]]],[11,"clone","skia_safe::sampling_options","",19,[[],["skmipmapmode",4]]],[11,"clone","skia_safe::matrix","",102,[[],["skapplyperspectiveclip",4]]],[11,"clone","skia_safe::textlayout","",172,[[],["skia_textlayout_placeholderalignment",4]]],[11,"clone","skia_safe::surface","",127,[[],["sksurface_contentchangemode",4]]],[11,"clone","skia_safe::gpu::vk","",49,[[],["vkfilter",4]]],[11,"clone","skia_safe::rrect","",117,[[],["skrrect_type",4]]],[11,"clone","skia_safe::gpu::gl","",43,[[],["grglformat",4]]],[11,"clone","skia_safe::textlayout","",160,[[],["skia_textlayout_affinity",4]]],[11,"clone","skia_safe","",11,[[],["skyuvcolorspace",4]]],[11,"clone","skia_safe::region","",114,[[],["skregion_op",4]]],[11,"clone","skia_safe::textlayout","",169,[[],["skia_textlayout_textdecorationstyle",4]]],[11,"clone","skia_safe::gpu::vk","",48,[[],["vkextent2d",3]]],[11,"clone","","",53,[[],["vkoffset2d",3]]],[11,"clone","skia_safe::image_filters","",148,[[],["skimagefilters_dither",4]]],[11,"clone","skia_safe::gpu::vk","",59,[[],["vksharingmode",4]]],[11,"clone","skia_safe::textlayout","",166,[[],["skia_textlayout_textbaseline",4]]],[11,"clone","skia_safe::sampling_options","",18,[[],["skfiltermode",4]]],[11,"clone","skia_safe::path_types","",15,[[],["skpathfilltype",4]]],[11,"clone","skia_safe::utils::text_utils","",78,[[],["sktextutils_align",4]]],[11,"clone","skia_safe::vertices","",132,[[],["skvertices_vertexmode",4]]],[11,"clone","skia_safe::shaper","",153,[[],["skshaper_feature",3]]],[11,"clone","skia_safe::shader","",122,[[],["skshader_gradienttype",4]]],[11,"clone","skia_safe::paint","",14,[[],["skpaint_style",4]]],[11,"clone","skia_safe::gpu","",31,[[],["grsurfaceorigin",4]]],[11,"clone","skia_safe::drop_shadow_image_filter","",144,[[],["skdropshadowimagefilter_shadowmode",4]]],[11,"clone","skia_safe::gpu","",27,[[],["grbackendapi",4]]],[11,"clone","skia_safe","",20,[[],["sktilemode",4]]],[11,"hash","skia_safe::gpu","",29,[[]]],[11,"hash","skia_safe::stroke_rec","",126,[[]]],[11,"hash","skia_safe::textlayout","",166,[[]]],[11,"hash","skia_safe","",3,[[]]],[11,"hash","skia_safe::yuva_info","",137,[[]]],[11,"hash","skia_safe::rrect","",118,[[]]],[11,"hash","skia_safe::gpu::context_options","",34,[[]]],[11,"hash","skia_safe::textlayout","",160,[[]]],[11,"hash","skia_safe::utils::interpolator","",75,[[]]],[11,"hash","skia_safe::shader","",122,[[]]],[11,"hash","skia_safe::gpu::vk","",49,[[]]],[11,"hash","skia_safe::runtime_effect::uniform","",151,[[]]],[11,"hash","skia_safe::vertices","",132,[[]]],[11,"hash","skia_safe::gpu::vk","",52,[[]]],[11,"hash","skia_safe::matrix","",102,[[]]],[11,"hash","skia_safe::path_1d_path_effect","",142,[[]]],[11,"hash","skia_safe::paint","",12,[[]]],[11,"hash","skia_safe::gpu::vk","",59,[[]]],[11,"hash","skia_safe::image","",99,[[]]],[11,"hash","skia_safe::high_contrast_config","",146,[[]]],[11,"hash","skia_safe::textlayout","",172,[[]]],[11,"hash","","",163,[[]]],[11,"hash","skia_safe::paint","",13,[[]]],[11,"hash","skia_safe","",1,[[]]],[11,"hash","skia_safe::private::gpu","",72,[[]]],[11,"hash","skia_safe::path_types","",15,[[]]],[11,"hash","skia_safe","",9,[[]]],[11,"hash","skia_safe::gpu","",32,[[]]],[11,"hash","","",30,[[]]],[11,"hash","skia_safe::font_style","",97,[[]]],[11,"hash","skia_safe::gpu::vk","",47,[[]]],[11,"hash","skia_safe::codec","",23,[[]]],[11,"hash","skia_safe::image_filter","",101,[[]]],[11,"hash","skia_safe::gpu","",27,[[]]],[11,"hash","skia_safe::codec","",22,[[]]],[11,"hash","skia_safe::yuva_pixmap_info","",136,[[]]],[11,"hash","skia_safe::image","",100,[[]]],[11,"hash","skia_safe::textlayout","",162,[[]]],[11,"hash","skia_safe::gpu::gl","",44,[[]]],[11,"hash","skia_safe::rrect","",117,[[]]],[11,"hash","skia_safe::pdf","",140,[[]]],[11,"hash","skia_safe::stroke_rec","",125,[[]]],[11,"hash","skia_safe::gpu::vk","",57,[[]]],[11,"hash","skia_safe::trim_path_effect","",152,[[]]],[11,"hash","skia_safe::canvas::lattice","",85,[[]]],[11,"hash","skia_safe::surface","",128,[[]]],[11,"hash","skia_safe::textlayout","",164,[[]]],[11,"hash","skia_safe::canvas","",83,[[]]],[11,"hash","skia_safe","",5,[[]]],[11,"hash","","",4,[[]]],[11,"hash","skia_safe::gpu::vk","",50,[[]]],[11,"hash","skia_safe::textlayout","",169,[[]]],[11,"hash","skia_safe::gpu::vk","",51,[[]]],[11,"hash","skia_safe::vertices","",133,[[]]],[11,"hash","skia_safe::gpu::vk","",58,[[]]],[11,"hash","skia_safe::drop_shadow_image_filter","",144,[[]]],[11,"hash","skia_safe::canvas","",84,[[]]],[11,"hash","skia_safe::gpu::context_options","",33,[[]]],[11,"hash","skia_safe::yuva_pixmap_info","",139,[[]]],[11,"hash","skia_safe::textlayout","",167,[[]]],[11,"hash","skia_safe","",6,[[]]],[11,"hash","skia_safe::matrix","",103,[[]]],[11,"hash","skia_safe::image_filters","",148,[[]]],[11,"hash","skia_safe::gpu","",28,[[]]],[11,"hash","skia_safe::textlayout","",168,[[]]],[11,"hash","skia_safe","",10,[[]]],[11,"hash","","",11,[[]]],[11,"hash","skia_safe::textlayout","",161,[[]]],[11,"hash","skia_safe::typeface","",130,[[]]],[11,"hash","skia_safe::gpu::gl","",43,[[]]],[11,"hash","skia_safe","",8,[[]]],[11,"hash","skia_safe::gpu","",31,[[]]],[11,"hash","skia_safe::region","",114,[[]]],[11,"hash","skia_safe::codec","",0,[[]]],[11,"hash","skia_safe::sampling_options","",18,[[]]],[11,"hash","skia_safe::path","",110,[[]]],[11,"hash","skia_safe::surface","",129,[[]]],[11,"hash","skia_safe","",21,[[]]],[11,"hash","skia_safe::font","",92,[[]]],[11,"hash","skia_safe::sampling_options","",19,[[]]],[11,"hash","skia_safe::image","",98,[[]]],[11,"hash","skia_safe::utils::text_utils","",78,[[]]],[11,"hash","skia_safe::textlayout","",171,[[]]],[11,"hash","skia_safe::path_types","",17,[[]]],[11,"hash","skia_safe","",20,[[]]],[11,"hash","skia_safe::surface","",127,[[]]],[11,"hash","skia_safe::path","",111,[[]]],[11,"hash","skia_safe","",2,[[]]],[11,"hash","","",7,[[]]],[11,"hash","skia_safe::path","",109,[[]]],[11,"hash","skia_safe::textlayout","",170,[[]]],[11,"hash","skia_safe::path_types","",16,[[]]],[11,"hash","skia_safe::paint","",14,[[]]],[11,"deref","skia_safe::gpu::d3d","",38,[[],["id3d12pageable",3]]],[11,"deref","","",37,[[],["id3d12object",3]]],[11,"deref","","",39,[[],["idxgiadapter",3]]],[11,"deref","","",36,[[],["id3d12pageable",3]]],[11,"uuidof","","",36,[[],["guid",3]]],[11,"uuidof","","",39,[[],["guid",3]]],[11,"uuidof","","",38,[[],["guid",3]]],[11,"uuidof","","",37,[[],["guid",3]]],[11,"eq","","",261,[[["comptr",3]]]],[11,"deref","","",261,[[]]],[11,"fmt","","",261,[[["formatter",3]],[["result",4],["error",3]]]],[11,"clone","","",261,[[],["comptr",3]]],[11,"drop","","",261,[[]]],[11,"set_matrix","skia_safe::canvas","",213,[[["matrix",3]]]],[11,"draw_image_nine","","",213,[[["option",4],["paint",6]]]],[11,"draw_image_lattice","","",213,[[["option",4],["lattice",3],["paint",6]]]],[11,"type_name","skia_safe","",274,[[],["cstr",3]]],[11,"serialize","","",274,[[],["data",6]]],[11,"deserialize","","",274,[[],["option",4]]],[11,"set_scale","skia_safe::matrix44","",239,[[["scalar",6]]]],[11,"pre_scale","","",239,[[["scalar",6]]]],[11,"post_scale","","",239,[[["scalar",6]]]],[11,"set_scale","","",239,[[]]],[11,"pre_scale","","",239,[[]]],[11,"post_scale","","",239,[[]]],[11,"map_scalars","","",239,[[]]],[11,"map_scalars","","",239,[[]]],[11,"map2","","",239,[[]]],[11,"map2","","",239,[[]]],[11,"round_out","skia_safe","",199,[[],["irect",3]]],[11,"round_out","","",199,[[],["rect",3]]],[11,"combine","","",272,[[["region",6],["irect",3],["regionop",4]]]],[11,"combine","","",272,[[["region",6],["irect",3],["regionop",4]]]],[11,"combine","","",272,[[["region",6],["regionop",4]]]],[11,"intersects","","",277,[[["irect",3]]]],[11,"intersects","","",277,[[["region",6]]]],[11,"nearly_equal","","",278,[[["scalar",6]]]],[11,"nearly_zero","","",278,[[]]],[11,"contains","","",198,[[["ipoint",3]]]],[11,"contains","","",198,[[["irect",3]]]],[11,"contains","","",198,[[["rect",3]]]],[11,"contains","","",198,[[["irect",3]]]],[11,"contains","","",198,[[["rect",3]]]],[11,"contains","","",199,[[["point",3]]]],[11,"contains","","",199,[[["rect",3]]]],[11,"contains","","",199,[[["irect",3]]]],[11,"contains","","",277,[[["ipoint",3]]]],[11,"contains","","",277,[[["irect",3]]]],[11,"contains","","",277,[[["region",6]]]],[11,"quick_reject","skia_safe::canvas","",213,[[["rect",3]]]],[11,"quick_reject","","",213,[[["path",6]]]],[11,"quick_reject","skia_safe","",277,[[["irect",3]]]],[11,"quick_reject","","",277,[[["region",6]]]],[11,"consume","","",273,[[]]],[11,"end_of_current_run","","",273,[[]]],[11,"at_end","","",273,[[]]],[11,"as_run_handler","skia_safe::shaper","",271,[[]]],[11,"as_native_run_handler","","",271,[[],["skshaper_runhandler",3]]],[11,"can_send","skia_safe","",274,[[]]],[11,"wrap_send","","",274,[[],[["result",4],["sendable",3]]]],[11,"wrap","","",273,[[],["option",4]]],[11,"unwrap","","",273,[[]]],[11,"inner","","",273,[[]]],[11,"inner_mut","","",273,[[]]],[11,"wrap","","",274,[[],["option",4]]],[11,"unwrap","","",274,[[]]],[11,"inner","","",274,[[]]],[11,"inner_mut","","",274,[[]]],[11,"wrap","","",272,[[]]],[11,"unwrap","","",272,[[]]],[11,"inner","","",272,[[]]],[11,"inner_mut","","",272,[[]]],[11,"wrap_ref","","",272,[[]]],[11,"wrap_mut","","",272,[[]]],[11,"inner","","",272,[[]]],[11,"inner_mut","","",272,[[]]],[11,"drop","skia_safe::canvas","",214,[[]]],[11,"drop","","",215,[[]]],[11,"drop","skia_safe::font_arguments","",227,[[]]],[11,"drop","skia_safe::path","",240,[[]]],[11,"drop","","",241,[[]]],[11,"drop","skia_safe::path_effect","",112,[[]]],[11,"drop","skia_safe::region","",246,[[]]],[11,"drop","","",247,[[]]],[11,"drop","skia_safe::pdf","",256,[[]]],[11,"drop","skia_safe::gpu::vk","",266,[[]]],[11,"drop","skia_safe","",272,[[]]],[11,"drop","","",273,[[]]],[11,"drop","","",274,[[]]],[11,"drop","skia_safe::svg::canvas","",74,[[]]],[11,"as_mut","skia_safe::canvas","",213,[[],["canvas",3]]],[11,"as_mut","","",214,[[],["canvas",3]]],[11,"as_ref","skia_safe","",185,[[]]],[11,"as_ref","","",198,[[],["irect",3]]],[11,"as_ref","","",199,[[],["rect",3]]],[11,"as_ref","skia_safe::rrect","",248,[[],["rrect",3]]],[11,"as_ref","skia_safe","",272,[[]]],[11,"as_ref","","",279,[[]]],[11,"as_ref","","",275,[[]]],[11,"as_ref","","",272,[[]]],[11,"as_ref","","",274,[[]]],[11,"from","","",217,[[]]],[11,"from","","",217,[[["rgb",3]]]],[11,"from","","",183,[[]]],[11,"from","","",184,[[]]],[11,"from","","",185,[[["color",3]]]],[11,"from","","",185,[[]]],[11,"from","","",185,[[["rgb",3]]]],[11,"from","skia_safe::font_style","",229,[[]]],[11,"from","","",230,[[]]],[11,"from","skia_safe","",234,[[["matrix",3]]]],[11,"from","","",234,[[["matrix",3]]]],[11,"from","","",234,[[["matrix44",3]]]],[11,"from","skia_safe::matrix44","",237,[[]]],[11,"from","","",237,[[]]],[11,"from","","",237,[[]]],[11,"from","","",237,[[]]],[11,"from","skia_safe::matrix","",236,[[["matrix44",3]]]],[11,"from","skia_safe","",195,[[]]],[11,"from","","",196,[[]]],[11,"from","","",196,[[["ipoint",3]]]],[11,"from","","",196,[[]]],[11,"from","","",197,[[]]],[11,"from","","",198,[[]]],[11,"from","","",199,[[]]],[11,"from","","",199,[[["isize",3]]]],[11,"from","","",199,[[["irect",3]]]],[11,"from","skia_safe::sampling_options","",121,[[["filteroptions",3]]]],[11,"from","","",121,[[["cubicresampler",3]]]],[11,"from","","",121,[[["filterquality",4]]]],[11,"from","skia_safe","",204,[[]]],[11,"from","","",205,[[]]],[11,"from","","",205,[[["isize",3]]]],[11,"from","","",205,[[]]],[11,"from","","",252,[[]]],[11,"from","","",252,[[]]],[11,"from","skia_safe::arithmetic_image_filter","",143,[[]]],[11,"from","skia_safe::gradient_shader","",145,[[]]],[11,"from","","",145,[[]]],[11,"from","skia_safe::image_filters","",258,[[["croprect",3],["option",4]]]],[11,"from","","",258,[[["croprect",3]]]],[11,"from","","",258,[[["irect",3]]]],[11,"from","","",258,[[["irect",3]]]],[11,"from","","",258,[[["rect",3]]]],[11,"from","","",258,[[["rect",3]]]],[11,"from","skia_safe::layer_draw_looper","",149,[[["bits",3]]]],[11,"from","skia_safe::gpu::d3d","",41,[[["id3d12resource",3],["cp",3]]]],[11,"from","skia_safe","",274,[[["grdirectcontext",3],["rchandle",3]]]],[11,"from","","",280,[[["nullhandle",3]]]],[11,"from","","",281,[[["nullhandle",3]]]],[11,"from","","",282,[[["nullhandle",3]]]],[11,"from","","",283,[[["nullhandle",3]]]],[11,"from","","",284,[[["nullhandle",3]]]],[11,"from","","",285,[[["nullhandle",3]]]],[11,"from","","",286,[[["nullhandle",3]]]],[11,"from","","",287,[[["nullhandle",3]]]],[11,"from","","",288,[[["nullhandle",3]]]],[11,"from","skia_safe::gpu::vk","",65,[[]]],[11,"from","","",65,[[]]],[11,"from","skia_safe","",274,[[["rchandle",3]]]],[11,"from","skia_safe::utils","",81,[[["path",6]]]],[11,"from","","",81,[[]]],[11,"from","","",81,[[]]],[11,"from","","",81,[[]]],[11,"into","skia_safe","",289,[[],["fontmgr",6]]],[11,"extend","skia_safe::canvas","",211,[[["intoiterator",8]]]],[11,"extend","skia_safe","",218,[[["intoiterator",8]]]],[11,"extend","skia_safe::color_filter","",219,[[["intoiterator",8]]]],[11,"extend","skia_safe::contour_measure","",221,[[["intoiterator",8]]]],[11,"extend","skia_safe::font_metrics","",228,[[["intoiterator",8]]]],[11,"extend","skia_safe::image_filter::crop_rect","",232,[[["intoiterator",8]]]],[11,"extend","skia_safe::matrix","",235,[[["intoiterator",8]]]],[11,"extend","skia_safe::matrix44","",238,[[["intoiterator",8]]]],[11,"extend","skia_safe::path_effect::point_data","",242,[[["intoiterator",8]]]],[11,"extend","skia_safe::path_measure","",243,[[["intoiterator",8]]]],[11,"extend","skia_safe::path","",244,[[["intoiterator",8]]]],[11,"extend","skia_safe","",250,[[["intoiterator",8]]]],[11,"extend","skia_safe::vertices","",255,[[["intoiterator",8]]]],[11,"extend","skia_safe::gradient_shader","",257,[[["intoiterator",8]]]],[11,"extend","skia_safe::layer_draw_looper","",259,[[["intoiterator",8]]]],[11,"extend","skia_safe::runtime_effect::uniform","",260,[[["intoiterator",8]]]],[11,"extend","skia_safe::gpu::gl","",262,[[["intoiterator",8]]]],[11,"extend","skia_safe::gpu::vk","",264,[[["intoiterator",8]]]],[11,"extend","","",265,[[["intoiterator",8]]]],[11,"extend","","",267,[[["intoiterator",8]]]],[11,"extend","skia_safe::textlayout","",269,[[["intoiterator",8]]]],[11,"extend","skia_safe::svg::canvas","",73,[[["intoiterator",8]]]],[11,"extend","skia_safe::utils::shadow_utils","",77,[[["intoiterator",8]]]],[11,"next","skia_safe","",272,[[],["option",4]]],[11,"next","","",223,[[],["option",4]]],[11,"next","skia_safe::path","",240,[[],["option",4]]],[11,"next","","",241,[[],["option",4]]],[11,"next","skia_safe::region","",245,[[],["option",4]]],[11,"next","","",246,[[],["option",4]]],[11,"next","","",247,[[],["option",4]]],[11,"next","skia_safe","",275,[[],["option",4]]],[11,"next","","",273,[[],["option",4]]],[11,"clone","skia_safe::codec","",24,[[],["options",3]]],[11,"clone","","",25,[[],["encodedorigin",4]]],[11,"clone","skia_safe::canvas","",211,[[],["savelayerflags",3]]],[11,"clone","skia_safe","",217,[[],["color",3]]],[11,"clone","","",183,[[],["rgb",3]]],[11,"clone","","",184,[[],["hsv",3]]],[11,"clone","","",218,[[],["colorchannelflag",3]]],[11,"clone","","",185,[[],["color4f",3]]],[11,"clone","skia_safe::color_filter","",219,[[],["flags",3]]],[11,"clone","skia_safe","",220,[[],["colorspaceprimaries",3]]],[11,"clone","","",186,[[],["colorspacetransferfn",3]]],[11,"clone","","",187,[[],["xyzd50hash",3]]],[11,"clone","skia_safe::contour_measure","",221,[[],["matrixflags",3]]],[11,"clone","skia_safe","",222,[[],["cubicmap",3]]],[11,"clone","skia_safe::draw_looper","",91,[[],["blurshadowrec",3]]],[11,"clone","skia_safe::font_arguments::variation_position","",93,[[],["coordinate",3]]],[11,"clone","skia_safe::font_metrics","",228,[[],["flags",3]]],[11,"clone","","",95,[[],["fontmetrics",3]]],[11,"clone","skia_safe::font_parameters::variation","",96,[[],["axis",3]]],[11,"clone","skia_safe::font_style","",229,[[],["weight",3]]],[11,"clone","","",230,[[],["width",3]]],[11,"clone","","",231,[[],["fontstyle",3]]],[11,"clone","skia_safe","",190,[[],["textencoding",4]]],[11,"clone","skia_safe::image_filter","",233,[[],["croprect",3]]],[11,"clone","skia_safe::image_filter::crop_rect","",232,[[],["cropedge",3]]],[11,"clone","skia_safe","",191,[[],["colortype",4]]],[11,"clone","","",192,[[],["v2",3]]],[11,"clone","","",193,[[],["v3",3]]],[11,"clone","","",194,[[],["v4",3]]],[11,"clone","","",234,[[],["m44",3]]],[11,"clone","skia_safe::matrix","",235,[[],["typemask",3]]],[11,"clone","","",236,[[],["matrix",3]]],[11,"clone","","",104,[[],["member",4]]],[11,"clone","","",105,[[],["affinemember",4]]],[11,"clone","skia_safe::matrix44","",237,[[],["vector4",3]]],[11,"clone","","",238,[[],["typemask",3]]],[11,"clone","","",239,[[],["matrix44",3]]],[11,"clone","skia_safe","",290,[[]]],[11,"clone","skia_safe::path_effect::point_data","",242,[[],["pointflags",3]]],[11,"clone","skia_safe::path_effect","",113,[[],["dashinfo",3]]],[11,"clone","skia_safe::path_measure","",243,[[],["matrixflags",3]]],[11,"clone","skia_safe::path","",244,[[],["pathsegmentmask",3]]],[11,"clone","skia_safe","",195,[[],["ipoint",3]]],[11,"clone","","",196,[[],["point",3]]],[11,"clone","","",197,[[],["point3",3]]],[11,"clone","","",198,[[],["irect",3]]],[11,"clone","","",199,[[],["rect",3]]],[11,"clone","skia_safe::region","",245,[[],["iterator",3]]],[11,"clone","","",246,[[],["cliperator",3]]],[11,"clone","","",247,[[],["spanerator",3]]],[11,"clone","skia_safe::rrect","",248,[[],["rrect",3]]],[11,"clone","skia_safe","",201,[[],["rsxform",3]]],[11,"clone","skia_safe::image","",249,[[],["cubicresampler",3]]],[11,"clone","skia_safe::sampling_options","",119,[[],["filteroptions",3]]],[11,"clone","","",120,[[],["mediumbehavior",4]]],[11,"clone","","",121,[[],["samplingoptions",3]]],[11,"clone","skia_safe::shader","",123,[[],["gradienttype",4]]],[11,"clone","","",124,[[],["gradientinfo",3]]],[11,"clone","skia_safe","",204,[[],["isize",3]]],[11,"clone","","",205,[[],["size",3]]],[11,"clone","","",206,[[],["pixelgeometry",4]]],[11,"clone","","",250,[[],["surfacepropsflags",3]]],[11,"clone","","",251,[[]]],[11,"clone","","",208,[[],["datetime",3]]],[11,"clone","skia_safe::typeface","",131,[[],["localizedstring",3]]],[11,"clone","skia_safe","",252,[[],["fourbytetag",3]]],[11,"clone","","",253,[[],["budgeted",3]]],[11,"clone","skia_safe::vertices","",254,[[],["bone",3]]],[11,"clone","","",134,[[],["attributetype",4]]],[11,"clone","","",135,[[],["attribute",3]]],[11,"clone","","",255,[[],["builderflags",3]]],[11,"clone","skia_safe::yuva_info","",138,[[],["subsampling",4]]],[11,"clone","skia_safe::arithmetic_image_filter","",143,[[],["arithmeticfpinputs",3]]],[11,"clone","skia_safe::gradient_shader","",257,[[],["flags",3]]],[11,"clone","skia_safe::high_contrast_filter","",147,[[],["highcontrastconfig",3]]],[11,"clone","skia_safe::image_filters","",258,[[],["croprect",3]]],[11,"clone","skia_safe::layer_draw_looper","",259,[[],["bits",3]]],[11,"clone","","",149,[[],["bitflags",4]]],[11,"clone","","",150,[[],["layerinfo",3]]],[11,"clone","skia_safe::runtime_effect::uniform","",260,[[],["flags",3]]],[11,"clone","skia_safe::gpu::d3d","",40,[[],["backendcontext",3]]],[11,"clone","","",41,[[],["textureresourceinfo",3]]],[11,"clone","","",42,[[],["fenceinfo",3]]],[11,"clone","skia_safe::gpu","",66,[[],["resourcecachelimits",3]]],[11,"clone","","",67,[[],["resourcecacheusage",3]]],[11,"clone","skia_safe::gpu::gl","",45,[[],["textureinfo",3]]],[11,"clone","","",46,[[],["framebufferinfo",3]]],[11,"clone","","",262,[[],["backendstate",3]]],[11,"clone","skia_safe::gpu::vk","",264,[[],["extensionflags",3]]],[11,"clone","","",265,[[],["featureflags",3]]],[11,"clone","","",60,[[],["alloc",3]]],[11,"clone","","",267,[[],["allocflag",3]]],[11,"clone","","",61,[[],["ycbcrconversioninfo",3]]],[11,"clone","","",62,[[],["imageinfo",3]]],[11,"clone","","",63,[[],["getprocof",4]]],[11,"clone","","",64,[[],["drawableinfo",3]]],[11,"clone","","",65,[[],["version",3]]],[11,"clone","skia_safe::textlayout","",173,[[],["textbox",3]]],[11,"clone","skia_safe","",291,[[]]],[11,"clone","skia_safe::textlayout","",177,[[],["textshadow",3]]],[11,"clone","","",269,[[],["textdecoration",3]]],[11,"clone","","",178,[[],["decoration",3]]],[11,"clone","","",179,[[],["placeholderstyle",3]]],[11,"clone","","",180,[[],["block",3]]],[11,"clone","","",181,[[],["placeholder",3]]],[11,"clone","skia_safe","",272,[[]]],[11,"clone","","",274,[[]]],[11,"clone","skia_safe::svg::canvas","",73,[[],["flags",3]]],[11,"clone","skia_safe::utils","",79,[[],["patch3d",3]]],[11,"clone","","",80,[[],["camera3d",3]]],[11,"clone","skia_safe::utils::interpolator","",76,[[],["timetot",3]]],[11,"clone","skia_safe::utils::shadow_utils","",77,[[],["shadowflags",3]]],[11,"default","skia_safe::codec","",25,[[]]],[11,"default","skia_safe","See [RCHandle::new()].",292,[[]]],[11,"default","skia_safe::canvas","",212,[[]]],[11,"default","","",214,[[]]],[11,"default","skia_safe","",217,[[],["color",3]]],[11,"default","skia_safe::contour_measure","",221,[[]]],[11,"default","skia_safe::draw_looper","",91,[[],["blurshadowrec",3]]],[11,"default","skia_safe","",293,[[]]],[11,"default","skia_safe::font_arguments::variation_position","",93,[[],["coordinate",3]]],[11,"default","skia_safe::font_arguments","",227,[[]]],[11,"default","skia_safe::font_metrics","",228,[[],["flags",3]]],[11,"default","","",95,[[],["fontmetrics",3]]],[11,"default","skia_safe","",274,[[]]],[11,"default","","",274,[[]]],[11,"default","skia_safe::font_parameters::variation","",96,[[],["axis",3]]],[11,"default","skia_safe::font_style","",231,[[]]],[11,"default","skia_safe","",190,[[]]],[11,"default","skia_safe::image_filter","",233,[[]]],[11,"default","skia_safe","",272,[[]]],[11,"default","","",272,[[]]],[11,"default","","",192,[[],["v2",3]]],[11,"default","","",193,[[],["v3",3]]],[11,"default","","",194,[[],["v4",3]]],[11,"default","","",234,[[]]],[11,"default","skia_safe::matrix","",236,[[]]],[11,"default","skia_safe::matrix44","",237,[[]]],[11,"default","","",239,[[]]],[11,"default","skia_safe","",272,[[]]],[11,"default","skia_safe::path","",240,[[]]],[11,"default","","",241,[[]]],[11,"default","skia_safe","",272,[[]]],[11,"default","skia_safe::path_effect","",112,[[]]],[11,"default","skia_safe::path_measure","",243,[[]]],[11,"default","skia_safe","",272,[[]]],[11,"default","","",272,[[]]],[11,"default","","",195,[[],["ipoint",3]]],[11,"default","","",196,[[],["point",3]]],[11,"default","","",197,[[],["point3",3]]],[11,"default","","",198,[[],["irect",3]]],[11,"default","","",199,[[],["rect",3]]],[11,"default","skia_safe::rrect","",248,[[]]],[11,"default","skia_safe::sampling_options","",121,[[]]],[11,"default","skia_safe","",274,[[]]],[11,"default","","",204,[[],["isize",3]]],[11,"default","","",205,[[],["size",3]]],[11,"default","","",272,[[]]],[11,"default","","",206,[[]]],[11,"default","","",250,[[]]],[11,"default","","",251,[[]]],[11,"default","","",274,[[]]],[11,"default","","",252,[[],["fourbytetag",3]]],[11,"default","skia_safe::vertices","",135,[[]]],[11,"default","skia_safe","",294,[[]]],[11,"default","","Defaults to nothing supported.",295,[[]]],[11,"default","","",296,[[]]],[11,"default","skia_safe::pdf","",256,[[]]],[11,"default","","",141,[[],["metadata",3]]],[11,"default","skia_safe","",272,[[]]],[11,"default","","",272,[[]]],[11,"default","skia_safe::gradient_shader","",257,[[]]],[11,"default","skia_safe::high_contrast_filter","",147,[[]]],[11,"default","skia_safe::image_filters","",258,[[]]],[11,"default","skia_safe","",297,[[],["builder",6]]],[11,"default","","",298,[[]]],[11,"default","skia_safe::gpu::context_options","",35,[[]]],[11,"default","skia_safe::gpu::gl","",45,[[]]],[11,"default","","",46,[[]]],[11,"default","skia_safe::gpu","",263,[[]]],[11,"default","skia_safe::gpu::vk","",60,[[]]],[11,"default","","",61,[[]]],[11,"default","","",62,[[]]],[11,"default","","",64,[[]]],[11,"default","skia_safe","",272,[[]]],[11,"default","","",272,[[]]],[11,"default","","",273,[[]]],[11,"default","skia_safe::textlayout","",177,[[]]],[11,"default","","",269,[[]]],[11,"default","","",178,[[],["decoration",3]]],[11,"default","","",179,[[],["placeholderstyle",3]]],[11,"default","skia_safe","",272,[[]]],[11,"default","skia_safe::textlayout","",180,[[]]],[11,"default","","",181,[[]]],[11,"default","skia_safe","",274,[[]]],[11,"default","","",273,[[]]],[11,"default","","",272,[[]]],[11,"default","skia_safe::svg::canvas","",73,[[],["flags",3]]],[11,"default","skia_safe::utils","",79,[[]]],[11,"default","","",80,[[]]],[11,"default","skia_safe","",299,[[]]],[11,"default","","",272,[[]]],[11,"cmp","skia_safe::canvas","",211,[[["savelayerflags",3]],["ordering",4]]],[11,"cmp","skia_safe","",218,[[["colorchannelflag",3]],["ordering",4]]],[11,"cmp","skia_safe::color_filter","",219,[[["flags",3]],["ordering",4]]],[11,"cmp","skia_safe::contour_measure","",221,[[["matrixflags",3]],["ordering",4]]],[11,"cmp","skia_safe::font_metrics","",228,[[["flags",3]],["ordering",4]]],[11,"cmp","skia_safe::image_filter::crop_rect","",232,[[["cropedge",3]],["ordering",4]]],[11,"cmp","skia_safe::matrix","",235,[[["typemask",3]],["ordering",4]]],[11,"cmp","skia_safe::matrix44","",238,[[["typemask",3]],["ordering",4]]],[11,"cmp","skia_safe::path_effect::point_data","",242,[[["pointflags",3]],["ordering",4]]],[11,"cmp","skia_safe::path_measure","",243,[[["matrixflags",3]],["ordering",4]]],[11,"cmp","skia_safe::path","",244,[[["pathsegmentmask",3]],["ordering",4]]],[11,"cmp","skia_safe","",250,[[["surfacepropsflags",3]],["ordering",4]]],[11,"cmp","skia_safe::vertices","",255,[[["builderflags",3]],["ordering",4]]],[11,"cmp","skia_safe::gradient_shader","",257,[[["flags",3]],["ordering",4]]],[11,"cmp","skia_safe::layer_draw_looper","",259,[[["bits",3]],["ordering",4]]],[11,"cmp","skia_safe::runtime_effect::uniform","",260,[[["flags",3]],["ordering",4]]],[11,"cmp","skia_safe::gpu::gl","",262,[[["backendstate",3]],["ordering",4]]],[11,"cmp","skia_safe::gpu::vk","",264,[[["extensionflags",3]],["ordering",4]]],[11,"cmp","","",265,[[["featureflags",3]],["ordering",4]]],[11,"cmp","","",267,[[["allocflag",3]],["ordering",4]]],[11,"cmp","","",65,[[["version",3]],["ordering",4]]],[11,"cmp","skia_safe::textlayout","",269,[[["textdecoration",3]],["ordering",4]]],[11,"cmp","skia_safe::svg::canvas","",73,[[["flags",3]],["ordering",4]]],[11,"cmp","skia_safe::utils::shadow_utils","",77,[[["shadowflags",3]],["ordering",4]]],[11,"eq","skia_safe::codec","",24,[[["options",3]]]],[11,"ne","","",24,[[["options",3]]]],[11,"eq","","",25,[[["encodedorigin",4]]]],[11,"eq","skia_safe::canvas","",211,[[["savelayerflags",3]]]],[11,"ne","","",211,[[["savelayerflags",3]]]],[11,"eq","skia_safe","",217,[[["color",3]]]],[11,"ne","","",217,[[["color",3]]]],[11,"eq","","",183,[[["rgb",3]]]],[11,"ne","","",183,[[["rgb",3]]]],[11,"eq","","",184,[[["hsv",3]]]],[11,"ne","","",184,[[["hsv",3]]]],[11,"eq","","",218,[[["colorchannelflag",3]]]],[11,"ne","","",218,[[["colorchannelflag",3]]]],[11,"eq","","",185,[[["color4f",3]]]],[11,"ne","","",185,[[["color4f",3]]]],[11,"eq","skia_safe::color_filter","",219,[[["flags",3]]]],[11,"ne","","",219,[[["flags",3]]]],[11,"eq","skia_safe","",220,[[["colorspaceprimaries",3]]]],[11,"ne","","",220,[[["colorspaceprimaries",3]]]],[11,"eq","","",186,[[["colorspacetransferfn",3]]]],[11,"ne","","",186,[[["colorspacetransferfn",3]]]],[11,"eq","","",187,[[["xyzd50hash",3]]]],[11,"ne","","",187,[[["xyzd50hash",3]]]],[11,"eq","skia_safe::contour_measure","",221,[[["matrixflags",3]]]],[11,"ne","","",221,[[["matrixflags",3]]]],[11,"eq","skia_safe","",274,[[]]],[11,"eq","skia_safe::draw_looper","",91,[[["blurshadowrec",3]]]],[11,"ne","","",91,[[["blurshadowrec",3]]]],[11,"eq","skia_safe::font_arguments::variation_position","",93,[[["coordinate",3]]]],[11,"ne","","",93,[[["coordinate",3]]]],[11,"eq","skia_safe::font_metrics","",228,[[["flags",3]]]],[11,"ne","","",228,[[["flags",3]]]],[11,"eq","","",95,[[["fontmetrics",3]]]],[11,"ne","","",95,[[["fontmetrics",3]]]],[11,"eq","skia_safe::font_parameters::variation","",96,[[["axis",3]]]],[11,"ne","","",96,[[["axis",3]]]],[11,"eq","skia_safe::font_style","",229,[[["weight",3]]]],[11,"ne","","",229,[[["weight",3]]]],[11,"eq","","",230,[[["width",3]]]],[11,"ne","","",230,[[["width",3]]]],[11,"eq","","",231,[[]]],[11,"eq","skia_safe","",190,[[["textencoding",4]]]],[11,"eq","skia_safe::image_filter::crop_rect","",232,[[["cropedge",3]]]],[11,"ne","","",232,[[["cropedge",3]]]],[11,"eq","skia_safe","",191,[[["colortype",4]]]],[11,"eq","","",192,[[["v2",3]]]],[11,"ne","","",192,[[["v2",3]]]],[11,"eq","","",193,[[["v3",3]]]],[11,"ne","","",193,[[["v3",3]]]],[11,"eq","","",194,[[["v4",3]]]],[11,"ne","","",194,[[["v4",3]]]],[11,"eq","","",234,[[]]],[11,"eq","skia_safe::matrix","",235,[[["typemask",3]]]],[11,"ne","","",235,[[["typemask",3]]]],[11,"eq","","",236,[[]]],[11,"eq","","",104,[[["member",4]]]],[11,"eq","","",105,[[["affinemember",4]]]],[11,"eq","skia_safe::matrix44","",237,[[["vector4",3]]]],[11,"ne","","",237,[[["vector4",3]]]],[11,"eq","","",238,[[["typemask",3]]]],[11,"ne","","",238,[[["typemask",3]]]],[11,"eq","","",239,[[]]],[11,"eq","skia_safe::path_effect::point_data","",242,[[["pointflags",3]]]],[11,"ne","","",242,[[["pointflags",3]]]],[11,"eq","skia_safe::path_effect","",113,[[["dashinfo",3]]]],[11,"ne","","",113,[[["dashinfo",3]]]],[11,"eq","skia_safe::path_measure","",243,[[["matrixflags",3]]]],[11,"ne","","",243,[[["matrixflags",3]]]],[11,"eq","skia_safe::path","",244,[[["pathsegmentmask",3]]]],[11,"ne","","",244,[[["pathsegmentmask",3]]]],[11,"eq","skia_safe","",195,[[["ipoint",3]]]],[11,"ne","","",195,[[["ipoint",3]]]],[11,"eq","","",196,[[["point",3]]]],[11,"ne","","",196,[[["point",3]]]],[11,"eq","","",197,[[["point3",3]]]],[11,"ne","","",197,[[["point3",3]]]],[11,"eq","","",198,[[["irect",3]]]],[11,"ne","","",198,[[["irect",3]]]],[11,"eq","","",199,[[["rect",3]]]],[11,"ne","","",199,[[["rect",3]]]],[11,"eq","skia_safe::rrect","",248,[[]]],[11,"eq","skia_safe","",201,[[["rsxform",3]]]],[11,"ne","","",201,[[["rsxform",3]]]],[11,"eq","skia_safe::image","",249,[[["cubicresampler",3]]]],[11,"ne","","",249,[[["cubicresampler",3]]]],[11,"eq","skia_safe::sampling_options","",119,[[["filteroptions",3]]]],[11,"ne","","",119,[[["filteroptions",3]]]],[11,"eq","","",120,[[["mediumbehavior",4]]]],[11,"eq","","",121,[[["samplingoptions",3]]]],[11,"ne","","",121,[[["samplingoptions",3]]]],[11,"eq","skia_safe::shader","",123,[[["gradienttype",4]]]],[11,"ne","","",123,[[["gradienttype",4]]]],[11,"eq","","",124,[[["gradientinfo",3]]]],[11,"ne","","",124,[[["gradientinfo",3]]]],[11,"eq","skia_safe","",204,[[["isize",3]]]],[11,"ne","","",204,[[["isize",3]]]],[11,"eq","","",205,[[["size",3]]]],[11,"ne","","",205,[[["size",3]]]],[11,"eq","","",206,[[["pixelgeometry",4]]]],[11,"eq","","",250,[[["surfacepropsflags",3]]]],[11,"ne","","",250,[[["surfacepropsflags",3]]]],[11,"eq","","",251,[[]]],[11,"eq","","",208,[[["datetime",3]]]],[11,"ne","","",208,[[["datetime",3]]]],[11,"eq","skia_safe::typeface","",131,[[["localizedstring",3]]]],[11,"ne","","",131,[[["localizedstring",3]]]],[11,"eq","skia_safe","",252,[[["fourbytetag",3]]]],[11,"ne","","",252,[[["fourbytetag",3]]]],[11,"eq","","",253,[[["budgeted",3]]]],[11,"ne","","",253,[[["budgeted",3]]]],[11,"eq","skia_safe::vertices","",254,[[["bone",3]]]],[11,"ne","","",254,[[["bone",3]]]],[11,"eq","","",134,[[["attributetype",4]]]],[11,"eq","","",135,[[]]],[11,"eq","","",255,[[["builderflags",3]]]],[11,"ne","","",255,[[["builderflags",3]]]],[11,"eq","skia_safe::yuva_info","",138,[[["subsampling",4]]]],[11,"eq","skia_safe","",272,[[]]],[11,"eq","skia_safe::gradient_shader","",257,[[["flags",3]]]],[11,"ne","","",257,[[["flags",3]]]],[11,"eq","skia_safe::high_contrast_filter","",147,[[["highcontrastconfig",3]]]],[11,"ne","","",147,[[["highcontrastconfig",3]]]],[11,"eq","skia_safe::image_filters","",258,[[["croprect",3]]]],[11,"ne","","",258,[[["croprect",3]]]],[11,"eq","skia_safe::layer_draw_looper","",259,[[["bits",3]]]],[11,"ne","","",259,[[["bits",3]]]],[11,"eq","","",149,[[["bitflags",4]]]],[11,"ne","","",149,[[["bitflags",4]]]],[11,"eq","","",150,[[["layerinfo",3]]]],[11,"ne","","",150,[[["layerinfo",3]]]],[11,"eq","skia_safe::runtime_effect::uniform","",260,[[["flags",3]]]],[11,"ne","","",260,[[["flags",3]]]],[11,"eq","skia_safe::gpu","",66,[[["resourcecachelimits",3]]]],[11,"ne","","",66,[[["resourcecachelimits",3]]]],[11,"eq","","",67,[[["resourcecacheusage",3]]]],[11,"ne","","",67,[[["resourcecacheusage",3]]]],[11,"eq","skia_safe::gpu::gl","",45,[[]]],[11,"eq","","",46,[[["framebufferinfo",3]]]],[11,"ne","","",46,[[["framebufferinfo",3]]]],[11,"eq","","",262,[[["backendstate",3]]]],[11,"ne","","",262,[[["backendstate",3]]]],[11,"eq","skia_safe::gpu::vk","",264,[[["extensionflags",3]]]],[11,"ne","","",264,[[["extensionflags",3]]]],[11,"eq","","",265,[[["featureflags",3]]]],[11,"ne","","",265,[[["featureflags",3]]]],[11,"eq","","",60,[[]]],[11,"eq","","",267,[[["allocflag",3]]]],[11,"ne","","",267,[[["allocflag",3]]]],[11,"eq","","",61,[[]]],[11,"eq","","",65,[[["version",3]]]],[11,"ne","","",65,[[["version",3]]]],[11,"eq","skia_safe::textlayout","",173,[[["textbox",3]]]],[11,"ne","","",173,[[["textbox",3]]]],[11,"eq","","",177,[[]]],[11,"eq","","",269,[[["textdecoration",3]]]],[11,"ne","","",269,[[["textdecoration",3]]]],[11,"eq","","",178,[[["decoration",3]]]],[11,"ne","","",178,[[["decoration",3]]]],[11,"eq","skia_safe","",272,[[]]],[11,"eq","skia_safe::textlayout","",179,[[]]],[11,"eq","","",180,[[["block",3]]]],[11,"ne","","",180,[[["block",3]]]],[11,"eq","","",181,[[["placeholder",3]]]],[11,"ne","","",181,[[["placeholder",3]]]],[11,"eq","skia_safe","",272,[[]]],[11,"eq","","",274,[[]]],[11,"eq","skia_safe::svg::canvas","",73,[[["flags",3]]]],[11,"ne","","",73,[[["flags",3]]]],[11,"eq","skia_safe::utils","",79,[[["patch3d",3]]]],[11,"ne","","",79,[[["patch3d",3]]]],[11,"eq","","",80,[[["camera3d",3]]]],[11,"ne","","",80,[[["camera3d",3]]]],[11,"eq","skia_safe::utils::interpolator","",76,[[["timetot",3]]]],[11,"ne","","",76,[[["timetot",3]]]],[11,"eq","skia_safe::utils::shadow_utils","",77,[[["shadowflags",3]]]],[11,"ne","","",77,[[["shadowflags",3]]]],[11,"partial_cmp","skia_safe::canvas","",211,[[["savelayerflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",211,[[["savelayerflags",3]]]],[11,"le","","",211,[[["savelayerflags",3]]]],[11,"gt","","",211,[[["savelayerflags",3]]]],[11,"ge","","",211,[[["savelayerflags",3]]]],[11,"partial_cmp","skia_safe","",218,[[["colorchannelflag",3]],[["option",4],["ordering",4]]]],[11,"lt","","",218,[[["colorchannelflag",3]]]],[11,"le","","",218,[[["colorchannelflag",3]]]],[11,"gt","","",218,[[["colorchannelflag",3]]]],[11,"ge","","",218,[[["colorchannelflag",3]]]],[11,"partial_cmp","skia_safe::color_filter","",219,[[["flags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",219,[[["flags",3]]]],[11,"le","","",219,[[["flags",3]]]],[11,"gt","","",219,[[["flags",3]]]],[11,"ge","","",219,[[["flags",3]]]],[11,"partial_cmp","skia_safe::contour_measure","",221,[[["matrixflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",221,[[["matrixflags",3]]]],[11,"le","","",221,[[["matrixflags",3]]]],[11,"gt","","",221,[[["matrixflags",3]]]],[11,"ge","","",221,[[["matrixflags",3]]]],[11,"partial_cmp","skia_safe::font_metrics","",228,[[["flags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",228,[[["flags",3]]]],[11,"le","","",228,[[["flags",3]]]],[11,"gt","","",228,[[["flags",3]]]],[11,"ge","","",228,[[["flags",3]]]],[11,"partial_cmp","skia_safe::font_style","",229,[[["weight",3]],[["option",4],["ordering",4]]]],[11,"lt","","",229,[[["weight",3]]]],[11,"le","","",229,[[["weight",3]]]],[11,"gt","","",229,[[["weight",3]]]],[11,"ge","","",229,[[["weight",3]]]],[11,"partial_cmp","","",230,[[["width",3]],[["option",4],["ordering",4]]]],[11,"lt","","",230,[[["width",3]]]],[11,"le","","",230,[[["width",3]]]],[11,"gt","","",230,[[["width",3]]]],[11,"ge","","",230,[[["width",3]]]],[11,"partial_cmp","skia_safe::image_filter::crop_rect","",232,[[["cropedge",3]],[["option",4],["ordering",4]]]],[11,"lt","","",232,[[["cropedge",3]]]],[11,"le","","",232,[[["cropedge",3]]]],[11,"gt","","",232,[[["cropedge",3]]]],[11,"ge","","",232,[[["cropedge",3]]]],[11,"partial_cmp","skia_safe::matrix","",235,[[["typemask",3]],[["option",4],["ordering",4]]]],[11,"lt","","",235,[[["typemask",3]]]],[11,"le","","",235,[[["typemask",3]]]],[11,"gt","","",235,[[["typemask",3]]]],[11,"ge","","",235,[[["typemask",3]]]],[11,"partial_cmp","skia_safe::matrix44","",238,[[["typemask",3]],[["option",4],["ordering",4]]]],[11,"lt","","",238,[[["typemask",3]]]],[11,"le","","",238,[[["typemask",3]]]],[11,"gt","","",238,[[["typemask",3]]]],[11,"ge","","",238,[[["typemask",3]]]],[11,"partial_cmp","skia_safe::path_effect::point_data","",242,[[["pointflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",242,[[["pointflags",3]]]],[11,"le","","",242,[[["pointflags",3]]]],[11,"gt","","",242,[[["pointflags",3]]]],[11,"ge","","",242,[[["pointflags",3]]]],[11,"partial_cmp","skia_safe::path_measure","",243,[[["matrixflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",243,[[["matrixflags",3]]]],[11,"le","","",243,[[["matrixflags",3]]]],[11,"gt","","",243,[[["matrixflags",3]]]],[11,"ge","","",243,[[["matrixflags",3]]]],[11,"partial_cmp","skia_safe::path","",244,[[["pathsegmentmask",3]],[["option",4],["ordering",4]]]],[11,"lt","","",244,[[["pathsegmentmask",3]]]],[11,"le","","",244,[[["pathsegmentmask",3]]]],[11,"gt","","",244,[[["pathsegmentmask",3]]]],[11,"ge","","",244,[[["pathsegmentmask",3]]]],[11,"partial_cmp","skia_safe","",250,[[["surfacepropsflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",250,[[["surfacepropsflags",3]]]],[11,"le","","",250,[[["surfacepropsflags",3]]]],[11,"gt","","",250,[[["surfacepropsflags",3]]]],[11,"ge","","",250,[[["surfacepropsflags",3]]]],[11,"partial_cmp","skia_safe::vertices","",255,[[["builderflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",255,[[["builderflags",3]]]],[11,"le","","",255,[[["builderflags",3]]]],[11,"gt","","",255,[[["builderflags",3]]]],[11,"ge","","",255,[[["builderflags",3]]]],[11,"partial_cmp","skia_safe::gradient_shader","",257,[[["flags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",257,[[["flags",3]]]],[11,"le","","",257,[[["flags",3]]]],[11,"gt","","",257,[[["flags",3]]]],[11,"ge","","",257,[[["flags",3]]]],[11,"partial_cmp","skia_safe::layer_draw_looper","",259,[[["bits",3]],[["option",4],["ordering",4]]]],[11,"lt","","",259,[[["bits",3]]]],[11,"le","","",259,[[["bits",3]]]],[11,"gt","","",259,[[["bits",3]]]],[11,"ge","","",259,[[["bits",3]]]],[11,"partial_cmp","skia_safe::runtime_effect::uniform","",260,[[["flags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",260,[[["flags",3]]]],[11,"le","","",260,[[["flags",3]]]],[11,"gt","","",260,[[["flags",3]]]],[11,"ge","","",260,[[["flags",3]]]],[11,"partial_cmp","skia_safe::gpu::gl","",262,[[["backendstate",3]],[["option",4],["ordering",4]]]],[11,"lt","","",262,[[["backendstate",3]]]],[11,"le","","",262,[[["backendstate",3]]]],[11,"gt","","",262,[[["backendstate",3]]]],[11,"ge","","",262,[[["backendstate",3]]]],[11,"partial_cmp","skia_safe::gpu::vk","",264,[[["extensionflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",264,[[["extensionflags",3]]]],[11,"le","","",264,[[["extensionflags",3]]]],[11,"gt","","",264,[[["extensionflags",3]]]],[11,"ge","","",264,[[["extensionflags",3]]]],[11,"partial_cmp","","",265,[[["featureflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",265,[[["featureflags",3]]]],[11,"le","","",265,[[["featureflags",3]]]],[11,"gt","","",265,[[["featureflags",3]]]],[11,"ge","","",265,[[["featureflags",3]]]],[11,"partial_cmp","","",267,[[["allocflag",3]],[["option",4],["ordering",4]]]],[11,"lt","","",267,[[["allocflag",3]]]],[11,"le","","",267,[[["allocflag",3]]]],[11,"gt","","",267,[[["allocflag",3]]]],[11,"ge","","",267,[[["allocflag",3]]]],[11,"partial_cmp","","",65,[[["version",3]],[["option",4],["ordering",4]]]],[11,"lt","","",65,[[["version",3]]]],[11,"le","","",65,[[["version",3]]]],[11,"gt","","",65,[[["version",3]]]],[11,"ge","","",65,[[["version",3]]]],[11,"partial_cmp","skia_safe::textlayout","",269,[[["textdecoration",3]],[["option",4],["ordering",4]]]],[11,"lt","","",269,[[["textdecoration",3]]]],[11,"le","","",269,[[["textdecoration",3]]]],[11,"gt","","",269,[[["textdecoration",3]]]],[11,"ge","","",269,[[["textdecoration",3]]]],[11,"partial_cmp","skia_safe::svg::canvas","",73,[[["flags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",73,[[["flags",3]]]],[11,"le","","",73,[[["flags",3]]]],[11,"gt","","",73,[[["flags",3]]]],[11,"ge","","",73,[[["flags",3]]]],[11,"partial_cmp","skia_safe::utils::shadow_utils","",77,[[["shadowflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",77,[[["shadowflags",3]]]],[11,"le","","",77,[[["shadowflags",3]]]],[11,"gt","","",77,[[["shadowflags",3]]]],[11,"ge","","",77,[[["shadowflags",3]]]],[11,"to_string","skia_safe","",272,[[],["string",3]]],[11,"deref","skia_safe::canvas","",214,[[]]],[11,"deref","","",215,[[]]],[11,"deref","skia_safe","",274,[[]]],[11,"deref","skia_safe::font_style","",229,[[]]],[11,"deref","","",230,[[]]],[11,"deref","skia_safe","",252,[[]]],[11,"deref","","",274,[[]]],[11,"deref","skia_safe::gpu::vk","",65,[[]]],[11,"deref","skia_safe","",274,[[]]],[11,"deref","","",274,[[]]],[11,"deref","","",275,[[]]],[11,"deref","skia_safe::svg::canvas","",74,[[]]],[11,"deref_mut","skia_safe::canvas","",214,[[]]],[11,"deref_mut","","",215,[[]]],[11,"deref_mut","skia_safe","",274,[[]]],[11,"deref_mut","","",274,[[]]],[11,"deref_mut","","",274,[[]]],[11,"deref_mut","","",275,[[]]],[11,"deref_mut","skia_safe::svg::canvas","",74,[[]]],[11,"fmt","skia_safe::codec","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::canvas","",211,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::canvas::lattice","",86,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe","",217,[[["formatter",3]],["result",6]]],[11,"fmt","","",183,[[["formatter",3]],["result",6]]],[11,"fmt","","",184,[[["formatter",3]],["result",6]]],[11,"fmt","","",218,[[["formatter",3]],["result",6]]],[11,"fmt","","",185,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::color_filter","",219,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe","",220,[[["formatter",3]],["result",6]]],[11,"fmt","","",186,[[["formatter",3]],["result",6]]],[11,"fmt","","",187,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::contour_measure","",221,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::draw_looper","",91,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::font_arguments","",94,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::font_arguments::variation_position","",93,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::font_metrics","",228,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::font_parameters::variation","",96,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe","",190,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::image_filter::crop_rect","",232,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe","",191,[[["formatter",3]],["result",6]]],[11,"fmt","","",192,[[["formatter",3]],["result",6]]],[11,"fmt","","",193,[[["formatter",3]],["result",6]]],[11,"fmt","","",194,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::matrix","",235,[[["formatter",3]],["result",6]]],[11,"fmt","","",236,[[["formatter",3]],["result",6]]],[11,"fmt","","",104,[[["formatter",3]],["result",6]]],[11,"fmt","","",105,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::matrix44","",237,[[["formatter",3]],["result",6]]],[11,"fmt","","",238,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::path_effect::point_data","",242,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::path_effect","",113,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::path_measure","",243,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::path","",244,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe","",195,[[["formatter",3]],["result",6]]],[11,"fmt","","",196,[[["formatter",3]],["result",6]]],[11,"fmt","","",197,[[["formatter",3]],["result",6]]],[11,"fmt","","",198,[[["formatter",3]],["result",6]]],[11,"fmt","","",199,[[["formatter",3]],["result",6]]],[11,"fmt","","",201,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::image","",249,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::sampling_options","",119,[[["formatter",3]],["result",6]]],[11,"fmt","","",120,[[["formatter",3]],["result",6]]],[11,"fmt","","",121,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::shader","",123,[[["formatter",3]],["result",6]]],[11,"fmt","","",124,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe","",204,[[["formatter",3]],["result",6]]],[11,"fmt","","",205,[[["formatter",3]],["result",6]]],[11,"fmt","","",206,[[["formatter",3]],["result",6]]],[11,"fmt","","",250,[[["formatter",3]],["result",6]]],[11,"fmt","","",208,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::typeface","",131,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe","",252,[[["formatter",3]],["result",6]]],[11,"fmt","","",253,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::vertices","",254,[[["formatter",3]],["result",6]]],[11,"fmt","","",134,[[["formatter",3]],["result",6]]],[11,"fmt","","",135,[[["formatter",3]],["result",6]]],[11,"fmt","","",255,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::yuva_info","",138,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::pdf","",256,[[["formatter",3]],["result",6]]],[11,"fmt","","",141,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::arithmetic_image_filter","",143,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::gradient_shader","",257,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::high_contrast_filter","",147,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::image_filters","",258,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::layer_draw_looper","",259,[[["formatter",3]],["result",6]]],[11,"fmt","","",149,[[["formatter",3]],["result",6]]],[11,"fmt","","",150,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::runtime_effect::uniform","",260,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::gpu","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::gpu::gl","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",262,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::gpu::vk","",264,[[["formatter",3]],["result",6]]],[11,"fmt","","",265,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",267,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::textlayout","",173,[[["formatter",3]],["result",6]]],[11,"fmt","","",177,[[["formatter",3]],["result",6]]],[11,"fmt","","",269,[[["formatter",3]],["result",6]]],[11,"fmt","","",178,[[["formatter",3]],["result",6]]],[11,"fmt","","",179,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::shaper::run_handler","",156,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::svg::canvas","",73,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::utils","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::utils::interpolator","",76,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::utils::shadow_utils","",77,[[["formatter",3]],["result",6]]],[11,"div","skia_safe","",192,[[["scalar",6]]]],[11,"div","","",205,[[["scalar",6]]]],[11,"sub","skia_safe::canvas","Returns the set difference of the two sets of flags.",211,[[["savelayerflags",3]],["savelayerflags",3]]],[11,"sub","skia_safe","Returns the set difference of the two sets of flags.",218,[[["colorchannelflag",3]],["colorchannelflag",3]]],[11,"sub","skia_safe::color_filter","Returns the set difference of the two sets of flags.",219,[[["flags",3]],["flags",3]]],[11,"sub","skia_safe::contour_measure","Returns the set difference of the two sets of flags.",221,[[["matrixflags",3]],["matrixflags",3]]],[11,"sub","skia_safe::font_metrics","Returns the set difference of the two sets of flags.",228,[[["flags",3]],["flags",3]]],[11,"sub","skia_safe::image_filter::crop_rect","Returns the set difference of the two sets of flags.",232,[[["cropedge",3]],["cropedge",3]]],[11,"sub","skia_safe","",192,[[]]],[11,"sub","","",193,[[]]],[11,"sub","","",194,[[]]],[11,"sub","skia_safe::matrix","Returns the set difference of the two sets of flags.",235,[[["typemask",3]],["typemask",3]]],[11,"sub","skia_safe::matrix44","Returns the set difference of the two sets of flags.",238,[[["typemask",3]],["typemask",3]]],[11,"sub","skia_safe::path_effect::point_data","Returns the set difference of the two sets of flags.",242,[[["pointflags",3]],["pointflags",3]]],[11,"sub","skia_safe::path_measure","Returns the set difference of the two sets of flags.",243,[[["matrixflags",3]],["matrixflags",3]]],[11,"sub","skia_safe::path","Returns the set difference of the two sets of flags.",244,[[["pathsegmentmask",3]],["pathsegmentmask",3]]],[11,"sub","skia_safe","",195,[[]]],[11,"sub","","",195,[[["isize",3]]]],[11,"sub","","",196,[[]]],[11,"sub","","",196,[[["size",3]]]],[11,"sub","","",197,[[]]],[11,"sub","","Returns the set difference of the two sets of flags.",250,[[["surfacepropsflags",3]],["surfacepropsflags",3]]],[11,"sub","skia_safe::vertices","Returns the set difference of the two sets of flags.",255,[[["builderflags",3]],["builderflags",3]]],[11,"sub","skia_safe::gradient_shader","Returns the set difference of the two sets of flags.",257,[[["flags",3]],["flags",3]]],[11,"sub","skia_safe::layer_draw_looper","Returns the set difference of the two sets of flags.",259,[[["bits",3]],["bits",3]]],[11,"sub","skia_safe::runtime_effect::uniform","Returns the set difference of the two sets of flags.",260,[[["flags",3]],["flags",3]]],[11,"sub","skia_safe::gpu::gl","Returns the set difference of the two sets of flags.",262,[[["backendstate",3]],["backendstate",3]]],[11,"sub","skia_safe::gpu::vk","Returns the set difference of the two sets of flags.",264,[[["extensionflags",3]],["extensionflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",265,[[["featureflags",3]],["featureflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",267,[[["allocflag",3]],["allocflag",3]]],[11,"sub","skia_safe::textlayout","Returns the set difference of the two sets of flags.",269,[[["textdecoration",3]],["textdecoration",3]]],[11,"sub","skia_safe::svg::canvas","Returns the set difference of the two sets of flags.",73,[[["flags",3]],["flags",3]]],[11,"sub","skia_safe::utils::shadow_utils","Returns the set difference of the two sets of flags.",77,[[["shadowflags",3]],["shadowflags",3]]],[11,"add","skia_safe","",192,[[]]],[11,"add","","",193,[[]]],[11,"add","","",194,[[]]],[11,"add","","",195,[[["ivector",3]]]],[11,"add","","",195,[[["isize",3]]]],[11,"add","","",196,[[["vector",6]]]],[11,"add","","",196,[[["size",3]]]],[11,"add","","",197,[[]]],[11,"mul","","",185,[[]]],[11,"mul","","",185,[[]]],[11,"mul","","",185,[[]]],[11,"mul","","",192,[[]]],[11,"mul","","",192,[[["scalar",6]]]],[11,"mul","","",278,[[["v2",3]]]],[11,"mul","","",193,[[]]],[11,"mul","","",193,[[["scalar",6]]]],[11,"mul","","",278,[[["v3",3]]]],[11,"mul","","",194,[[]]],[11,"mul","","",194,[[["scalar",6]]]],[11,"mul","","",278,[[["v4",3]]]],[11,"mul","skia_safe::matrix","",236,[[["matrix",3]]]],[11,"mul","skia_safe::matrix44","",239,[[]]],[11,"mul","","",239,[[["vector4",3]]]],[11,"mul","skia_safe","",196,[[["scalar",6]]]],[11,"mul","","",278,[[["point3",3]]]],[11,"mul","","",205,[[["scalar",6]]]],[11,"neg","","",192,[[]]],[11,"neg","","",193,[[]]],[11,"neg","","",194,[[]]],[11,"neg","","",195,[[]]],[11,"neg","","",196,[[]]],[11,"neg","","",197,[[]]],[11,"add_assign","","",192,[[]]],[11,"add_assign","","",193,[[]]],[11,"add_assign","","",194,[[]]],[11,"add_assign","","",195,[[["ivector",3]]]],[11,"add_assign","","",195,[[["isize",3]]]],[11,"add_assign","","",196,[[["vector",6]]]],[11,"add_assign","","",196,[[["size",3]]]],[11,"add_assign","","",197,[[["point3",3]]]],[11,"sub_assign","skia_safe::canvas","Disables all flags enabled in the set.",211,[[["savelayerflags",3]]]],[11,"sub_assign","skia_safe","Disables all flags enabled in the set.",218,[[["colorchannelflag",3]]]],[11,"sub_assign","skia_safe::color_filter","Disables all flags enabled in the set.",219,[[["flags",3]]]],[11,"sub_assign","skia_safe::contour_measure","Disables all flags enabled in the set.",221,[[["matrixflags",3]]]],[11,"sub_assign","skia_safe::font_metrics","Disables all flags enabled in the set.",228,[[["flags",3]]]],[11,"sub_assign","skia_safe::image_filter::crop_rect","Disables all flags enabled in the set.",232,[[["cropedge",3]]]],[11,"sub_assign","skia_safe","",192,[[]]],[11,"sub_assign","","",193,[[]]],[11,"sub_assign","","",194,[[]]],[11,"sub_assign","skia_safe::matrix","Disables all flags enabled in the set.",235,[[["typemask",3]]]],[11,"sub_assign","skia_safe::matrix44","Disables all flags enabled in the set.",238,[[["typemask",3]]]],[11,"sub_assign","skia_safe::path_effect::point_data","Disables all flags enabled in the set.",242,[[["pointflags",3]]]],[11,"sub_assign","skia_safe::path_measure","Disables all flags enabled in the set.",243,[[["matrixflags",3]]]],[11,"sub_assign","skia_safe::path","Disables all flags enabled in the set.",244,[[["pathsegmentmask",3]]]],[11,"sub_assign","skia_safe","",195,[[]]],[11,"sub_assign","","",195,[[["isize",3]]]],[11,"sub_assign","","",196,[[["vector",6]]]],[11,"sub_assign","","",196,[[["size",3]]]],[11,"sub_assign","","",197,[[["point3",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",250,[[["surfacepropsflags",3]]]],[11,"sub_assign","skia_safe::vertices","Disables all flags enabled in the set.",255,[[["builderflags",3]]]],[11,"sub_assign","skia_safe::gradient_shader","Disables all flags enabled in the set.",257,[[["flags",3]]]],[11,"sub_assign","skia_safe::layer_draw_looper","Disables all flags enabled in the set.",259,[[["bits",3]]]],[11,"sub_assign","skia_safe::runtime_effect::uniform","Disables all flags enabled in the set.",260,[[["flags",3]]]],[11,"sub_assign","skia_safe::gpu::gl","Disables all flags enabled in the set.",262,[[["backendstate",3]]]],[11,"sub_assign","skia_safe::gpu::vk","Disables all flags enabled in the set.",264,[[["extensionflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",265,[[["featureflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",267,[[["allocflag",3]]]],[11,"sub_assign","skia_safe::textlayout","Disables all flags enabled in the set.",269,[[["textdecoration",3]]]],[11,"sub_assign","skia_safe::svg::canvas","Disables all flags enabled in the set.",73,[[["flags",3]]]],[11,"sub_assign","skia_safe::utils::shadow_utils","Disables all flags enabled in the set.",77,[[["shadowflags",3]]]],[11,"mul_assign","skia_safe","",192,[[]]],[11,"mul_assign","","",192,[[["scalar",6]]]],[11,"mul_assign","","",193,[[]]],[11,"mul_assign","","",193,[[["scalar",6]]]],[11,"mul_assign","","",194,[[]]],[11,"mul_assign","","",194,[[["scalar",6]]]],[11,"mul_assign","","",196,[[["scalar",6]]]],[11,"mul_assign","","",205,[[["scalar",6]]]],[11,"div_assign","","",192,[[["scalar",6]]]],[11,"div_assign","","",205,[[["scalar",6]]]],[11,"not","skia_safe::canvas","Returns the complement of this set of flags.",211,[[],["savelayerflags",3]]],[11,"not","skia_safe","Returns the complement of this set of flags.",218,[[],["colorchannelflag",3]]],[11,"not","skia_safe::color_filter","Returns the complement of this set of flags.",219,[[],["flags",3]]],[11,"not","skia_safe::contour_measure","Returns the complement of this set of flags.",221,[[],["matrixflags",3]]],[11,"not","skia_safe::font_metrics","Returns the complement of this set of flags.",228,[[],["flags",3]]],[11,"not","skia_safe::image_filter::crop_rect","Returns the complement of this set of flags.",232,[[],["cropedge",3]]],[11,"not","skia_safe::matrix","Returns the complement of this set of flags.",235,[[],["typemask",3]]],[11,"not","skia_safe::matrix44","Returns the complement of this set of flags.",238,[[],["typemask",3]]],[11,"not","skia_safe::path_effect::point_data","Returns the complement of this set of flags.",242,[[],["pointflags",3]]],[11,"not","skia_safe::path_measure","Returns the complement of this set of flags.",243,[[],["matrixflags",3]]],[11,"not","skia_safe::path","Returns the complement of this set of flags.",244,[[],["pathsegmentmask",3]]],[11,"not","skia_safe","Returns the complement of this set of flags.",250,[[],["surfacepropsflags",3]]],[11,"not","skia_safe::vertices","Returns the complement of this set of flags.",255,[[],["builderflags",3]]],[11,"not","skia_safe::gradient_shader","Returns the complement of this set of flags.",257,[[],["flags",3]]],[11,"not","skia_safe::layer_draw_looper","Returns the complement of this set of flags.",259,[[],["bits",3]]],[11,"not","skia_safe::runtime_effect::uniform","Returns the complement of this set of flags.",260,[[],["flags",3]]],[11,"not","skia_safe::gpu::gl","Returns the complement of this set of flags.",262,[[],["backendstate",3]]],[11,"not","skia_safe::gpu::vk","Returns the complement of this set of flags.",264,[[],["extensionflags",3]]],[11,"not","","Returns the complement of this set of flags.",265,[[],["featureflags",3]]],[11,"not","","Returns the complement of this set of flags.",267,[[],["allocflag",3]]],[11,"not","skia_safe::textlayout","Returns the complement of this set of flags.",269,[[],["textdecoration",3]]],[11,"not","skia_safe::svg::canvas","Returns the complement of this set of flags.",73,[[],["flags",3]]],[11,"not","skia_safe::utils::shadow_utils","Returns the complement of this set of flags.",77,[[],["shadowflags",3]]],[11,"bitand","skia_safe::canvas","Returns the intersection between the two sets of flags.",211,[[["savelayerflags",3]],["savelayerflags",3]]],[11,"bitand","skia_safe","",217,[[]]],[11,"bitand","","",217,[[]]],[11,"bitand","","Returns the intersection between the two sets of flags.",218,[[["colorchannelflag",3]],["colorchannelflag",3]]],[11,"bitand","skia_safe::color_filter","Returns the intersection between the two sets of flags.",219,[[["flags",3]],["flags",3]]],[11,"bitand","skia_safe::contour_measure","Returns the intersection between the two sets of flags.",221,[[["matrixflags",3]],["matrixflags",3]]],[11,"bitand","skia_safe::font_metrics","Returns the intersection between the two sets of flags.",228,[[["flags",3]],["flags",3]]],[11,"bitand","skia_safe::image_filter::crop_rect","Returns the intersection between the two sets of flags.",232,[[["cropedge",3]],["cropedge",3]]],[11,"bitand","skia_safe::matrix","Returns the intersection between the two sets of flags.",235,[[["typemask",3]],["typemask",3]]],[11,"bitand","skia_safe::matrix44","Returns the intersection between the two sets of flags.",238,[[["typemask",3]],["typemask",3]]],[11,"bitand","skia_safe::path_effect::point_data","Returns the intersection between the two sets of flags.",242,[[["pointflags",3]],["pointflags",3]]],[11,"bitand","skia_safe::path_measure","Returns the intersection between the two sets of flags.",243,[[["matrixflags",3]],["matrixflags",3]]],[11,"bitand","skia_safe::path","Returns the intersection between the two sets of flags.",244,[[["pathsegmentmask",3]],["pathsegmentmask",3]]],[11,"bitand","skia_safe","Returns the intersection between the two sets of flags.",250,[[["surfacepropsflags",3]],["surfacepropsflags",3]]],[11,"bitand","skia_safe::vertices","Returns the intersection between the two sets of flags.",255,[[["builderflags",3]],["builderflags",3]]],[11,"bitand","skia_safe::gradient_shader","Returns the intersection between the two sets of flags.",257,[[["flags",3]],["flags",3]]],[11,"bitand","skia_safe::layer_draw_looper","Returns the intersection between the two sets of flags.",259,[[["bits",3]],["bits",3]]],[11,"bitand","skia_safe::runtime_effect::uniform","Returns the intersection between the two sets of flags.",260,[[["flags",3]],["flags",3]]],[11,"bitand","skia_safe::gpu::gl","Returns the intersection between the two sets of flags.",262,[[["backendstate",3]],["backendstate",3]]],[11,"bitand","skia_safe::gpu::vk","Returns the intersection between the two sets of flags.",264,[[["extensionflags",3]],["extensionflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",265,[[["featureflags",3]],["featureflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",267,[[["allocflag",3]],["allocflag",3]]],[11,"bitand","skia_safe::textlayout","Returns the intersection between the two sets of flags.",269,[[["textdecoration",3]],["textdecoration",3]]],[11,"bitand","skia_safe::svg::canvas","Returns the intersection between the two sets of flags.",73,[[["flags",3]],["flags",3]]],[11,"bitand","skia_safe::utils::shadow_utils","Returns the intersection between the two sets of flags.",77,[[["shadowflags",3]],["shadowflags",3]]],[11,"bitor","skia_safe::canvas","Returns the union of the two sets of flags.",211,[[["savelayerflags",3]],["savelayerflags",3]]],[11,"bitor","skia_safe","",217,[[]]],[11,"bitor","","",217,[[]]],[11,"bitor","","Returns the union of the two sets of flags.",218,[[["colorchannelflag",3]],["colorchannelflag",3]]],[11,"bitor","skia_safe::color_filter","Returns the union of the two sets of flags.",219,[[["flags",3]],["flags",3]]],[11,"bitor","skia_safe::contour_measure","Returns the union of the two sets of flags.",221,[[["matrixflags",3]],["matrixflags",3]]],[11,"bitor","skia_safe::font_metrics","Returns the union of the two sets of flags.",228,[[["flags",3]],["flags",3]]],[11,"bitor","skia_safe::image_filter::crop_rect","Returns the union of the two sets of flags.",232,[[["cropedge",3]],["cropedge",3]]],[11,"bitor","skia_safe::matrix","Returns the union of the two sets of flags.",235,[[["typemask",3]],["typemask",3]]],[11,"bitor","skia_safe::matrix44","Returns the union of the two sets of flags.",238,[[["typemask",3]],["typemask",3]]],[11,"bitor","skia_safe::path_effect::point_data","Returns the union of the two sets of flags.",242,[[["pointflags",3]],["pointflags",3]]],[11,"bitor","skia_safe::path_measure","Returns the union of the two sets of flags.",243,[[["matrixflags",3]],["matrixflags",3]]],[11,"bitor","skia_safe::path","Returns the union of the two sets of flags.",244,[[["pathsegmentmask",3]],["pathsegmentmask",3]]],[11,"bitor","skia_safe","Returns the union of the two sets of flags.",250,[[["surfacepropsflags",3]],["surfacepropsflags",3]]],[11,"bitor","skia_safe::vertices","Returns the union of the two sets of flags.",255,[[["builderflags",3]],["builderflags",3]]],[11,"bitor","skia_safe::gradient_shader","Returns the union of the two sets of flags.",257,[[["flags",3]],["flags",3]]],[11,"bitor","skia_safe::layer_draw_looper","Returns the union of the two sets of flags.",259,[[["bits",3]],["bits",3]]],[11,"bitor","skia_safe::runtime_effect::uniform","Returns the union of the two sets of flags.",260,[[["flags",3]],["flags",3]]],[11,"bitor","skia_safe::gpu::gl","Returns the union of the two sets of flags.",262,[[["backendstate",3]],["backendstate",3]]],[11,"bitor","skia_safe::gpu::vk","Returns the union of the two sets of flags.",264,[[["extensionflags",3]],["extensionflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",265,[[["featureflags",3]],["featureflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",267,[[["allocflag",3]],["allocflag",3]]],[11,"bitor","skia_safe::textlayout","Returns the union of the two sets of flags.",269,[[["textdecoration",3]],["textdecoration",3]]],[11,"bitor","skia_safe::svg::canvas","Returns the union of the two sets of flags.",73,[[["flags",3]],["flags",3]]],[11,"bitor","skia_safe::utils::shadow_utils","Returns the union of the two sets of flags.",77,[[["shadowflags",3]],["shadowflags",3]]],[11,"bitxor","skia_safe::canvas","Returns the left flags, but with all the right flags â€¦",211,[[["savelayerflags",3]],["savelayerflags",3]]],[11,"bitxor","skia_safe","Returns the left flags, but with all the right flags â€¦",218,[[["colorchannelflag",3]],["colorchannelflag",3]]],[11,"bitxor","skia_safe::color_filter","Returns the left flags, but with all the right flags â€¦",219,[[["flags",3]],["flags",3]]],[11,"bitxor","skia_safe::contour_measure","Returns the left flags, but with all the right flags â€¦",221,[[["matrixflags",3]],["matrixflags",3]]],[11,"bitxor","skia_safe::font_metrics","Returns the left flags, but with all the right flags â€¦",228,[[["flags",3]],["flags",3]]],[11,"bitxor","skia_safe::image_filter::crop_rect","Returns the left flags, but with all the right flags â€¦",232,[[["cropedge",3]],["cropedge",3]]],[11,"bitxor","skia_safe::matrix","Returns the left flags, but with all the right flags â€¦",235,[[["typemask",3]],["typemask",3]]],[11,"bitxor","skia_safe::matrix44","Returns the left flags, but with all the right flags â€¦",238,[[["typemask",3]],["typemask",3]]],[11,"bitxor","skia_safe::path_effect::point_data","Returns the left flags, but with all the right flags â€¦",242,[[["pointflags",3]],["pointflags",3]]],[11,"bitxor","skia_safe::path_measure","Returns the left flags, but with all the right flags â€¦",243,[[["matrixflags",3]],["matrixflags",3]]],[11,"bitxor","skia_safe::path","Returns the left flags, but with all the right flags â€¦",244,[[["pathsegmentmask",3]],["pathsegmentmask",3]]],[11,"bitxor","skia_safe","Returns the left flags, but with all the right flags â€¦",250,[[["surfacepropsflags",3]],["surfacepropsflags",3]]],[11,"bitxor","skia_safe::vertices","Returns the left flags, but with all the right flags â€¦",255,[[["builderflags",3]],["builderflags",3]]],[11,"bitxor","skia_safe::gradient_shader","Returns the left flags, but with all the right flags â€¦",257,[[["flags",3]],["flags",3]]],[11,"bitxor","skia_safe::layer_draw_looper","Returns the left flags, but with all the right flags â€¦",259,[[["bits",3]],["bits",3]]],[11,"bitxor","skia_safe::runtime_effect::uniform","Returns the left flags, but with all the right flags â€¦",260,[[["flags",3]],["flags",3]]],[11,"bitxor","skia_safe::gpu::gl","Returns the left flags, but with all the right flags â€¦",262,[[["backendstate",3]],["backendstate",3]]],[11,"bitxor","skia_safe::gpu::vk","Returns the left flags, but with all the right flags â€¦",264,[[["extensionflags",3]],["extensionflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags â€¦",265,[[["featureflags",3]],["featureflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags â€¦",267,[[["allocflag",3]],["allocflag",3]]],[11,"bitxor","skia_safe::textlayout","Returns the left flags, but with all the right flags â€¦",269,[[["textdecoration",3]],["textdecoration",3]]],[11,"bitxor","skia_safe::svg::canvas","Returns the left flags, but with all the right flags â€¦",73,[[["flags",3]],["flags",3]]],[11,"bitxor","skia_safe::utils::shadow_utils","Returns the left flags, but with all the right flags â€¦",77,[[["shadowflags",3]],["shadowflags",3]]],[11,"bitand_assign","skia_safe::canvas","Disables all flags disabled in the set.",211,[[["savelayerflags",3]]]],[11,"bitand_assign","skia_safe","Disables all flags disabled in the set.",218,[[["colorchannelflag",3]]]],[11,"bitand_assign","skia_safe::color_filter","Disables all flags disabled in the set.",219,[[["flags",3]]]],[11,"bitand_assign","skia_safe::contour_measure","Disables all flags disabled in the set.",221,[[["matrixflags",3]]]],[11,"bitand_assign","skia_safe::font_metrics","Disables all flags disabled in the set.",228,[[["flags",3]]]],[11,"bitand_assign","skia_safe::image_filter::crop_rect","Disables all flags disabled in the set.",232,[[["cropedge",3]]]],[11,"bitand_assign","skia_safe::matrix","Disables all flags disabled in the set.",235,[[["typemask",3]]]],[11,"bitand_assign","skia_safe::matrix44","Disables all flags disabled in the set.",238,[[["typemask",3]]]],[11,"bitand_assign","skia_safe::path_effect::point_data","Disables all flags disabled in the set.",242,[[["pointflags",3]]]],[11,"bitand_assign","skia_safe::path_measure","Disables all flags disabled in the set.",243,[[["matrixflags",3]]]],[11,"bitand_assign","skia_safe::path","Disables all flags disabled in the set.",244,[[["pathsegmentmask",3]]]],[11,"bitand_assign","skia_safe","Disables all flags disabled in the set.",250,[[["surfacepropsflags",3]]]],[11,"bitand_assign","skia_safe::vertices","Disables all flags disabled in the set.",255,[[["builderflags",3]]]],[11,"bitand_assign","skia_safe::gradient_shader","Disables all flags disabled in the set.",257,[[["flags",3]]]],[11,"bitand_assign","skia_safe::layer_draw_looper","Disables all flags disabled in the set.",259,[[["bits",3]]]],[11,"bitand_assign","skia_safe::runtime_effect::uniform","Disables all flags disabled in the set.",260,[[["flags",3]]]],[11,"bitand_assign","skia_safe::gpu::gl","Disables all flags disabled in the set.",262,[[["backendstate",3]]]],[11,"bitand_assign","skia_safe::gpu::vk","Disables all flags disabled in the set.",264,[[["extensionflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",265,[[["featureflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",267,[[["allocflag",3]]]],[11,"bitand_assign","skia_safe::textlayout","Disables all flags disabled in the set.",269,[[["textdecoration",3]]]],[11,"bitand_assign","skia_safe::svg::canvas","Disables all flags disabled in the set.",73,[[["flags",3]]]],[11,"bitand_assign","skia_safe::utils::shadow_utils","Disables all flags disabled in the set.",77,[[["shadowflags",3]]]],[11,"bitor_assign","skia_safe::canvas","Adds the set of flags.",211,[[["savelayerflags",3]]]],[11,"bitor_assign","skia_safe","Adds the set of flags.",218,[[["colorchannelflag",3]]]],[11,"bitor_assign","skia_safe::color_filter","Adds the set of flags.",219,[[["flags",3]]]],[11,"bitor_assign","skia_safe::contour_measure","Adds the set of flags.",221,[[["matrixflags",3]]]],[11,"bitor_assign","skia_safe::font_metrics","Adds the set of flags.",228,[[["flags",3]]]],[11,"bitor_assign","skia_safe::image_filter::crop_rect","Adds the set of flags.",232,[[["cropedge",3]]]],[11,"bitor_assign","skia_safe::matrix","Adds the set of flags.",235,[[["typemask",3]]]],[11,"bitor_assign","skia_safe::matrix44","Adds the set of flags.",238,[[["typemask",3]]]],[11,"bitor_assign","skia_safe::path_effect::point_data","Adds the set of flags.",242,[[["pointflags",3]]]],[11,"bitor_assign","skia_safe::path_measure","Adds the set of flags.",243,[[["matrixflags",3]]]],[11,"bitor_assign","skia_safe::path","Adds the set of flags.",244,[[["pathsegmentmask",3]]]],[11,"bitor_assign","skia_safe","Adds the set of flags.",250,[[["surfacepropsflags",3]]]],[11,"bitor_assign","skia_safe::vertices","Adds the set of flags.",255,[[["builderflags",3]]]],[11,"bitor_assign","skia_safe::gradient_shader","Adds the set of flags.",257,[[["flags",3]]]],[11,"bitor_assign","skia_safe::layer_draw_looper","Adds the set of flags.",259,[[["bits",3]]]],[11,"bitor_assign","skia_safe::runtime_effect::uniform","Adds the set of flags.",260,[[["flags",3]]]],[11,"bitor_assign","skia_safe::gpu::gl","Adds the set of flags.",262,[[["backendstate",3]]]],[11,"bitor_assign","skia_safe::gpu::vk","Adds the set of flags.",264,[[["extensionflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",265,[[["featureflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",267,[[["allocflag",3]]]],[11,"bitor_assign","skia_safe::textlayout","Adds the set of flags.",269,[[["textdecoration",3]]]],[11,"bitor_assign","skia_safe::svg::canvas","Adds the set of flags.",73,[[["flags",3]]]],[11,"bitor_assign","skia_safe::utils::shadow_utils","Adds the set of flags.",77,[[["shadowflags",3]]]],[11,"bitxor_assign","skia_safe::canvas","Toggles the set of flags.",211,[[["savelayerflags",3]]]],[11,"bitxor_assign","skia_safe","Toggles the set of flags.",218,[[["colorchannelflag",3]]]],[11,"bitxor_assign","skia_safe::color_filter","Toggles the set of flags.",219,[[["flags",3]]]],[11,"bitxor_assign","skia_safe::contour_measure","Toggles the set of flags.",221,[[["matrixflags",3]]]],[11,"bitxor_assign","skia_safe::font_metrics","Toggles the set of flags.",228,[[["flags",3]]]],[11,"bitxor_assign","skia_safe::image_filter::crop_rect","Toggles the set of flags.",232,[[["cropedge",3]]]],[11,"bitxor_assign","skia_safe::matrix","Toggles the set of flags.",235,[[["typemask",3]]]],[11,"bitxor_assign","skia_safe::matrix44","Toggles the set of flags.",238,[[["typemask",3]]]],[11,"bitxor_assign","skia_safe::path_effect::point_data","Toggles the set of flags.",242,[[["pointflags",3]]]],[11,"bitxor_assign","skia_safe::path_measure","Toggles the set of flags.",243,[[["matrixflags",3]]]],[11,"bitxor_assign","skia_safe::path","Toggles the set of flags.",244,[[["pathsegmentmask",3]]]],[11,"bitxor_assign","skia_safe","Toggles the set of flags.",250,[[["surfacepropsflags",3]]]],[11,"bitxor_assign","skia_safe::vertices","Toggles the set of flags.",255,[[["builderflags",3]]]],[11,"bitxor_assign","skia_safe::gradient_shader","Toggles the set of flags.",257,[[["flags",3]]]],[11,"bitxor_assign","skia_safe::layer_draw_looper","Toggles the set of flags.",259,[[["bits",3]]]],[11,"bitxor_assign","skia_safe::runtime_effect::uniform","Toggles the set of flags.",260,[[["flags",3]]]],[11,"bitxor_assign","skia_safe::gpu::gl","Toggles the set of flags.",262,[[["backendstate",3]]]],[11,"bitxor_assign","skia_safe::gpu::vk","Toggles the set of flags.",264,[[["extensionflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",265,[[["featureflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",267,[[["allocflag",3]]]],[11,"bitxor_assign","skia_safe::textlayout","Toggles the set of flags.",269,[[["textdecoration",3]]]],[11,"bitxor_assign","skia_safe::svg::canvas","Toggles the set of flags.",73,[[["flags",3]]]],[11,"bitxor_assign","skia_safe::utils::shadow_utils","Toggles the set of flags.",77,[[["shadowflags",3]]]],[11,"index","skia_safe","",185,[[]]],[11,"index","","",300,[[]]],[11,"index","","",194,[[]]],[11,"index","skia_safe::matrix","",236,[[["member",4]]]],[11,"index","","",236,[[["affinemember",4]]]],[11,"index","","",236,[[]]],[11,"index","skia_safe","",272,[[]]],[11,"index","","",272,[[]]],[11,"index","","",275,[[]]],[11,"index","skia_safe::textlayout","",270,[[]]],[11,"index_mut","skia_safe","",185,[[]]],[11,"index_mut","skia_safe::matrix","",236,[[["member",4]]]],[11,"index_mut","","",236,[[["affinemember",4]]]],[11,"index_mut","","",236,[[]]],[11,"hash","skia_safe::codec","",25,[[]]],[11,"hash","skia_safe::canvas","",211,[[]]],[11,"hash","skia_safe","",218,[[]]],[11,"hash","skia_safe::color_filter","",219,[[]]],[11,"hash","skia_safe::contour_measure","",221,[[]]],[11,"hash","skia_safe::font_metrics","",228,[[]]],[11,"hash","skia_safe","",190,[[]]],[11,"hash","skia_safe::image_filter::crop_rect","",232,[[]]],[11,"hash","skia_safe","",191,[[]]],[11,"hash","skia_safe::matrix","",235,[[]]],[11,"hash","skia_safe::matrix44","",238,[[]]],[11,"hash","skia_safe::path_effect::point_data","",242,[[]]],[11,"hash","skia_safe::path_measure","",243,[[]]],[11,"hash","skia_safe::path","",244,[[]]],[11,"hash","skia_safe::sampling_options","",119,[[]]],[11,"hash","","",120,[[]]],[11,"hash","skia_safe","",250,[[]]],[11,"hash","","",208,[[]]],[11,"hash","skia_safe::vertices","",255,[[]]],[11,"hash","skia_safe::yuva_info","",138,[[]]],[11,"hash","skia_safe::gradient_shader","",257,[[]]],[11,"hash","skia_safe::layer_draw_looper","",259,[[]]],[11,"hash","skia_safe::runtime_effect::uniform","",260,[[]]],[11,"hash","skia_safe::gpu::gl","",262,[[]]],[11,"hash","skia_safe::gpu::vk","",264,[[]]],[11,"hash","","",265,[[]]],[11,"hash","","",267,[[]]],[11,"hash","skia_safe::textlayout","",269,[[]]],[11,"hash","skia_safe","",272,[[]]],[11,"hash","skia_safe::svg::canvas","",73,[[]]],[11,"hash","skia_safe::utils::shadow_utils","",77,[[]]],[11,"from_iter","skia_safe::canvas","",211,[[["intoiterator",8]],["savelayerflags",3]]],[11,"from_iter","skia_safe","",218,[[["intoiterator",8]],["colorchannelflag",3]]],[11,"from_iter","skia_safe::color_filter","",219,[[["intoiterator",8]],["flags",3]]],[11,"from_iter","skia_safe::contour_measure","",221,[[["intoiterator",8]],["matrixflags",3]]],[11,"from_iter","skia_safe::font_metrics","",228,[[["intoiterator",8]],["flags",3]]],[11,"from_iter","skia_safe::image_filter::crop_rect","",232,[[["intoiterator",8]],["cropedge",3]]],[11,"from_iter","skia_safe::matrix","",235,[[["intoiterator",8]],["typemask",3]]],[11,"from_iter","skia_safe::matrix44","",238,[[["intoiterator",8]],["typemask",3]]],[11,"from_iter","skia_safe::path_effect::point_data","",242,[[["intoiterator",8]],["pointflags",3]]],[11,"from_iter","skia_safe::path_measure","",243,[[["intoiterator",8]],["matrixflags",3]]],[11,"from_iter","skia_safe::path","",244,[[["intoiterator",8]],["pathsegmentmask",3]]],[11,"from_iter","skia_safe","",250,[[["intoiterator",8]],["surfacepropsflags",3]]],[11,"from_iter","skia_safe::vertices","",255,[[["intoiterator",8]],["builderflags",3]]],[11,"from_iter","skia_safe::gradient_shader","",257,[[["intoiterator",8]],["flags",3]]],[11,"from_iter","skia_safe::layer_draw_looper","",259,[[["intoiterator",8]],["bits",3]]],[11,"from_iter","skia_safe::runtime_effect::uniform","",260,[[["intoiterator",8]],["flags",3]]],[11,"from_iter","skia_safe::gpu::gl","",262,[[["intoiterator",8]],["backendstate",3]]],[11,"from_iter","skia_safe::gpu::vk","",264,[[["intoiterator",8]],["extensionflags",3]]],[11,"from_iter","","",265,[[["intoiterator",8]],["featureflags",3]]],[11,"from_iter","","",267,[[["intoiterator",8]],["allocflag",3]]],[11,"from_iter","skia_safe::textlayout","",269,[[["intoiterator",8]],["textdecoration",3]]],[11,"from_iter","skia_safe::svg::canvas","",73,[[["intoiterator",8]],["flags",3]]],[11,"from_iter","skia_safe::utils::shadow_utils","",77,[[["intoiterator",8]],["shadowflags",3]]],[11,"fmt","skia_safe::canvas","",211,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe","",218,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::color_filter","",219,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::contour_measure","",221,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::font_metrics","",228,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::image_filter::crop_rect","",232,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::matrix","",235,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::matrix44","",238,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::path_effect::point_data","",242,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::path_measure","",243,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::path","",244,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe","",250,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::vertices","",255,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::gradient_shader","",257,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::layer_draw_looper","",259,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::runtime_effect::uniform","",260,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::gpu::gl","",262,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::gpu::vk","",264,[[["formatter",3]],["result",6]]],[11,"fmt","","",265,[[["formatter",3]],["result",6]]],[11,"fmt","","",267,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::textlayout","",269,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::svg::canvas","",73,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::utils::shadow_utils","",77,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::canvas","",211,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe","",218,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::color_filter","",219,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::contour_measure","",221,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::font_metrics","",228,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::image_filter::crop_rect","",232,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::matrix","",235,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::matrix44","",238,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::path_effect::point_data","",242,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::path_measure","",243,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::path","",244,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe","",250,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::vertices","",255,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::gradient_shader","",257,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::layer_draw_looper","",259,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::runtime_effect::uniform","",260,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::gpu::gl","",262,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::gpu::vk","",264,[[["formatter",3]],["result",6]]],[11,"fmt","","",265,[[["formatter",3]],["result",6]]],[11,"fmt","","",267,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::textlayout","",269,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::svg::canvas","",73,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::utils::shadow_utils","",77,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::canvas","",211,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe","",218,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::color_filter","",219,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::contour_measure","",221,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::font_metrics","",228,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::image_filter::crop_rect","",232,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::matrix","",235,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::matrix44","",238,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::path_effect::point_data","",242,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::path_measure","",243,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::path","",244,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe","",250,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::vertices","",255,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::gradient_shader","",257,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::layer_draw_looper","",259,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::runtime_effect::uniform","",260,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::gpu::gl","",262,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::gpu::vk","",264,[[["formatter",3]],["result",6]]],[11,"fmt","","",265,[[["formatter",3]],["result",6]]],[11,"fmt","","",267,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::textlayout","",269,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::svg::canvas","",73,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::utils::shadow_utils","",77,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::canvas","",211,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe","",218,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::color_filter","",219,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::contour_measure","",221,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::font_metrics","",228,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::image_filter::crop_rect","",232,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::matrix","",235,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::matrix44","",238,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::path_effect::point_data","",242,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::path_measure","",243,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::path","",244,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe","",250,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::vertices","",255,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::gradient_shader","",257,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::layer_draw_looper","",259,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::runtime_effect::uniform","",260,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::gpu::gl","",262,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::gpu::vk","",264,[[["formatter",3]],["result",6]]],[11,"fmt","","",265,[[["formatter",3]],["result",6]]],[11,"fmt","","",267,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::textlayout","",269,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::svg::canvas","",73,[[["formatter",3]],["result",6]]],[11,"fmt","skia_safe::utils::shadow_utils","",77,[[["formatter",3]],["result",6]]],[18,"LastCoeffMode","skia_safe","",1,null],[18,"LastSeparableMode","","",1,null],[18,"LastMode","","",1,null],[11,"as_coeff","","",1,[[],["option",4]]],[11,"name","","",1,[[]]],[18,"LastEnum","","",3,null],[18,"Max_EnumValue","","",4,null],[18,"LastEnum","","",5,null],[18,"Last","","",6,null],[18,"Last","","",8,null],[18,"LastEnum","","",10,null],[11,"is_opaque","","",10,[[]]],[18,"LastEnum","","",11,null],[18,"JPEG","","",11,null],[18,"Rec601","","",11,null],[18,"Rec709","","",11,null],[18,"BT2020","","",11,null],[18,"Last","skia_safe::paint","",12,null],[18,"Default","","",12,null],[18,"Last","","",13,null],[18,"Default","","",13,null],[11,"is_even_odd","skia_safe::path_types","",15,[[]]],[11,"is_inverse","","",15,[[]]],[11,"to_non_inverse","","",15,[[],["skpathfilltype",4]]],[18,"MAX_POINTS","","The maximum number of points an iterator will return for â€¦",17,null],[11,"points","","The number of points an iterator will return for the verb.",17,[[]]],[18,"Last","skia_safe::sampling_options","",18,null],[18,"Last","","",19,null],[18,"LastTileMode","skia_safe","",20,null],[11,"from_data","","",274,[[],[["codec",6],["option",4]]]],[11,"info","","",274,[[],["imageinfo",6]]],[11,"dimensions","","",274,[[],["isize",3]]],[11,"bounds","","",274,[[],["irect",3]]],[11,"origin","","",274,[[],["encodedorigin",4]]],[11,"get_scaled_dimensions","","",274,[[],["isize",3]]],[11,"valid_subset","","",274,[[],[["option",4],["irect",3]]]],[11,"encoded_format","","",274,[[],["encodedimageformat",4]]],[11,"get_pixels_with_options","","",274,[[["options",3],["option",4],["imageinfo",6]],["result",4]]],[11,"get_pixels","","",274,[[["imageinfo",6]],["result",4]]],[11,"get_pixels_to_pixmap","","",274,[[["pixmap",6],["option",4],["options",3]],["result",4]]],[18,"LAST","skia_safe::codec","",25,null],[18,"DEFAULT","","",25,null],[11,"to_matrix","","Given an width and height of the source data, returns a â€¦",25,[[],["matrix",3]]],[11,"swaps_width_height","","Return <code>true</code> if the encoded origin includes a 90 degree â€¦",25,[[]]],[11,"annotate_rect_with_url","skia_safe::canvas","",213,[[["data",6]]]],[11,"annotate_named_destination","","",213,[[["data",6]]]],[11,"annotate_link_to_destination","","",213,[[["data",6]]]],[11,"new","skia_safe","Creates an empty [Bitmap] without pixels, with [â€¦",272,[[]]],[11,"swap","","Swaps the fields of the two bitmaps.",272,[[]]],[11,"pixmap","","Returns a constant reference to the [Pixmap] holding the [â€¦",272,[[],["pixmap",6]]],[11,"info","","Returns width, height, [AlphaType], [ColorType], and [â€¦",272,[[],["imageinfo",6]]],[11,"width","","Returns pixel count in each row. Should be equal or less â€¦",272,[[]]],[11,"height","","Returns pixel row count.",272,[[]]],[11,"color_type","","",272,[[],["colortype",4]]],[11,"alpha_type","","",272,[[],["alphatype",4]]],[11,"color_space","","Returns [ColorSpace], the range of colors, associated â€¦",272,[[],[["colorspace",6],["option",4]]]],[11,"bytes_per_pixel","","Returns number of bytes per pixel required by [ColorType].",272,[[]]],[11,"row_bytes_as_pixels","","Returns number of pixels that fit on row. Should be â€¦",272,[[]]],[11,"shift_per_pixel","","Returns bit shift converting row bytes to row pixels.",272,[[]]],[11,"is_empty","","Returns <code>true</code> if either <code>width()</code> or <code>height()</code> are zero.",272,[[]]],[11,"is_null","","Returns <code>true</code> if [PixelRef] is <code>None</code>.",272,[[]]],[11,"draws_nothing","","Returns <code>true</code> if <code>width()</code> or <code>height()</code> are zero, or if [â€¦",272,[[]]],[11,"row_bytes","","Returns row bytes, the interval from one pixel row to the â€¦",272,[[]]],[11,"set_alpha_type","","Sets [AlphaType], if <code>alpha_type</code> is compatible with [â€¦",272,[[["alphatype",4]]]],[11,"pixels","","Returns pixel address, the base address corresponding to â€¦",272,[[]]],[11,"compute_byte_size","","Returns minimum memory required for pixel storage.",272,[[]]],[11,"is_immutable","","Returns <code>true</code> if pixels can not change.",272,[[]]],[11,"set_immutable","","Sets internal flag to mark [Bitmap] as immutable. Once â€¦",272,[[]]],[11,"is_opaque","","Returns <code>true</code> if [AlphaType] is set to hint that all â€¦",272,[[]]],[11,"reset","","Resets to its initial state; all fields are set to zero, â€¦",272,[[]]],[11,"compute_is_opaque","","Returns <code>true </code>if all pixels are opaque. [ColorType] â€¦",272,[[]]],[11,"bounds","","Returns <code>IRect { 0, 0, width(), height() }</code>.",272,[[],["irect",3]]],[11,"dimensions","","Returns <code>ISize { width(), height() }</code>.",272,[[],["isize",3]]],[11,"get_subset","","Returns the bounds of this bitmap, offset by its [PixelRefâ€¦",272,[[],["irect",3]]],[11,"set_info","","Sets width, height, [AlphaType], [ColorType], [ColorSpace]â€¦",272,[[["imageinfo",6]]]],[11,"try_alloc_pixels_flags","","Sets [ImageInfo] to info following the rules in <code>set_info()</code>â€¦",272,[[["imageinfo",6]]]],[11,"alloc_pixels_flags","","Sets [ImageInfo] to info following the rules in <code>set_info()</code>â€¦",272,[[["imageinfo",6]]]],[11,"try_alloc_pixels_info","","Sets [ImageInfo] to info following the rules in <code>set_info()</code>â€¦",272,[[["imageinfo",6]]]],[11,"alloc_pixels_info","","Sets [ImageInfo] to info following the rules in <code>set_info()</code>â€¦",272,[[["imageinfo",6]]]],[11,"try_alloc_n32_pixels","","Sets [ImageInfo] to width, height, and native color type; â€¦",272,[[]]],[11,"alloc_n32_pixels","","Sets [ImageInfo] to width, height, and native color type; â€¦",272,[[]]],[11,"install_pixels","","Sets [ImageInfo] to info following the rules in <code>set_info()</code>â€¦",272,[[["imageinfo",6]]]],[11,"try_alloc_pixels","","Allocates pixel memory with HeapAllocator, and replaces â€¦",272,[[]]],[11,"alloc_pixels","","Allocates pixel memory with HeapAllocator, and replaces â€¦",272,[[]]],[11,"pixel_ref","","Returns [PixelRef], which contains: pixel base address; â€¦",272,[[],[["pixelref",6],["option",4]]]],[11,"pixel_ref_origin","","Returns origin of pixels within [PixelRef]. [Bitmap] â€¦",272,[[],["ipoint",3]]],[11,"set_pixel_ref","","Replaces <code>pixel_ref</code> and origin in [Bitmap].  <code>offset</code> â€¦",272,[[]]],[11,"is_ready_to_draw","","Returns <code>true</code> if [Bitmap] can be drawn.",272,[[]]],[11,"generation_id","","Returns a unique value corresponding to the pixels in [â€¦",272,[[]]],[11,"notify_pixels_changed","","Marks that pixels in [PixelRef] have changed. Subsequent â€¦",272,[[]]],[11,"erase_color","","Replaces pixel values with <code>c</code>, interpreted as being in the â€¦",272,[[]]],[11,"erase_argb","","Replaces pixel values with unpremultiplied color built â€¦",272,[[]]],[11,"erase","","Replaces pixel values inside area with c. interpreted as â€¦",272,[[]]],[11,"get_color","","Returns pixel at (x, y) as unpremultiplied color. Returns â€¦",272,[[],["color",3]]],[11,"get_alpha_f","","Look up the pixel at (x,y) and return its alpha â€¦",272,[[]]],[11,"get_addr","","Returns pixel address at (x, y).",272,[[]]],[11,"extract_subset","","Shares [PixelRef] with dst. Pixels are not copied; [Bitmapâ€¦",272,[[]]],[11,"read_pixels","","Copies a [crate::Rect] of pixels from [Bitmap] to â€¦",272,[[["imageinfo",6]]]],[11,"extract_alpha","","Sets dst to alpha described by pixels. Returns <code>false</code> if â€¦",272,[[["option",4],["paint",6]],[["ipoint",3],["option",4]]]],[11,"peek_pixels","","Copies [Bitmap] pixel address, row bytes, and [ImageInfo] â€¦",272,[[],[["borrows",3],["option",4]]]],[11,"to_shader","","",272,[[],[["option",4],["shader",6]]]],[11,"as_image","","Returns a new image from the bitmap. If the bitmap is â€¦",272,[[],["image",6]]],[11,"new","","Creates an empty [Bitmap] without pixels, with [â€¦",292,[[]]],[11,"swap","","Swaps the fields of the two bitmaps.",292,[[]]],[11,"pixmap","","Returns a constant reference to the [Pixmap] holding the [â€¦",292,[[],["pixmap",6]]],[11,"info","","Returns width, height, [AlphaType], [ColorType], and [â€¦",292,[[],["imageinfo",6]]],[11,"width","","Returns pixel count in each row. Should be equal or less â€¦",292,[[]]],[11,"height","","Returns pixel row count.",292,[[]]],[11,"color_type","","",292,[[],["colortype",4]]],[11,"alpha_type","","",292,[[],["alphatype",4]]],[11,"color_space","","Returns [ColorSpace], the range of colors, associated â€¦",292,[[],[["colorspace",6],["option",4]]]],[11,"bytes_per_pixel","","Returns number of bytes per pixel required by [ColorType].",292,[[]]],[11,"row_bytes_as_pixels","","Returns number of pixels that fit on row. Should be â€¦",292,[[]]],[11,"shift_per_pixel","","Returns bit shift converting row bytes to row pixels.",292,[[]]],[11,"is_empty","","Returns <code>true</code> if either <code>width()</code> or <code>height()</code> are zero.",292,[[]]],[11,"is_null","","Returns <code>true</code> if [PixelRef] is <code>None</code>.",292,[[]]],[11,"draws_nothing","","Returns <code>true</code> if <code>width()</code> or <code>height()</code> are zero, or if [â€¦",292,[[]]],[11,"row_bytes","","Returns row bytes, the interval from one pixel row to the â€¦",292,[[]]],[11,"set_alpha_type","","Sets [AlphaType], if <code>alpha_type</code> is compatible with [â€¦",292,[[["alphatype",4]]]],[11,"pixels","","Returns pixel address, the base address corresponding to â€¦",292,[[]]],[11,"compute_byte_size","","Returns minimum memory required for pixel storage.",292,[[]]],[11,"is_immutable","","Returns <code>true</code> if pixels can not change.",292,[[]]],[11,"set_immutable","","Sets internal flag to mark [Bitmap] as immutable. Once â€¦",292,[[]]],[11,"is_opaque","","Returns <code>true</code> if [AlphaType] is set to hint that all â€¦",292,[[]]],[11,"reset","","Resets to its initial state; all fields are set to zero, â€¦",292,[[]]],[11,"compute_is_opaque","","Returns <code>true </code>if all pixels are opaque. [ColorType] â€¦",292,[[]]],[11,"bounds","","Returns <code>IRect { 0, 0, width(), height() }</code>.",292,[[],["irect",3]]],[11,"dimensions","","Returns <code>ISize { width(), height() }</code>.",292,[[],["isize",3]]],[11,"get_subset","","Returns the bounds of this bitmap, offset by its [PixelRefâ€¦",292,[[],["irect",3]]],[11,"set_info","","Sets width, height, [AlphaType], [ColorType], [ColorSpace]â€¦",292,[[["imageinfo",6]]]],[11,"try_alloc_pixels_flags","","Sets [ImageInfo] to info following the rules in <code>set_info()</code>â€¦",292,[[["imageinfo",6]]]],[11,"alloc_pixels_flags","","Sets [ImageInfo] to info following the rules in <code>set_info()</code>â€¦",292,[[["imageinfo",6]]]],[11,"try_alloc_pixels_info","","Sets [ImageInfo] to info following the rules in <code>set_info()</code>â€¦",292,[[["imageinfo",6]]]],[11,"alloc_pixels_info","","Sets [ImageInfo] to info following the rules in <code>set_info()</code>â€¦",292,[[["imageinfo",6]]]],[11,"try_alloc_n32_pixels","","Sets [ImageInfo] to width, height, and native color type; â€¦",292,[[]]],[11,"alloc_n32_pixels","","Sets [ImageInfo] to width, height, and native color type; â€¦",292,[[]]],[11,"install_pixels","","Sets [ImageInfo] to info following the rules in <code>set_info()</code>â€¦",292,[[["imageinfo",6]]]],[11,"try_alloc_pixels","","Allocates pixel memory with HeapAllocator, and replaces â€¦",292,[[]]],[11,"alloc_pixels","","Allocates pixel memory with HeapAllocator, and replaces â€¦",292,[[]]],[11,"pixel_ref","","Returns [PixelRef], which contains: pixel base address; â€¦",292,[[],[["pixelref",6],["option",4]]]],[11,"pixel_ref_origin","","Returns origin of pixels within [PixelRef]. [Bitmap] â€¦",292,[[],["ipoint",3]]],[11,"set_pixel_ref","","Replaces <code>pixel_ref</code> and origin in [Bitmap].  <code>offset</code> â€¦",292,[[]]],[11,"is_ready_to_draw","","Returns <code>true</code> if [Bitmap] can be drawn.",292,[[]]],[11,"generation_id","","Returns a unique value corresponding to the pixels in [â€¦",292,[[]]],[11,"notify_pixels_changed","","Marks that pixels in [PixelRef] have changed. Subsequent â€¦",292,[[]]],[11,"erase_color","","Replaces pixel values with <code>c</code>, interpreted as being in the â€¦",292,[[]]],[11,"erase_argb","","Replaces pixel values with unpremultiplied color built â€¦",292,[[]]],[11,"erase","","Replaces pixel values inside area with c. interpreted as â€¦",292,[[]]],[11,"get_color","","Returns pixel at (x, y) as unpremultiplied color. Returns â€¦",292,[[],["color",3]]],[11,"get_alpha_f","","Look up the pixel at (x,y) and return its alpha â€¦",292,[[]]],[11,"get_addr","","Returns pixel address at (x, y).",292,[[]]],[11,"extract_subset","","Shares [PixelRef] with dst. Pixels are not copied; [Bitmapâ€¦",292,[[]]],[11,"read_pixels","","Copies a [crate::Rect] of pixels from [Bitmap] to â€¦",292,[[["imageinfo",6]]]],[11,"extract_alpha","","Sets dst to alpha described by pixels. Returns <code>false</code> if â€¦",292,[[["option",4],["paint",6]],[["ipoint",3],["option",4]]]],[11,"peek_pixels","","Copies [Bitmap] pixel address, row bytes, and [ImageInfo] â€¦",292,[[],[["borrows",3],["option",4]]]],[11,"to_shader","","",292,[[],[["option",4],["shader",6]]]],[11,"as_image","","Returns a new image from the bitmap. If the bitmap is â€¦",292,[[],["image",6]]],[18,"PRESERVE_LCD_TEXT","skia_safe::canvas","",211,null],[18,"INIT_WITH_PREVIOUS","","",211,null],[18,"F16_COLOR_TYPE","","",211,null],[11,"empty","","Returns an empty set of flags",211,[[],["savelayerflags",3]]],[11,"all","","Returns the set containing all flags.",211,[[],["savelayerflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",211,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that â€¦",211,[[],[["savelayerflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any â€¦",211,[[],["savelayerflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving allâ€¦",211,[[],["savelayerflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",211,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",211,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦",211,[[["savelayerflags",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained â€¦",211,[[["savelayerflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",211,[[["savelayerflags",3]]]],[11,"remove","","Removes the specified flags in-place.",211,[[["savelayerflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",211,[[["savelayerflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the â€¦",211,[[["savelayerflags",3]]]],[11,"bounds","","",212,[[["rect",3]]]],[11,"paint","","",212,[[["paint",6]]]],[11,"backdrop","","",212,[[["imagefilter",6]]]],[11,"clip_mask","","",212,[[["image",6]]]],[11,"clip_matrix","","",212,[[["matrix",3]]]],[11,"flags","","",212,[[["savelayerflags",3]]]],[11,"from_raster_direct","","",213,[[["surfaceprops",3],["option",4],["imageinfo",6]],[["ownedcanvas",3],["option",4]]]],[11,"from_raster_direct_n32","","",213,[[],[["ownedcanvas",3],["option",4]]]],[11,"new","","",213,[[["option",4],["surfaceprops",3]],[["option",4],["ownedcanvas",3]]]],[11,"from_bitmap","","",213,[[["bitmap",6],["option",4],["surfaceprops",3]],["ownedcanvas",3]]],[11,"image_info","","",213,[[],["imageinfo",6]]],[11,"props","","",213,[[],[["surfaceprops",3],["option",4]]]],[11,"flush","","",213,[[]]],[11,"base_layer_size","","",213,[[],["isize",3]]],[11,"new_surface","","",213,[[["surfaceprops",3],["option",4],["imageinfo",6]],[["option",4],["surface",6]]]],[11,"gpu_context","","",213,[[]]],[11,"recording_context","","",213,[[],[["option",4],["recordingcontext",6]]]],[11,"surface","","SafetyThis function is unsafe because it is not clear how â€¦",213,[[],[["option",4],["surface",6]]]],[11,"access_top_layer_pixels","","",213,[[],[["toplayerpixels",3],["option",4]]]],[11,"peek_pixels","","",213,[[],[["borrows",3],["option",4]]]],[11,"read_pixels","","",213,[[["imageinfo",6]]]],[11,"read_pixels_to_pixmap","","",213,[[["pixmap",6]]]],[11,"read_pixels_to_bitmap","","",213,[[["bitmap",6]]]],[11,"write_pixels","","",213,[[["imageinfo",6]]]],[11,"write_pixels_from_bitmap","","",213,[[["bitmap",6]]]],[11,"save","","",213,[[]]],[11,"save_layer","","",213,[[["savelayerrec",3]]]],[11,"save_layer_alpha","","",213,[[["u8cpu",6]]]],[11,"restore","","",213,[[]]],[11,"save_count","","",213,[[]]],[11,"restore_to_count","","",213,[[]]],[11,"translate","","",213,[[]]],[11,"scale","","",213,[[]]],[11,"rotate","","",213,[[["scalar",6],["option",4],["point",3]]]],[11,"skew","","",213,[[]]],[11,"concat","","",213,[[["matrix",3]]]],[11,"concat_44","","",213,[[["m44",3]]]],[11,"set_matrix","","",213,[[["m44",3]]]],[11,"reset_matrix","","",213,[[]]],[11,"clip_rect","","",213,[[]]],[11,"clip_rrect","","",213,[[]]],[11,"clip_path","","",213,[[["path",6]]]],[11,"clip_shader","","",213,[[]]],[11,"clip_region","","",213,[[["region",6]]]],[11,"local_clip_bounds","","",213,[[],[["option",4],["rect",3]]]],[11,"device_clip_bounds","","",213,[[],[["option",4],["irect",3]]]],[11,"draw_color","","",213,[[]]],[11,"clear","","",213,[[]]],[11,"discard","","",213,[[]]],[11,"draw_paint","","",213,[[["paint",6]]]],[11,"draw_points","","",213,[[["pointmode",4],["paint",6]]]],[11,"draw_point","","",213,[[["paint",6]]]],[11,"draw_line","","",213,[[["paint",6]]]],[11,"draw_rect","","",213,[[["paint",6]]]],[11,"draw_irect","","",213,[[["paint",6]]]],[11,"draw_region","","",213,[[["region",6],["paint",6]]]],[11,"draw_oval","","",213,[[["paint",6]]]],[11,"draw_rrect","","",213,[[["paint",6]]]],[11,"draw_drrect","","",213,[[["paint",6]]]],[11,"draw_circle","","",213,[[["scalar",6],["paint",6]]]],[11,"draw_arc","","",213,[[["scalar",6],["paint",6]]]],[11,"draw_round_rect","","",213,[[["scalar",6],["paint",6]]]],[11,"draw_path","","",213,[[["path",6],["paint",6]]]],[11,"draw_image","","",213,[[["option",4],["paint",6]]]],[11,"draw_image_rect","","",213,[[["paint",6],["option",4]]]],[11,"draw_image_with_sampling_options","","",213,[[["option",4],["paint",6]]]],[11,"draw_image_rect_with_sampling_options","","",213,[[["option",4],["rect",3],["srcrectconstraint",4],["paint",6]]]],[11,"draw_image_nine","","",213,[[["filtermode",4],["option",4],["paint",6]]]],[11,"draw_bitmap","","",213,[[["bitmap",6],["option",4],["paint",6]]]],[11,"draw_bitmap_rect","","",213,[[["bitmap",6],["option",4],["rect",3],["paint",6]]]],[11,"draw_image_lattice","","",213,[[["lattice",3],["filtermode",4],["option",4],["paint",6]]]],[11,"draw_str","","",213,[[["font",6],["paint",6]]]],[11,"draw_text_blob","","",213,[[["paint",6]]]],[11,"draw_picture","","",213,[[["option",4],["matrix",3],["option",4],["paint",6]]]],[11,"draw_vertices","","",213,[[["paint",6],["vertices",6]]]],[11,"draw_patch","","",213,[[["paint",6]]]],[11,"draw_drawable","","",213,[[["option",4],["matrix",3],["drawable",6]]]],[11,"draw_drawable_at","","",213,[[["drawable",6]]]],[11,"draw_annotation","","",213,[[["data",6]]]],[11,"is_clip_empty","","",213,[[]]],[11,"is_clip_rect","","",213,[[]]],[11,"local_to_device","","",213,[[],["m44",3]]],[11,"local_to_device_as_3x3","","",213,[[],["matrix",3]]],[11,"total_matrix","","",213,[[],["matrix",3]]],[11,"restore","","",215,[[]]],[11,"guard","","",216,[[["canvas",3]],["autorestoredcanvas",3]]],[11,"new","skia_safe","",217,[[]]],[11,"from_argb","","",217,[[],["color",3]]],[11,"from_rgb","","",217,[[],["color",3]]],[11,"a","","",217,[[]]],[11,"r","","",217,[[]]],[11,"g","","",217,[[]]],[11,"b","","",217,[[]]],[11,"with_a","","",217,[[]]],[18,"TRANSPARENT","","",217,null],[18,"BLACK","","",217,null],[18,"DARK_GRAY","","",217,null],[18,"GRAY","","",217,null],[18,"LIGHT_GRAY","","",217,null],[18,"WHITE","","",217,null],[18,"RED","","",217,null],[18,"GREEN","","",217,null],[18,"BLUE","","",217,null],[18,"YELLOW","","",217,null],[18,"CYAN","","",217,null],[18,"MAGENTA","","",217,null],[11,"to_rgb","","",217,[[],["rgb",3]]],[11,"to_hsv","","",217,[[],["hsv",3]]],[11,"to_hsv","","",183,[[],["hsv",3]]],[11,"to_color","","",184,[[],["color",3]]],[18,"RED","","",218,null],[18,"GREEN","","",218,null],[18,"BLUE","","",218,null],[18,"ALPHA","","",218,null],[18,"GRAY","","",218,null],[18,"GRAY_ALPHA","","",218,null],[18,"RG","","",218,null],[18,"RGB","","",218,null],[18,"RGBA","","",218,null],[11,"empty","","Returns an empty set of flags",218,[[],["colorchannelflag",3]]],[11,"all","","Returns the set containing all flags.",218,[[],["colorchannelflag",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",218,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that â€¦",218,[[],[["colorchannelflag",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any â€¦",218,[[],["colorchannelflag",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving allâ€¦",218,[[],["colorchannelflag",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",218,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",218,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦",218,[[["colorchannelflag",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained â€¦",218,[[["colorchannelflag",3]]]],[11,"insert","","Inserts the specified flags in-place.",218,[[["colorchannelflag",3]]]],[11,"remove","","Removes the specified flags in-place.",218,[[["colorchannelflag",3]]]],[11,"toggle","","Toggles the specified flags in-place.",218,[[["colorchannelflag",3]]]],[11,"set","","Inserts or removes the specified flags depending on the â€¦",218,[[["colorchannelflag",3]]]],[11,"new","","",185,[[],["color4f",3]]],[11,"as_array","","",185,[[]]],[11,"as_array_mut","","",185,[[]]],[11,"is_opaque","","",185,[[]]],[11,"fits_in_bytes","","",185,[[]]],[11,"to_color","","",185,[[],["color",3]]],[11,"to_opaque","","",185,[[]]],[18,"ALPHA_UNCHANGED","skia_safe::color_filter","",219,null],[11,"empty","","Returns an empty set of flags",219,[[],["flags",3]]],[11,"all","","Returns the set containing all flags.",219,[[],["flags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",219,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that â€¦",219,[[],[["option",4],["flags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any â€¦",219,[[],["flags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving allâ€¦",219,[[],["flags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",219,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",219,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦",219,[[["flags",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained â€¦",219,[[["flags",3]]]],[11,"insert","","Inserts the specified flags in-place.",219,[[["flags",3]]]],[11,"remove","","Removes the specified flags in-place.",219,[[["flags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",219,[[["flags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the â€¦",219,[[["flags",3]]]],[11,"to_a_color_mode","skia_safe","",274,[[],["option",4]]],[11,"to_a_color_matrix","","",274,[[],["option",4]]],[11,"flags","","",274,[[],["flags",3]]],[11,"is_alpha_unchanged","","",274,[[]]],[11,"filter_color","","",274,[[],["color",3]]],[11,"filter_color4f","","",274,[[["option",4],["colorspace",6]],["color4f",3]]],[11,"composed","","",274,[[],["option",4]]],[11,"new_srgb","","",274,[[],["colorspace",6]]],[11,"new_srgb_linear","","",274,[[],["colorspace",6]]],[11,"to_xyzd50_hash","","",274,[[],["xyzd50hash",3]]],[11,"with_linear_gamma","","",274,[[],["colorspace",6]]],[11,"with_srgb_gamma","","",274,[[],["colorspace",6]]],[11,"with_color_spin","","",274,[[],["colorspace",6]]],[11,"is_srgb","","",274,[[]]],[11,"serialize","","",274,[[],["data",6]]],[11,"deserialize","","",274,[[],["colorspace",6]]],[11,"new_srgb","","",301,[[],["colorspace",6]]],[11,"new_srgb_linear","","",301,[[],["colorspace",6]]],[11,"to_xyzd50_hash","","",301,[[],["xyzd50hash",3]]],[11,"with_linear_gamma","","",301,[[],["colorspace",6]]],[11,"with_srgb_gamma","","",301,[[],["colorspace",6]]],[11,"with_color_spin","","",301,[[],["colorspace",6]]],[11,"is_srgb","","",301,[[]]],[11,"serialize","","",301,[[],["data",6]]],[11,"deserialize","","",301,[[],["colorspace",6]]],[18,"GET_POSITION","skia_safe::contour_measure","",221,null],[18,"GET_TANGENT","","",221,null],[18,"GET_POS_AND_TAN","","",221,null],[11,"empty","","Returns an empty set of flags",221,[[],["matrixflags",3]]],[11,"all","","Returns the set containing all flags.",221,[[],["matrixflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",221,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that â€¦",221,[[],[["option",4],["matrixflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any â€¦",221,[[],["matrixflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving allâ€¦",221,[[],["matrixflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",221,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",221,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦",221,[[["matrixflags",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained â€¦",221,[[["matrixflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",221,[[["matrixflags",3]]]],[11,"remove","","Removes the specified flags in-place.",221,[[["matrixflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",221,[[["matrixflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the â€¦",221,[[["matrixflags",3]]]],[11,"length","skia_safe","",274,[[],["scalar",6]]],[11,"pos_tan","","",274,[[["scalar",6]],["option",4]]],[11,"get_matrix","","",274,[[["scalar",6]],[["matrix",3],["option",4]]]],[11,"segment","","",274,[[["scalar",6]],[["option",4],["path",6]]]],[11,"is_closed","","",274,[[]]],[11,"new","","",272,[[["path",6]]]],[11,"from_path","","",272,[[["path",6]]]],[11,"reset","","",272,[[["path",6]]]],[11,"new","","",222,[[]]],[11,"is_linear","","",222,[[]]],[11,"compute_y_from_x","","",222,[[]]],[11,"compute_from_t","","",222,[[],["point",3]]],[11,"size","","",274,[[]]],[11,"is_empty","","",274,[[]]],[11,"as_bytes","","",274,[[]]],[11,"copy_range","","",274,[[]]],[11,"new_copy","","",274,[[]]],[11,"new_bytes","","Constructs Data from a given byte slice without copying â€¦",274,[[]]],[11,"new_uninitialized","","",274,[[],["data",6]]],[11,"new_subset","","",274,[[["data",6]],["data",6]]],[11,"new_str","","Constructs Data from a copy of a &str.",274,[[],["data",6]]],[11,"new_cstr","","Constructs Data from a &CStr by copying its contents.",274,[[["cstr",3]],["data",6]]],[11,"new_empty","","",274,[[]]],[11,"is_empty","","",274,[[]]],[11,"count","","",274,[[]]],[11,"at_size","","",274,[[]]],[11,"at","","",274,[[]]],[11,"at_t","","",274,[[]]],[11,"at_str","","",274,[[],["cstr",3]]],[11,"new_empty","","",274,[[]]],[11,"from_slices","","",274,[[]]],[11,"from_slice","","",274,[[]]],[11,"iter","","",274,[[],["iter",3]]],[11,"new","","",272,[[["surfacecharacterization",6]]]],[11,"canvas","","",272,[[],["canvas",3]]],[11,"detach","","",272,[[],[["deferreddisplaylist",6],["option",4]]]],[11,"abort","skia_safe::document","",226,[[]]],[11,"pages","","The number of pages in this document.",226,[[]]],[11,"begin_page","","",226,[[["option",4],["rect",3]],[["document",3],["onpage",3]]]],[11,"close","","Close the document and return the encoded representation. â€¦",226,[[],["data",6]]],[11,"page","","The current page we are currently drawing on.",226,[[]]],[11,"canvas","","Borrows the canvas for the current page on the document.",226,[[],["canvas",3]]],[11,"end_page","","Ends the page. This function consumes the document and â€¦",226,[[],["document",3]]],[11,"can_compute_fast_bounds","skia_safe","",274,[[["paint",6]]]],[11,"compute_fast_bounds","","",274,[[["paint",6]],["rect",3]]],[11,"as_a_blur_shadow","","",274,[[],[["option",4],["blurshadowrec",3]]]],[11,"draw","","",273,[[["backenddrawableinfo",6]]]],[11,"draw","","",274,[[["option",4],["canvas",3],["matrix",3]]]],[11,"draw_at","","",274,[[["canvas",3]]]],[11,"snap_gpu_draw_handler","","",274,[[["matrix",3],["backendapi",4],["imageinfo",6]],[["option",4],["gpudrawhandler",6]]]],[11,"generation_id","","",274,[[]]],[11,"bounds","","",274,[[],["rect",3]]],[11,"notify_drawing_changed","","",274,[[]]],[11,"new","","",272,[[]]],[11,"from_typeface","","",272,[[]]],[11,"from_typeface_with_params","","",272,[[["scalar",6]]]],[11,"is_force_auto_hinting","","",272,[[]]],[11,"is_embedded_bitmaps","","",272,[[]]],[11,"is_subpixel","","",272,[[]]],[11,"is_linear_metrics","","",272,[[]]],[11,"is_embolden","","",272,[[]]],[11,"is_baseline_snap","","",272,[[]]],[11,"set_force_auto_hinting","","",272,[[]]],[11,"set_embedded_bitmaps","","",272,[[]]],[11,"set_subpixel","","",272,[[]]],[11,"set_linear_metrics","","",272,[[]]],[11,"set_embolden","","",272,[[]]],[11,"set_baseline_snap","","",272,[[]]],[11,"edging","","",272,[[],["edging",4]]],[11,"set_edging","","",272,[[["edging",4]]]],[11,"set_hinting","","",272,[[["fonthinting",4]]]],[11,"hinting","","",272,[[],["fonthinting",4]]],[11,"with_size","","",272,[[["scalar",6]],["option",4]]],[11,"typeface","","",272,[[],[["option",4],["typeface",6]]]],[11,"typeface_or_default","","",272,[[],["typeface",6]]],[11,"size","","",272,[[],["scalar",6]]],[11,"scale_x","","",272,[[],["scalar",6]]],[11,"skew_x","","",272,[[],["scalar",6]]],[11,"set_typeface","","",272,[[]]],[11,"set_size","","",272,[[["scalar",6]]]],[11,"set_scale_x","","",272,[[["scalar",6]]]],[11,"set_skew_x","","",272,[[["scalar",6]]]],[11,"str_to_glyphs","","",272,[[]]],[11,"text_to_glyphs","","",272,[[["textencoding",4]]]],[11,"count_str","","",272,[[]]],[11,"count_text","","",272,[[["textencoding",4]]]],[11,"str_to_glyphs_vec","","",272,[[],[["glyphid",6],["vec",3]]]],[11,"text_to_glyphs_vec","","",272,[[["textencoding",4]],[["glyphid",6],["vec",3]]]],[11,"measure_str","","",272,[[["option",4],["paint",6]]]],[11,"measure_text","","",272,[[["textencoding",4],["option",4],["paint",6]]]],[11,"unichar_to_glyph","","",272,[[["unichar",6]],["glyphid",6]]],[11,"unichar_to_glyphs","","",272,[[]]],[11,"get_widths","","",272,[[]]],[11,"get_widths_bounds","","",272,[[["option",4],["option",4],["option",4],["paint",6]]]],[11,"get_bounds","","",272,[[["option",4],["paint",6]]]],[11,"get_pos","","",272,[[["option",4],["point",3]]]],[11,"get_x_pos","","",272,[[["scalar",6],["option",4]]]],[11,"get_path","","",272,[[["glyphid",6]],[["option",4],["path",6]]]],[11,"metrics","","",272,[[]]],[11,"spacing","","",272,[[],["scalar",6]]],[11,"new","skia_safe::font_arguments","",227,[[]]],[11,"set_collection_index","","",227,[[]]],[11,"set_variation_design_position","","",227,[[["variationposition",3]],["fontarguments",3]]],[11,"collection_index","","",227,[[]]],[11,"variation_design_position","","",227,[[],["variationposition",3]]],[18,"UNDERLINE_THICKNESS_IS_VALID","skia_safe::font_metrics","",228,null],[18,"UNDERLINE_POSITION_IS_VALID","","",228,null],[18,"STRIKEOUT_THICKNESS_IS_VALID","","",228,null],[18,"STRIKEOUT_POSITION_IS_VALID","","",228,null],[18,"BOUNDS_INVALID","","",228,null],[11,"empty","","Returns an empty set of flags",228,[[],["flags",3]]],[11,"all","","Returns the set containing all flags.",228,[[],["flags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",228,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that â€¦",228,[[],[["flags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any â€¦",228,[[],["flags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving allâ€¦",228,[[],["flags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",228,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",228,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦",228,[[["flags",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained â€¦",228,[[["flags",3]]]],[11,"insert","","Inserts the specified flags in-place.",228,[[["flags",3]]]],[11,"remove","","Removes the specified flags in-place.",228,[[["flags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",228,[[["flags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the â€¦",228,[[["flags",3]]]],[11,"underline_thickness","","",95,[[],[["scalar",6],["option",4]]]],[11,"underline_position","","",95,[[],[["scalar",6],["option",4]]]],[11,"strikeout_thickness","","",95,[[],[["scalar",6],["option",4]]]],[11,"strikeout_position","","",95,[[],[["scalar",6],["option",4]]]],[11,"has_bounds","","",95,[[]]],[11,"count","skia_safe","",274,[[]]],[11,"style","","",274,[[]]],[11,"new_typeface","","",274,[[],[["option",4],["typeface",6]]]],[11,"match_style","","",274,[[["fontstyle",3]],[["option",4],["typeface",6]]]],[11,"new_empty","","",274,[[]]],[11,"new","","",274,[[]]],[11,"count_families","","",274,[[]]],[11,"family_name","","",274,[[],["string",3]]],[11,"new_styleset","","",274,[[],["fontstyleset",6]]],[11,"match_family","","",274,[[],["fontstyleset",6]]],[11,"match_family_style","","",274,[[["fontstyle",3]],[["option",4],["typeface",6]]]],[11,"match_family_style_character","","",274,[[["fontstyle",3],["unichar",6]],[["option",4],["typeface",6]]]],[11,"match_face_style","","",274,[[["fontstyle",3]]]],[11,"new_from_data","","",274,[[],[["option",4],["typeface",6]]]],[11,"new","skia_safe::font_parameters::variation","",96,[[["fourbytetag",3]]]],[11,"is_hidden","","",96,[[]]],[11,"set_hidden","","",96,[[]]],[18,"INVISIBLE","skia_safe::font_style","",229,null],[18,"THIN","","",229,null],[18,"EXTRA_LIGHT","","",229,null],[18,"LIGHT","","",229,null],[18,"NORMAL","","",229,null],[18,"MEDIUM","","",229,null],[18,"SEMI_BOLD","","",229,null],[18,"BOLD","","",229,null],[18,"EXTRA_BOLD","","",229,null],[18,"BLACK","","",229,null],[18,"EXTRA_BLACK","","",229,null],[18,"ULTRA_CONDENSED","","",230,null],[18,"EXTRA_CONDENSED","","",230,null],[18,"CONDENSED","","",230,null],[18,"SEMI_CONDENSED","","",230,null],[18,"NORMAL","","",230,null],[18,"SEMI_EXPANDED","","",230,null],[18,"EXPANDED","","",230,null],[18,"EXTRA_EXPANDED","","",230,null],[18,"ULTRA_EXPANDED","","",230,null],[11,"new","","",231,[[["weight",3],["width",3],["slant",4]]]],[11,"weight","","",231,[[],["weight",3]]],[11,"width","","",231,[[],["width",3]]],[11,"slant","","",231,[[],["slant",4]]],[11,"normal","","",231,[[],["fontstyle",3]]],[11,"bold","","",231,[[],["fontstyle",3]]],[11,"italic","","",231,[[],["fontstyle",3]]],[11,"bold_italic","","",231,[[],["fontstyle",3]]],[18,"Last","skia_safe::image","",100,null],[18,"COUNT","","",100,null],[18,"ETC1","","",100,null],[11,"from_raster_data","skia_safe","",274,[[["imageinfo",6]],[["option",4],["image",6]]]],[11,"from_bitmap","","",274,[[["bitmap",6]],[["option",4],["image",6]]]],[11,"from_generator","","",274,[[["imagegenerator",6]],[["option",4],["image",6]]]],[11,"from_encoded","","",274,[[],[["option",4],["image",6]]]],[11,"decode_to_raster","","",274,[[]]],[11,"new_texture_from_compressed","","",274,[[["compressiontype",4],["directcontext",6],["data",6]],[["option",4],["image",6]]]],[11,"from_compressed","","",274,[[["recordingcontext",6],["compressiontype",4],["data",6]]]],[11,"new_raster_from_compressed","","",274,[[["compressiontype",4]],[["option",4],["image",6]]]],[11,"from_texture","","",274,[[["colortype",4],["backendtexture",6],["recordingcontext",6],["alphatype",4],["surfaceorigin",4]],[["option",4],["image",6]]]],[11,"from_pixmap_cross_context","","",274,[[["pixmap",6],["directcontext",6]],[["option",4],["image",6]]]],[11,"new_cross_context_from_pixmap","","",274,[[["pixmap",6],["directcontext",6]],[["option",4],["image",6]]]],[11,"from_adopted_texture","","",274,[[["colortype",4],["backendtexture",6],["recordingcontext",6],["alphatype",4],["surfaceorigin",4]],[["option",4],["image",6]]]],[11,"from_yuva_textures","","",274,[[["recordingcontext",6],["yuvabackendtextures",6]],[["option",4],["image",6]]]],[11,"from_yuva_pixmaps","","",274,[[["recordingcontext",6],["yuvapixmaps",6]],[["option",4],["image",6]]]],[11,"from_nv12_textures_copy","","",274,[[["surfaceorigin",4],["directcontext",6],["yuvcolorspace",4]]]],[11,"from_picture","","",274,[[["bitdepth",4],["option",4],["matrix",3],["option",4],["paint",6]],[["option",4],["image",6]]]],[11,"image_info","","",274,[[],["imageinfo",6]]],[11,"width","","",274,[[]]],[11,"height","","",274,[[]]],[11,"dimensions","","",274,[[],["isize",3]]],[11,"bounds","","",274,[[],["irect",3]]],[11,"unique_id","","",274,[[]]],[11,"alpha_type","","",274,[[],["alphatype",4]]],[11,"color_type","","",274,[[],["colortype",4]]],[11,"color_space","","",274,[[],["colorspace",6]]],[11,"is_alpha_only","","",274,[[]]],[11,"is_opaque","","",274,[[]]],[11,"to_shader","","",274,[[],[["option",4],["shader",6]]]],[11,"peek_pixels","","",274,[[],[["borrows",3],["option",4]]]],[11,"is_texture_backed","","",274,[[]]],[11,"is_valid","","",274,[[["recordingcontext",6]]]],[11,"flush_with_info","","",274,[[["flushinfo",3],["directcontext",6]],["semaphoressubmitted",4]]],[11,"flush","","",274,[[["directcontext",6]]]],[11,"flush_and_submit","","",274,[[["directcontext",6]]]],[11,"backend_texture","","",274,[[],["option",4]]],[11,"read_pixels_with_context","","",274,[[["cachinghint",4],["imageinfo",6]]]],[11,"read_pixels_to_pixmap_with_context","","",274,[[["pixmap",6],["cachinghint",4]]]],[11,"read_pixels","","",274,[[["cachinghint",4],["imageinfo",6]]]],[11,"read_pixels_to_pixmap","","",274,[[["pixmap",6],["cachinghint",4]]]],[11,"scale_pixels","","",274,[[["pixmap",6]]]],[11,"encode_to_data","","",274,[[["encodedimageformat",4]],[["option",4],["data",6]]]],[11,"encode_to_data_with_quality","","",274,[[["encodedimageformat",4]],[["option",4],["data",6]]]],[11,"encoded_data","","",274,[[],[["option",4],["data",6]]]],[11,"new_subset","","",274,[[],[["option",4],["image",6]]]],[11,"new_subset_with_context","","",274,[[],[["option",4],["image",6]]]],[11,"has_mipmaps","","",274,[[]]],[11,"with_default_mipmaps","","",274,[[],[["option",4],["image",6]]]],[11,"new_texture_image","","",274,[[["mipmapped",4],["directcontext",6]],[["option",4],["image",6]]]],[11,"new_texture_image_budgeted","","",274,[[["mipmapped",4],["budgeted",3],["directcontext",6]],[["option",4],["image",6]]]],[11,"new_non_texture_image","","",274,[[],[["option",4],["image",6]]]],[11,"new_raster_image","","",274,[[],[["option",4],["image",6]]]],[11,"new_raster_image_with_caching_hint","","",274,[[["cachinghint",4]],[["option",4],["image",6]]]],[11,"new_with_filter","","",274,[[["recordingcontext",6],["option",4],["imagefilter",6]],["option",4]]],[11,"is_lazy_generated","","",274,[[]]],[11,"new_color_space","","",274,[[],[["option",4],["image",6]]]],[11,"new_color_space_with_context","","",274,[[],[["option",4],["image",6]]]],[11,"reinterpret_color_space","","",274,[[],[["option",4],["image",6]]]],[11,"encode","","",272,[[["encodedimageformat",4]],[["option",4],["data",6]]]],[11,"encode","","",272,[[["encodedimageformat",4]],[["option",4],["data",6]]]],[18,"HAS_LEFT","skia_safe::image_filter::crop_rect","",232,null],[18,"HAS_TOP","","",232,null],[18,"HAS_WIDTH","","",232,null],[18,"HAS_HEIGHT","","",232,null],[18,"HAS_ALL","","",232,null],[11,"empty","","Returns an empty set of flags",232,[[],["cropedge",3]]],[11,"all","","Returns the set containing all flags.",232,[[],["cropedge",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",232,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that â€¦",232,[[],[["option",4],["cropedge",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any â€¦",232,[[],["cropedge",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving allâ€¦",232,[[],["cropedge",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",232,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",232,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦",232,[[["cropedge",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained â€¦",232,[[["cropedge",3]]]],[11,"insert","","Inserts the specified flags in-place.",232,[[["cropedge",3]]]],[11,"remove","","Removes the specified flags in-place.",232,[[["cropedge",3]]]],[11,"toggle","","Toggles the specified flags in-place.",232,[[["cropedge",3]]]],[11,"set","","Inserts or removes the specified flags depending on the â€¦",232,[[["cropedge",3]]]],[11,"new","skia_safe::image_filter","",233,[[]]],[11,"flags","","",233,[[],["cropedge",3]]],[11,"rect","","",233,[[],["rect",3]]],[11,"apply_to","","",233,[[["matrix",3]],["irect",3]]],[11,"filter_bounds","skia_safe","",274,[[["matrix",3],["mapdirection",4]],["irect",3]]],[11,"color_filter_node","","",274,[[],[["option",4],["colorfilter",6]]]],[11,"to_a_color_filter","","",274,[[],[["option",4],["colorfilter",6]]]],[11,"count_inputs","","",274,[[]]],[11,"input","","",274,[[],[["option",4],["imagefilter",6]]]],[11,"get_input","","",274,[[],[["option",4],["imagefilter",6]]]],[11,"compute_fast_bounds","","",274,[[],["rect",3]]],[11,"can_compute_fast_bounds","","",274,[[]]],[11,"with_local_matrix","","",274,[[["matrix",3]],[["option",4],["imagefilter",6]]]],[11,"unique_id","","",273,[[]]],[11,"encoded_data","","",273,[[],[["option",4],["data",6]]]],[11,"info","","",273,[[],["imageinfo",6]]],[11,"is_valid","","",273,[[["recordingcontext",6],["option",4]]]],[11,"get_pixels","","",273,[[["imageinfo",6]]]],[11,"textures_are_cacheable","","",273,[[]]],[11,"from_encoded","","",273,[[],["option",4]]],[11,"from_picture","","",273,[[["bitdepth",4],["isize",3],["option",4],["matrix",3],["option",4],["paint",6]],["option",4]]],[11,"n32","","",191,[[]]],[11,"bytes_per_pixel","","",191,[[]]],[11,"is_always_opaque","","",191,[[]]],[11,"validate_alpha_type","","",191,[[["alphatype",4]],[["option",4],["alphatype",4]]]],[11,"new","","",272,[[["colortype",4],["alphatype",4]]]],[11,"color_space","","",272,[[],[["colorspace",6],["option",4]]]],[11,"color_type","","",272,[[],["colortype",4]]],[11,"alpha_type","","",272,[[],["alphatype",4]]],[11,"is_opaque","","",272,[[]]],[11,"is_gamma_close_to_srgb","","",272,[[]]],[11,"with_alpha_type","","",272,[[["alphatype",4]]]],[11,"with_color_type","","",272,[[["colortype",4]]]],[11,"with_color_space","","",272,[[]]],[11,"bytes_per_pixel","","",272,[[]]],[11,"shift_per_pixel","","",272,[[]]],[11,"new","","",272,[[["colortype",4],["alphatype",4]]]],[11,"from_color_info","","",272,[[["colorinfo",6]]]],[11,"new_n32","","",272,[[["alphatype",4]],["imageinfo",6]]],[11,"new_s32","","",272,[[["alphatype",4]],["imageinfo",6]]],[11,"new_n32_premul","","",272,[[],["imageinfo",6]]],[11,"new_a8","","",272,[[],["imageinfo",6]]],[11,"new_unknown","","",272,[[["option",4],["isize",3]],["imageinfo",6]]],[11,"width","","",272,[[]]],[11,"height","","",272,[[]]],[11,"color_type","","",272,[[],["colortype",4]]],[11,"alpha_type","","",272,[[],["alphatype",4]]],[11,"color_space","","",272,[[],[["colorspace",6],["option",4]]]],[11,"is_empty","","",272,[[]]],[11,"color_info","","",272,[[],["colorinfo",6]]],[11,"is_opaque","","",272,[[]]],[11,"dimensions","","",272,[[],["isize",3]]],[11,"bounds","","",272,[[],["irect",3]]],[11,"is_gamma_close_to_srgb","","",272,[[]]],[11,"with_dimensions","","",272,[[]]],[11,"with_alpha_type","","",272,[[["alphatype",4]]]],[11,"with_color_type","","",272,[[["colortype",4]]]],[11,"with_color_space","","",272,[[]]],[11,"bytes_per_pixel","","",272,[[]]],[11,"shift_per_pixel","","",272,[[]]],[11,"min_row_bytes","","",272,[[]]],[11,"compute_offset","","",272,[[]]],[11,"compute_byte_size","","",272,[[]]],[11,"compute_min_byte_size","","",272,[[]]],[11,"valid_row_bytes","","",272,[[]]],[11,"reset","","",272,[[]]],[11,"new","","",192,[[]]],[11,"dot","","",192,[[],["scalar",6]]],[11,"cross","","",192,[[],["scalar",6]]],[11,"normalize","","",192,[[]]],[11,"length_squared","","",192,[[],["scalar",6]]],[11,"length","","",192,[[],["scalar",6]]],[11,"as_array","","",192,[[]]],[11,"as_mut_array","","",192,[[]]],[11,"new","","",193,[[]]],[11,"dot","","",193,[[],["scalar",6]]],[11,"cross","","",193,[[]]],[11,"normalize","","",193,[[]]],[11,"length_squared","","",193,[[],["scalar",6]]],[11,"length","","",193,[[],["scalar",6]]],[11,"as_array","","",193,[[]]],[11,"as_mut_array","","",193,[[]]],[11,"new","","",194,[[]]],[11,"as_array","","",194,[[]]],[11,"as_mut_array","","",194,[[]]],[11,"new_identity","","",234,[[]]],[11,"concat","","",234,[[]]],[11,"nan","","",234,[[]]],[11,"new","","",234,[[["scalar",6]]]],[11,"rows","","",234,[[["v4",3]]]],[11,"cols","","",234,[[["v4",3]]]],[11,"row_major","","",234,[[]]],[11,"col_major","","",234,[[]]],[11,"translate","","",234,[[["scalar",6]]]],[11,"scale","","",234,[[["scalar",6]]]],[11,"rotate","","",234,[[["scalar",6],["v3",3]]]],[11,"get_col_major","","",234,[[]]],[11,"get_row_major","","",234,[[]]],[11,"set_col_major","","",234,[[]]],[11,"set_row_major","","",234,[[]]],[11,"set_44","","",234,[[["scalar",6]]]],[11,"rc","","",234,[[],["scalar",6]]],[11,"set_rc","","",234,[[["scalar",6]]]],[11,"row","","",234,[[],["v4",3]]],[11,"col","","",234,[[],["v4",3]]],[11,"set_row","","",234,[[["v4",3]]]],[11,"set_col","","",234,[[["v4",3]]]],[11,"set_identity","","",234,[[]]],[11,"set_translate","","",234,[[["scalar",6]]]],[11,"set_scale","","",234,[[["scalar",6]]]],[11,"set_rotate_unit_sin_cos","","",234,[[["scalar",6],["v3",3]]]],[11,"set_rotate_unit","","",234,[[["scalar",6],["v3",3]]]],[11,"set_rotate","","",234,[[["scalar",6],["v3",3]]]],[11,"set_concat_16","","",234,[[["m44",3]]]],[11,"set_concat","","",234,[[["m44",3]]]],[11,"pre_concat_16","","",234,[[]]],[11,"pre_concat","","",234,[[["m44",3]]]],[11,"post_concat","","",234,[[["m44",3]]]],[11,"normalize_perspective","","",234,[[]]],[11,"is_finite","","",234,[[]]],[11,"invert","","",234,[[],[["m44",3],["option",4]]]],[11,"transpose","","",234,[[],["m44",3]]],[11,"dump","","",234,[[]]],[11,"map","","",234,[[],["v4",3]]],[11,"to_m33","","",234,[[],["matrix",3]]],[11,"pre_translate","","",234,[[["scalar",6]]]],[11,"post_translate","","",234,[[["scalar",6]]]],[11,"pre_scale","","",234,[[["scalar",6]]]],[11,"look_at","","",234,[[["v3",3]]]],[11,"perspective","","",234,[[]]],[11,"to_matrix44","","",234,[[],["matrix44",3]]],[11,"blur","","",274,[[["blurstyle",4],["scalar",6]],["option",4]]],[11,"compose","","",274,[[]]],[11,"combine","","",274,[[["coveragemode",4]]]],[11,"with_matrix","","",274,[[["matrix",3]]]],[18,"IDENTITY","skia_safe::matrix","",235,null],[18,"TRANSLATE","","",235,null],[18,"SCALE","","",235,null],[18,"AFFINE","","",235,null],[18,"PERSPECTIVE","","",235,null],[11,"empty","","Returns an empty set of flags",235,[[],["typemask",3]]],[11,"all","","Returns the set containing all flags.",235,[[],["typemask",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",235,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that â€¦",235,[[],[["option",4],["typemask",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any â€¦",235,[[],["typemask",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving allâ€¦",235,[[],["typemask",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",235,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",235,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦",235,[[["typemask",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained â€¦",235,[[["typemask",3]]]],[11,"insert","","Inserts the specified flags in-place.",235,[[["typemask",3]]]],[11,"remove","","Removes the specified flags in-place.",235,[[["typemask",3]]]],[11,"toggle","","Toggles the specified flags in-place.",235,[[["typemask",3]]]],[11,"set","","Inserts or removes the specified flags depending on the â€¦",235,[[["typemask",3]]]],[11,"new_scale","","",236,[[],["matrix",3]]],[11,"scale","","",236,[[],["matrix",3]]],[11,"new_trans","","",236,[[],["matrix",3]]],[11,"translate","","",236,[[],["matrix",3]]],[11,"rotate_deg","","",236,[[["scalar",6]],["matrix",3]]],[11,"rotate_deg_pivot","","",236,[[["scalar",6]],["matrix",3]]],[11,"rotate_rad","","",236,[[["scalar",6]],["matrix",3]]],[11,"new_all","","",236,[[["scalar",6]],["matrix",3]]],[11,"get_type","","",236,[[],["typemask",3]]],[11,"is_identity","","",236,[[]]],[11,"is_scale_translate","","",236,[[]]],[11,"is_translate","","",236,[[]]],[11,"rect_stays_rect","","",236,[[]]],[11,"preserves_axis_alignment","","",236,[[]]],[11,"has_perspective","","",236,[[]]],[11,"is_similarity","","",236,[[]]],[11,"preserves_right_angles","","",236,[[]]],[11,"rc","","",236,[[],["scalar",6]]],[11,"scale_x","","",236,[[],["scalar",6]]],[11,"scale_y","","",236,[[],["scalar",6]]],[11,"skew_y","","",236,[[],["scalar",6]]],[11,"skew_x","","",236,[[],["scalar",6]]],[11,"translate_x","","",236,[[],["scalar",6]]],[11,"translate_y","","",236,[[],["scalar",6]]],[11,"persp_x","","",236,[[],["scalar",6]]],[11,"persp_y","","",236,[[],["scalar",6]]],[11,"set_scale_x","","",236,[[["scalar",6]]]],[11,"set_scale_y","","",236,[[["scalar",6]]]],[11,"set_skew_y","","",236,[[["scalar",6]]]],[11,"set_skew_x","","",236,[[["scalar",6]]]],[11,"set_translate_x","","",236,[[["scalar",6]]]],[11,"set_translate_y","","",236,[[["scalar",6]]]],[11,"set_persp_x","","",236,[[["scalar",6]]]],[11,"set_persp_y","","",236,[[["scalar",6]]]],[11,"set_all","","",236,[[["scalar",6]]]],[11,"get_9","","",236,[[]]],[11,"set_9","","",236,[[]]],[11,"reset","","",236,[[]]],[11,"set_identity","","",236,[[]]],[11,"set_translate","","",236,[[]]],[11,"set_scale","","",236,[[]]],[11,"set_rotate","","",236,[[["scalar",6]]]],[11,"set_sin_cos","","",236,[[]]],[11,"set_rsxform","","",236,[[["rsxform",3]]]],[11,"set_skew","","",236,[[]]],[11,"set_concat","","",236,[[["matrix",3]]]],[11,"pre_translate","","",236,[[]]],[11,"pre_scale","","",236,[[]]],[11,"pre_rotate","","",236,[[["scalar",6]]]],[11,"pre_skew","","",236,[[]]],[11,"pre_concat","","",236,[[["matrix",3]]]],[11,"post_translate","","",236,[[]]],[11,"post_scale","","",236,[[]]],[11,"post_idiv","","",236,[[]]],[11,"post_rotate","","",236,[[["scalar",6]]]],[11,"post_skew","","",236,[[]]],[11,"post_concat","","",236,[[["matrix",3]]]],[11,"set_rect_to_rect","","",236,[[["scaletofit",4]]]],[11,"from_rect_to_rect","","",236,[[["scaletofit",4]],[["matrix",3],["option",4]]]],[11,"set_poly_to_poly","","",236,[[]]],[11,"from_poly_to_poly","","",236,[[],[["matrix",3],["option",4]]]],[11,"invert","","",236,[[],[["matrix",3],["option",4]]]],[11,"set_affine_identity","","",236,[[]]],[11,"to_affine","","",236,[[],["option",4]]],[11,"set_affine","","",236,[[]]],[11,"from_affine","","",236,[[],["matrix",3]]],[11,"normalize_perspective","","",236,[[]]],[11,"map_points","","",236,[[]]],[11,"map_points_inplace","","",236,[[]]],[11,"map_homogeneous_points","","",236,[[]]],[11,"map_homogeneous_points_2d","","",236,[[]]],[11,"map_point","","",236,[[],["point",3]]],[11,"map_xy","","",236,[[["scalar",6]],["point",3]]],[11,"map_origin","","",236,[[],["point",3]]],[11,"map_vectors","","",236,[[]]],[11,"map_vectors_inplace","","",236,[[]]],[11,"map_vector","","",236,[[],["vector",6]]],[11,"map_rect","","",236,[[]]],[11,"map_rect_with_perspective_clip","","",236,[[["applyperspectiveclip",4]]]],[11,"map_rect_to_quad","","",236,[[]]],[11,"map_rect_scale_translate","","",236,[[],[["option",4],["rect",3]]]],[11,"map_radius","","",236,[[["scalar",6]],[["scalar",6],["option",4]]]],[11,"is_fixed_step_in_x","","",236,[[]]],[11,"fixed_step_in_x","","",236,[[["scalar",6]]]],[11,"cheap_equal_to","","",236,[[["matrix",3]]]],[11,"dump","","",236,[[]]],[11,"min_scale","","",236,[[],["scalar",6]]],[11,"max_scale","","",236,[[],["scalar",6]]],[11,"min_max_scales","","",236,[[]]],[11,"decompose_scale","","",236,[[["matrix",3],["option",4]],[["option",4],["size",3]]]],[11,"i","","",236,[[],["matrix",3]]],[11,"invalid_matrix","","",236,[[],["matrix",3]]],[11,"concat","","",236,[[["matrix",3]],["matrix",3]]],[11,"dirty_matrix_type_cache","","",236,[[]]],[11,"set_scale_translate","","",236,[[]]],[11,"is_finite","","",236,[[]]],[11,"new_identity","","",236,[[]]],[11,"new","skia_safe::matrix44","",237,[[["scalar",6]]]],[11,"equals","","",237,[[["scalar",6]]]],[11,"set","","",237,[[["scalar",6]]]],[18,"IDENTITY","","",238,null],[18,"TRANSLATE","","",238,null],[18,"SCALE","","",238,null],[18,"AFFINE","","",238,null],[18,"PERSPECTIVE","","",238,null],[11,"empty","","Returns an empty set of flags",238,[[],["typemask",3]]],[11,"all","","Returns the set containing all flags.",238,[[],["typemask",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",238,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that â€¦",238,[[],[["typemask",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any â€¦",238,[[],["typemask",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving allâ€¦",238,[[],["typemask",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",238,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",238,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦",238,[[["typemask",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained â€¦",238,[[["typemask",3]]]],[11,"insert","","Inserts the specified flags in-place.",238,[[["typemask",3]]]],[11,"remove","","Removes the specified flags in-place.",238,[[["typemask",3]]]],[11,"toggle","","Toggles the specified flags in-place.",238,[[["typemask",3]]]],[11,"set","","Inserts or removes the specified flags depending on the â€¦",238,[[["typemask",3]]]],[18,"ROWS","","",239,null],[18,"COLUMNS","","",239,null],[11,"new_identity","","",239,[[]]],[11,"new_nan","","",239,[[]]],[11,"get_type","","",239,[[],["typemask",3]]],[11,"is_identity","","",239,[[]]],[11,"is_translate","","",239,[[]]],[11,"is_scale_translate","","",239,[[]]],[11,"is_scale","","",239,[[]]],[11,"has_perspective","","",239,[[]]],[11,"set_identity","","",239,[[]]],[11,"reset","","",239,[[]]],[11,"get","","",239,[[],["scalar",6]]],[11,"set","","",239,[[["scalar",6]]]],[11,"as_col_major","","",239,[[]]],[11,"as_row_major","","",239,[[]]],[11,"set_col_major","","",239,[[]]],[11,"set_row_major","","",239,[[]]],[11,"set_3x3","","",239,[[["scalar",6]]]],[11,"set_3x3_row_major","","",239,[[]]],[11,"set_4x4","","",239,[[["scalar",6]]]],[11,"set_translate","","",239,[[]]],[11,"pre_translate","","",239,[[]]],[11,"post_translate","","",239,[[]]],[11,"set_rotate_degrees_about","","",239,[[["scalar",6]]]],[11,"set_rotate_about","","",239,[[["scalar",6]]]],[11,"set_rotate_about_unit","","",239,[[["scalar",6]]]],[11,"set_concat","","",239,[[]]],[11,"pre_concat","","",239,[[]]],[11,"post_concat","","",239,[[]]],[11,"invert","","",239,[[],[["option",4],["matrix44",3]]]],[11,"transpose","","",239,[[]]],[11,"map_scalars","","",239,[[]]],[11,"preserves_2d_axis_alignment","","",239,[[]]],[11,"dump","","",239,[[]]],[11,"determinant","","",239,[[]]],[11,"new","skia_safe","",272,[[],["paint",6]]],[11,"reset","","",272,[[]]],[11,"is_anti_alias","","",272,[[]]],[11,"set_anti_alias","","",272,[[]]],[11,"is_dither","","",272,[[]]],[11,"set_dither","","",272,[[]]],[11,"filter_quality","","",272,[[],["filterquality",4]]],[11,"set_filter_quality","","",272,[[["filterquality",4]]]],[11,"style","","",272,[[],["style",4]]],[11,"set_style","","",272,[[["style",4]]]],[11,"set_stroke","","",272,[[]]],[11,"color","","",272,[[],["color",3]]],[11,"color4f","","",272,[[],["color4f",3]]],[11,"set_color","","",272,[[]]],[11,"set_color4f","","",272,[[]]],[11,"alpha_f","","",272,[[]]],[11,"alpha","","",272,[[]]],[11,"set_alpha_f","","",272,[[]]],[11,"set_alpha","","",272,[[]]],[11,"set_argb","","",272,[[]]],[11,"stroke_width","","",272,[[],["scalar",6]]],[11,"set_stroke_width","","",272,[[["scalar",6]]]],[11,"stroke_miter","","",272,[[],["scalar",6]]],[11,"set_stroke_miter","","",272,[[["scalar",6]]]],[11,"stroke_cap","","",272,[[],["cap",4]]],[11,"set_stroke_cap","","",272,[[["cap",4]]]],[11,"stroke_join","","",272,[[],["join",4]]],[11,"set_stroke_join","","",272,[[["join",4]]]],[11,"get_fill_path","","",272,[[["path",6],["option",4],["rect",3]],[["option",4],["path",6]]]],[11,"shader","","",272,[[],[["option",4],["shader",6]]]],[11,"set_shader","","",272,[[]]],[11,"color_filter","","",272,[[],[["option",4],["colorfilter",6]]]],[11,"set_color_filter","","",272,[[]]],[11,"blend_mode","","",272,[[],["blendmode",4]]],[11,"is_src_over","","",272,[[]]],[11,"set_blend_mode","","",272,[[["blendmode",4]]]],[11,"path_effect","","",272,[[],[["option",4],["patheffect",6]]]],[11,"set_path_effect","","",272,[[]]],[11,"mask_filter","","",272,[[],[["option",4],["maskfilter",6]]]],[11,"set_mask_filter","","",272,[[]]],[11,"image_filter","","",272,[[],[["option",4],["imagefilter",6]]]],[11,"set_image_filter","","",272,[[]]],[11,"nothing_to_draw","","",272,[[]]],[18,"MAX_POINTS","skia_safe::path","The maximum number of points an iterator will return for â€¦",111,null],[11,"points","","The number of points an iterator will return for the verb.",111,[[]]],[11,"new","","",240,[[["path",6]],["iter",3]]],[11,"set_path","","",240,[[["path",6]],["iter",3]]],[11,"conic_weight","","",240,[[],[["scalar",6],["option",4]]]],[11,"is_close_line","","",240,[[]]],[11,"is_closed_contour","","",240,[[]]],[11,"new","","",241,[[["path",6]],["rawiter",3]]],[11,"set_path","","",241,[[["path",6]],["rawiter",3]]],[11,"peek","","",241,[[],["verb",4]]],[11,"conic_weight","","",241,[[],["scalar",6]]],[11,"new_from","skia_safe","",272,[[["filltype",4]]]],[11,"rect","","",272,[[]]],[11,"oval","","",272,[[]]],[11,"oval_with_start_index","","",272,[[["pathdirection",4]]]],[11,"circle","","",272,[[["scalar",6]]]],[11,"rrect","","",272,[[]]],[11,"rrect_with_start_index","","",272,[[["pathdirection",4]]]],[11,"polygon","","",272,[[]]],[11,"line","","",272,[[]]],[11,"new","","",272,[[]]],[11,"is_interpolatable","","",272,[[["path",6]]]],[11,"interpolate","","",272,[[["path",6],["scalar",6]],[["option",4],["path",6]]]],[11,"fill_type","","",272,[[],["pathfilltype",4]]],[11,"set_fill_type","","",272,[[["pathfilltype",4]]]],[11,"is_inverse_fill_type","","",272,[[]]],[11,"toggle_inverse_fill_type","","",272,[[]]],[11,"convexity_type","","",272,[[]]],[11,"convexity_type_or_unknown","","",272,[[]]],[11,"is_convex","","",272,[[]]],[11,"is_oval","","",272,[[],[["option",4],["rect",3]]]],[11,"is_rrect","","",272,[[],[["rrect",3],["option",4]]]],[11,"reset","","",272,[[]]],[11,"rewind","","",272,[[]]],[11,"is_empty","","",272,[[]]],[11,"is_last_contour_closed","","",272,[[]]],[11,"is_finite","","",272,[[]]],[11,"is_volatile","","",272,[[]]],[11,"set_is_volatile","","",272,[[]]],[11,"is_line_degenerate","","",272,[[]]],[11,"is_quad_degenerate","","",272,[[]]],[11,"is_cubic_degenerate","","",272,[[]]],[11,"is_line","","",272,[[],["option",4]]],[11,"count_points","","",272,[[]]],[11,"get_point","","",272,[[],[["option",4],["point",3]]]],[11,"get_points","","",272,[[]]],[11,"count_verbs","","",272,[[]]],[11,"get_verbs","","",272,[[]]],[11,"approximate_bytes_used","","",272,[[]]],[11,"swap","","",272,[[["path",6]]]],[11,"bounds","","",272,[[],["rect",3]]],[11,"update_bounds_cache","","",272,[[]]],[11,"compute_tight_bounds","","",272,[[],["rect",3]]],[11,"conservatively_contains_rect","","",272,[[]]],[11,"inc_reserve","","",272,[[]]],[11,"shrink_to_fit","","",272,[[]]],[11,"move_to","","",272,[[]]],[11,"r_move_to","","",272,[[]]],[11,"line_to","","",272,[[]]],[11,"r_line_to","","",272,[[]]],[11,"quad_to","","",272,[[]]],[11,"r_quad_to","","",272,[[]]],[11,"conic_to","","",272,[[["scalar",6]]]],[11,"r_conic_to","","",272,[[["scalar",6]]]],[11,"cubic_to","","",272,[[]]],[11,"r_cubic_to","","",272,[[]]],[11,"arc_to","","",272,[[["scalar",6]]]],[11,"arc_to_tangent","","",272,[[["scalar",6]]]],[11,"arc_to_rotated","","",272,[[["scalar",6],["pathdirection",4],["arcsize",4]]]],[11,"r_arc_to_rotated","","",272,[[["scalar",6],["pathdirection",4],["arcsize",4]]]],[11,"close","","",272,[[]]],[11,"convert_conic_to_quads","","",272,[[["scalar",6]],["option",4]]],[11,"is_rect","","",272,[[],["option",4]]],[11,"add_rect","","",272,[[["option",4]]]],[11,"add_oval","","",272,[[["option",4]]]],[11,"add_circle","","",272,[[["scalar",6]]]],[11,"add_arc","","",272,[[["scalar",6]]]],[11,"add_round_rect","","",272,[[]]],[11,"add_rrect","","",272,[[["option",4]]]],[11,"add_poly","","",272,[[]]],[11,"add_path","","",272,[[["path",6]]]],[11,"add_path_matrix","","",272,[[["path",6],["matrix",3]]]],[11,"reverse_add_path","","",272,[[["path",6]]]],[11,"with_offset","","",272,[[],["path",6]]],[11,"offset","","",272,[[]]],[11,"with_transform","","",272,[[["matrix",3]],["path",6]]],[11,"with_transform_with_perspective_clip","","",272,[[["matrix",3],["applyperspectiveclip",4]],["path",6]]],[11,"transform","","",272,[[["matrix",3]]]],[11,"transform_with_perspective_clip","","",272,[[["matrix",3],["applyperspectiveclip",4]]]],[11,"last_pt","","",272,[[],[["option",4],["point",3]]]],[11,"make_transform","","",272,[[["matrix",3]],["path",6]]],[11,"make_scale","","",272,[[],["path",6]]],[11,"set_last_pt","","",272,[[]]],[11,"segment_masks","","",272,[[],["segmentmask",3]]],[11,"contains","","",272,[[]]],[11,"dump_as_data","","",272,[[],["data",6]]],[11,"dump","","",272,[[]]],[11,"dump_hex","","",272,[[]]],[11,"dump_arrays_as_data","","",272,[[],["data",6]]],[11,"dump_arrays","","",272,[[]]],[11,"serialize","","",272,[[],["data",6]]],[11,"deserialize","","",272,[[["data",6]],[["option",4],["path",6]]]],[11,"generation_id","","",272,[[]]],[11,"is_valid","","",272,[[]]],[11,"new","","",272,[[]]],[11,"new_path","","",272,[[["path",6]]]],[11,"fill_type","","",272,[[],["pathfilltype",4]]],[11,"compute_bounds","","",272,[[],["rect",3]]],[11,"snapshot","","",272,[[],["path",6]]],[11,"detach","","",272,[[],["path",6]]],[11,"set_fill_type","","",272,[[["pathfilltype",4]]]],[11,"set_is_volatile","","",272,[[]]],[11,"reset","","",272,[[]]],[11,"move_to","","",272,[[]]],[11,"line_to","","",272,[[]]],[11,"quad_to","","",272,[[]]],[11,"conic_to","","",272,[[["scalar",6]]]],[11,"cubic_to","","",272,[[]]],[11,"close","","",272,[[]]],[11,"polyline_to","","",272,[[]]],[11,"r_line_to","","",272,[[]]],[11,"r_quad_to","","",272,[[]]],[11,"r_conic_to","","",272,[[["scalar",6]]]],[11,"r_cubic_to","","",272,[[]]],[11,"arc_to","","",272,[[["scalar",6]]]],[11,"arc_to_tangent","","",272,[[["scalar",6]]]],[11,"arc_to_radius","","",272,[[["scalar",6],["arcsize",4],["pathdirection",4]]]],[11,"add_arc","","",272,[[["scalar",6]]]],[11,"add_rect","","",272,[[]]],[11,"add_oval","","",272,[[]]],[11,"add_rrect","","",272,[[]]],[11,"add_circle","","",272,[[["scalar",6]]]],[11,"add_polygon","","",272,[[]]],[11,"inc_reserve","","",272,[[]]],[11,"offset","","",272,[[]]],[11,"toggle_inverse_fill_type","","",272,[[]]],[11,"make","","",272,[[["pathfilltype",4]]]],[11,"new","","",290,[[]]],[11,"new_path","","",290,[[["path",6]]]],[11,"fill_type","","",290,[[],["pathfilltype",4]]],[11,"compute_bounds","","",290,[[],["rect",3]]],[11,"snapshot","","",290,[[],["path",6]]],[11,"detach","","",290,[[],["path",6]]],[11,"set_fill_type","","",290,[[["pathfilltype",4]]]],[11,"set_is_volatile","","",290,[[]]],[11,"reset","","",290,[[]]],[11,"move_to","","",290,[[]]],[11,"line_to","","",290,[[]]],[11,"quad_to","","",290,[[]]],[11,"conic_to","","",290,[[["scalar",6]]]],[11,"cubic_to","","",290,[[]]],[11,"close","","",290,[[]]],[11,"polyline_to","","",290,[[]]],[11,"r_line_to","","",290,[[]]],[11,"r_quad_to","","",290,[[]]],[11,"r_conic_to","","",290,[[["scalar",6]]]],[11,"r_cubic_to","","",290,[[]]],[11,"arc_to","","",290,[[["scalar",6]]]],[11,"arc_to_tangent","","",290,[[["scalar",6]]]],[11,"arc_to_radius","","",290,[[["scalar",6],["arcsize",4],["pathdirection",4]]]],[11,"add_arc","","",290,[[["scalar",6]]]],[11,"add_rect","","",290,[[]]],[11,"add_oval","","",290,[[]]],[11,"add_rrect","","",290,[[]]],[11,"add_circle","","",290,[[["scalar",6]]]],[11,"add_polygon","","",290,[[]]],[11,"inc_reserve","","",290,[[]]],[11,"offset","","",290,[[]]],[11,"toggle_inverse_fill_type","","",290,[[]]],[11,"make","","",290,[[["pathfilltype",4]]]],[18,"CIRCLES","skia_safe::path_effect::point_data","",242,null],[18,"USE_PATH","","",242,null],[18,"USE_CLIP","","",242,null],[11,"empty","","Returns an empty set of flags",242,[[],["pointflags",3]]],[11,"all","","Returns the set containing all flags.",242,[[],["pointflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",242,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that â€¦",242,[[],[["pointflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any â€¦",242,[[],["pointflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving allâ€¦",242,[[],["pointflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",242,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",242,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦",242,[[["pointflags",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained â€¦",242,[[["pointflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",242,[[["pointflags",3]]]],[11,"remove","","Removes the specified flags in-place.",242,[[["pointflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",242,[[["pointflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the â€¦",242,[[["pointflags",3]]]],[11,"points","skia_safe::path_effect","",112,[[]]],[11,"sum","skia_safe","",274,[[],["patheffect",6]]],[11,"compose","","",274,[[],["patheffect",6]]],[11,"filter_path","","",274,[[["path",6],["strokerec",6]],["option",4]]],[11,"filter_path_inplace","","",274,[[["path",6],["strokerec",6],["path",6]]]],[11,"compute_fast_bounds","","",274,[[],["rect",3]]],[11,"as_points","","",274,[[["path",6],["matrix",3],["strokerec",6]],[["pointdata",3],["option",4]]]],[11,"as_a_dash","","",274,[[],[["option",4],["dashinfo",3]]]],[18,"GET_POSITION","skia_safe::path_measure","",243,null],[18,"GET_TANGENT","","",243,null],[18,"GET_POS_AND_TAN","","",243,null],[11,"empty","","Returns an empty set of flags",243,[[],["matrixflags",3]]],[11,"all","","Returns the set containing all flags.",243,[[],["matrixflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",243,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that â€¦",243,[[],[["matrixflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any â€¦",243,[[],["matrixflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving allâ€¦",243,[[],["matrixflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",243,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",243,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦",243,[[["matrixflags",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained â€¦",243,[[["matrixflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",243,[[["matrixflags",3]]]],[11,"remove","","Removes the specified flags in-place.",243,[[["matrixflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",243,[[["matrixflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the â€¦",243,[[["matrixflags",3]]]],[11,"new","skia_safe","",272,[[["path",6]]]],[11,"from_path","","",272,[[["path",6]]]],[11,"set_path","","",272,[[["path",6]]]],[11,"length","","",272,[[],["scalar",6]]],[11,"pos_tan","","",272,[[["scalar",6]],["option",4]]],[11,"matrix","","",272,[[["scalar",6]],[["matrix",3],["option",4]]]],[11,"segment","","",272,[[["scalar",6]],[["option",4],["path",6]]]],[11,"is_closed","","",272,[[]]],[11,"next_contour","","",272,[[]]],[18,"LINE","skia_safe::path","",244,null],[18,"QUAD","","",244,null],[18,"CONIC","","",244,null],[18,"CUBIC","","",244,null],[11,"empty","","Returns an empty set of flags",244,[[],["pathsegmentmask",3]]],[11,"all","","Returns the set containing all flags.",244,[[],["pathsegmentmask",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",244,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that â€¦",244,[[],[["option",4],["pathsegmentmask",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any â€¦",244,[[],["pathsegmentmask",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving allâ€¦",244,[[],["pathsegmentmask",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",244,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",244,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦",244,[[["pathsegmentmask",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained â€¦",244,[[["pathsegmentmask",3]]]],[11,"insert","","Inserts the specified flags in-place.",244,[[["pathsegmentmask",3]]]],[11,"remove","","Removes the specified flags in-place.",244,[[["pathsegmentmask",3]]]],[11,"toggle","","Toggles the specified flags in-place.",244,[[["pathsegmentmask",3]]]],[11,"set","","Inserts or removes the specified flags depending on the â€¦",244,[[["pathsegmentmask",3]]]],[11,"from_data","skia_safe","",274,[[["data",6]],[["option",4],["picture",6]]]],[11,"from_bytes","","",274,[[],[["option",4],["picture",6]]]],[11,"playback","","",274,[[["canvas",3]]]],[11,"cull_rect","","",274,[[],["rect",3]]],[11,"unique_id","","",274,[[]]],[11,"serialize","","",274,[[],["data",6]]],[11,"new_placeholder","","",274,[[],["picture",6]]],[11,"approximate_op_count","","",274,[[]]],[11,"approximate_op_count_nested","","",274,[[]]],[11,"approximate_bytes_used","","",274,[[]]],[11,"to_shader","","",274,[[],["shader",6]]],[11,"new","","",272,[[]]],[11,"begin_recording","","",272,[[["option",4],["bbhfactory",6]],["canvas",3]]],[11,"recording_canvas","","",272,[[],[["canvas",3],["option",4]]]],[11,"finish_recording_as_picture","","",272,[[["option",4],["rect",3]],[["option",4],["picture",6]]]],[11,"finish_recording_as_drawable","","",272,[[],[["drawable",6],["option",4]]]],[11,"dimensions","","",274,[[],["isize",3]]],[11,"width","","",274,[[]]],[11,"height","","",274,[[]]],[11,"pixels","","",274,[[]]],[11,"row_bytes","","",274,[[]]],[11,"generation_id","","",274,[[]]],[11,"notify_pixels_changed","","",274,[[]]],[11,"is_immutable","","",274,[[]]],[11,"set_immutable","","",274,[[]]],[11,"notify_added_to_cache","","",274,[[]]],[11,"new","","",272,[[["imageinfo",6]],["borrows",3]]],[11,"reset","","",272,[[]]],[11,"set_color_space","","",272,[[]]],[11,"extract_subset","","",272,[[],[["pixmap",6],["option",4]]]],[11,"info","","",272,[[],["imageinfo",6]]],[11,"row_bytes","","",272,[[]]],[11,"addr","","",272,[[]]],[11,"width","","",272,[[]]],[11,"height","","",272,[[]]],[11,"dimensions","","",272,[[],["isize",3]]],[11,"color_type","","",272,[[],["colortype",4]]],[11,"alpha_type","","",272,[[],["alphatype",4]]],[11,"color_space","","",272,[[],[["colorspace",6],["option",4]]]],[11,"is_opaque","","",272,[[]]],[11,"bounds","","",272,[[],["irect",3]]],[11,"row_bytes_as_pixels","","",272,[[]]],[11,"shift_per_pixel","","",272,[[]]],[11,"compute_byte_size","","",272,[[]]],[11,"compute_is_opaque","","",272,[[]]],[11,"get_color","","",272,[[],["color",3]]],[11,"get_alpha_f","","",272,[[]]],[11,"addr_at","","",272,[[]]],[11,"writable_addr","","",272,[[]]],[11,"writable_addr_at","","",272,[[]]],[11,"read_pixels","","",272,[[["imageinfo",6]]]],[11,"read_pixels_to_pixmap","","",272,[[["pixmap",6]]]],[11,"scale_pixels","","",272,[[["pixmap",6]]]],[11,"erase","","",272,[[["option",4],["irect",3]]]],[11,"erase_4f","","",272,[[["option",4],["irect",3]]]],[11,"erase_with_colorspace","","",272,[[["option",4],["irect",3],["option",4],["colorspace",6]]]],[11,"new","","",195,[[]]],[11,"is_zero","","",195,[[]]],[11,"set","","",195,[[]]],[11,"equals","","",195,[[]]],[11,"new","","",196,[[["scalar",6]]]],[11,"is_zero","","",196,[[]]],[11,"set","","",196,[[["scalar",6]]]],[11,"iset","","",196,[[]]],[11,"set_abs","","",196,[[]]],[11,"offset_points","","",196,[[]]],[11,"offset","","",196,[[]]],[11,"length","","",196,[[],["scalar",6]]],[11,"distance_to_origin","","",196,[[],["scalar",6]]],[11,"normalize","","",196,[[]]],[11,"set_normalize","","",196,[[["scalar",6]]]],[11,"set_length","","",196,[[["scalar",6]]]],[11,"set_length_xy","","",196,[[["scalar",6]]]],[11,"scaled","","",196,[[["scalar",6]]]],[11,"scale","","",196,[[["scalar",6]]]],[11,"negate","","",196,[[]]],[11,"is_finite","","",196,[[]]],[11,"equals","","",196,[[["scalar",6]]]],[11,"length_xy","","",196,[[["scalar",6]],["scalar",6]]],[11,"normalize_vector","","",196,[[["vector",6]],["scalar",6]]],[11,"distance","","",196,[[],["scalar",6]]],[11,"dot_product","","",196,[[],["scalar",6]]],[11,"cross_product","","",196,[[],["scalar",6]]],[11,"cross","","",196,[[["vector",6]],["scalar",6]]],[11,"dot","","",196,[[["vector",6]],["scalar",6]]],[11,"new","","",197,[[["scalar",6]]]],[11,"set","","",197,[[["scalar",6]]]],[11,"length_xyz","","",197,[[["scalar",6]],["scalar",6]]],[11,"length","","",197,[[],["scalar",6]]],[11,"normalize","","",197,[[]]],[11,"normalized","","",197,[[],["option",4]]],[11,"scaled","","",197,[[["scalar",6]]]],[11,"scale","","",197,[[["scalar",6]]]],[11,"is_finite","","",197,[[]]],[11,"dot_product","","",197,[[],["scalar",6]]],[11,"dot","","",197,[[],["scalar",6]]],[11,"cross_product","","",197,[[]]],[11,"cross","","",197,[[]]],[11,"new","","",198,[[]]],[11,"new_empty","","",198,[[]]],[11,"from_wh","","",198,[[]]],[11,"from_size","","",198,[[]]],[11,"from_pt_size","","",198,[[]]],[11,"from_ltrb","","",198,[[]]],[11,"from_xywh","","",198,[[]]],[11,"left","","",198,[[]]],[11,"top","","",198,[[]]],[11,"right","","",198,[[]]],[11,"bottom","","",198,[[]]],[11,"x","","",198,[[]]],[11,"y","","",198,[[]]],[11,"width","","",198,[[]]],[11,"height","","",198,[[]]],[11,"size","","",198,[[],["isize",3]]],[11,"width_64","","",198,[[]]],[11,"height_64","","",198,[[]]],[11,"is_empty_64","","",198,[[]]],[11,"is_empty","","",198,[[]]],[11,"set_empty","","",198,[[]]],[11,"set_ltrb","","",198,[[]]],[11,"set_xywh","","",198,[[]]],[11,"set_wh","","",198,[[]]],[11,"with_offset","","",198,[[]]],[11,"with_inset","","",198,[[]]],[11,"with_outset","","",198,[[]]],[11,"offset","","",198,[[]]],[11,"offset_to","","",198,[[]]],[11,"with_offset_to","","",198,[[]]],[11,"inset","","",198,[[]]],[11,"outset","","",198,[[]]],[11,"with_adjustment","","",198,[[]]],[11,"adjust","","",198,[[]]],[11,"contains_no_empty_check","","",198,[[]]],[11,"intersect","","",198,[[],["option",4]]],[11,"intersects","","",198,[[]]],[11,"intersect_no_empty_check_","","",198,[[],["option",4]]],[11,"join","","",198,[[]]],[11,"sort","","",198,[[]]],[11,"sorted","","",198,[[]]],[11,"empty","","",198,[[]]],[11,"new","","",199,[[["scalar",6]]]],[11,"new_empty","","",199,[[]]],[11,"from_wh","","",199,[[["scalar",6]]]],[11,"from_iwh","","",199,[[]]],[11,"from_size","","",199,[[]]],[11,"from_xywh","","",199,[[["scalar",6]]]],[11,"from_point_and_size","","",199,[[]]],[11,"from_isize","","",199,[[]]],[11,"from_irect","","",199,[[]]],[11,"is_empty","","",199,[[]]],[11,"is_sorted","","",199,[[]]],[11,"is_finite","","",199,[[]]],[11,"x","","",199,[[],["scalar",6]]],[11,"y","","",199,[[],["scalar",6]]],[11,"left","","",199,[[],["scalar",6]]],[11,"top","","",199,[[],["scalar",6]]],[11,"right","","",199,[[],["scalar",6]]],[11,"bottom","","",199,[[],["scalar",6]]],[11,"size","","",199,[[],["size",3]]],[11,"width","","",199,[[],["scalar",6]]],[11,"height","","",199,[[],["scalar",6]]],[11,"center","","",199,[[],["point",3]]],[11,"center_x","","",199,[[],["scalar",6]]],[11,"center_y","","",199,[[],["scalar",6]]],[11,"to_quad","","",199,[[]]],[11,"set_empty","","",199,[[]]],[11,"set_irect","","",199,[[]]],[11,"set_ltrb","","",199,[[["scalar",6]]]],[11,"set_bounds","","",199,[[]]],[11,"set_bounds_check","","",199,[[]]],[11,"set_bounds_no_check","","",199,[[]]],[11,"set_bounds2","","",199,[[]]],[11,"from_bounds","","",199,[[],["option",4]]],[11,"set_xywh","","",199,[[["scalar",6]]]],[11,"set_wh","","",199,[[["scalar",6]]]],[11,"set_iwh","","",199,[[]]],[11,"with_offset","","",199,[[]]],[11,"with_inset","","",199,[[]]],[11,"with_outset","","",199,[[]]],[11,"offset","","",199,[[]]],[11,"offset_to","","",199,[[]]],[11,"with_offset_to","","",199,[[]]],[11,"inset","","",199,[[]]],[11,"outset","","",199,[[]]],[11,"intersect","","",199,[[]]],[11,"intersect2","","",199,[[]]],[11,"intersects","","",199,[[]]],[11,"intersects2","","",199,[[]]],[11,"join","","",199,[[]]],[11,"join2","","",199,[[],["rect",3]]],[11,"join_non_empty_arg","","",199,[[]]],[11,"join_possibly_empty_rect","","",199,[[]]],[11,"round","","",199,[[],["irect",3]]],[11,"round_in","","",199,[[],["irect",3]]],[11,"sort","","",199,[[]]],[11,"sorted","","",199,[[],["rect",3]]],[11,"as_scalars","","",199,[[]]],[11,"dump","","",199,[[]]],[11,"dump_hex","","",199,[[]]],[18,"LastOp","skia_safe::region","",114,null],[11,"new","skia_safe","",272,[[],["region",6]]],[11,"from_rect","","",272,[[],["region",6]]],[11,"set","","",272,[[["region",6]]]],[11,"swap","","",272,[[["region",6]]]],[11,"is_empty","","",272,[[]]],[11,"is_rect","","",272,[[]]],[11,"is_complex","","",272,[[]]],[11,"bounds","","",272,[[],["irect",3]]],[11,"compute_region_complexity","","",272,[[]]],[11,"get_boundary_path","","",272,[[["path",6]]]],[11,"set_empty","","",272,[[]]],[11,"set_rect","","",272,[[]]],[11,"set_rects","","",272,[[]]],[11,"set_region","","",272,[[["region",6]]]],[11,"set_path","","",272,[[["path",6],["region",6]]]],[11,"intersects_rect","","",272,[[]]],[11,"intersects_region","","",272,[[["region",6]]]],[11,"contains_point","","",272,[[["ipoint",3]]]],[11,"contains_rect","","",272,[[]]],[11,"contains_region","","",272,[[["region",6]]]],[11,"quick_contains","","",272,[[]]],[11,"quick_reject_rect","","",272,[[]]],[11,"quick_reject_region","","",272,[[["region",6]]]],[11,"translate","","",272,[[]]],[11,"translated","","",272,[[],["region",6]]],[11,"op_rect","","",272,[[["regionop",4]]]],[11,"op_region","","",272,[[["region",6],["regionop",4]]]],[11,"op_rect_region","","",272,[[["region",6],["regionop",4]]]],[11,"op_region_rect","","",272,[[["region",6],["regionop",4]]]],[11,"write_to_memory","","",272,[[["vec",3]]]],[11,"read_from_memory","","",272,[[]]],[11,"difference","skia_safe::region","",115,[[]]],[11,"intersect","","",115,[[]]],[11,"xor","","",115,[[]]],[11,"union","","",115,[[]]],[11,"reverse_difference","","",115,[[]]],[11,"replace","","",115,[[]]],[11,"new_empty","","",245,[[],["iterator",3]]],[11,"new","","",245,[[["region",6]],["iterator",3]]],[11,"rewind","","",245,[[]]],[11,"reset","","",245,[[["region",6]],["iterator",3]]],[11,"is_done","","",245,[[]]],[11,"next","","",245,[[]]],[11,"rect","","",245,[[],["irect",3]]],[11,"rgn","","",245,[[],[["region",6],["option",4]]]],[11,"new","","",246,[[["region",6]],["cliperator",3]]],[11,"is_done","","",246,[[]]],[11,"next","","",246,[[]]],[11,"rect","","",246,[[],["irect",3]]],[11,"new","","",247,[[["region",6]],["spanerator",3]]],[18,"LastType","skia_safe::rrect","",117,null],[11,"new","","",248,[[]]],[11,"get_type","","",248,[[],["type",4]]],[11,"is_empty","","",248,[[]]],[11,"is_rect","","",248,[[]]],[11,"is_oval","","",248,[[]]],[11,"is_simple","","",248,[[]]],[11,"is_nine_patch","","",248,[[]]],[11,"is_complex","","",248,[[]]],[11,"width","","",248,[[],["scalar",6]]],[11,"height","","",248,[[],["scalar",6]]],[11,"simple_radii","","",248,[[],["vector",6]]],[11,"set_empty","","",248,[[]]],[11,"set_rect","","",248,[[]]],[11,"new_empty","","",248,[[]]],[11,"new_rect","","",248,[[]]],[11,"new_oval","","",248,[[]]],[11,"new_rect_xy","","",248,[[["scalar",6]]]],[11,"new_nine_patch","","",248,[[["scalar",6]]]],[11,"new_rect_radii","","",248,[[]]],[11,"set_oval","","",248,[[]]],[11,"set_rect_xy","","",248,[[["scalar",6]]]],[11,"set_nine_patch","","",248,[[["scalar",6]]]],[11,"set_rect_radii","","",248,[[]]],[11,"rect","","",248,[[],["rect",3]]],[11,"radii","","",248,[[["corner",4]],["vector",6]]],[11,"bounds","","",248,[[],["rect",3]]],[11,"inset","","",248,[[]]],[11,"with_inset","","",248,[[]]],[11,"outset","","",248,[[]]],[11,"with_outset","","",248,[[]]],[11,"offset","","",248,[[]]],[11,"with_offset","","",248,[[]]],[11,"contains","","",248,[[]]],[11,"is_valid","","",248,[[]]],[18,"SIZE_IN_MEMORY","","",248,null],[11,"write_to_memory","","",248,[[["vec",3]]]],[11,"read_from_memory","","",248,[[]]],[11,"transform","","",248,[[["matrix",3]],["option",4]]],[11,"dump","","",248,[[]]],[11,"dump_to_string","","",248,[[],["string",3]]],[11,"dump_hex","","",248,[[]]],[11,"new","skia_safe","",201,[[["scalar",6]]]],[11,"from_radians","","",201,[[["scalar",6]]]],[11,"rect_stays_rect","","",201,[[]]],[11,"set_identity","","",201,[[]]],[11,"set","","",201,[[["scalar",6]]]],[11,"to_quad","","",201,[[]]],[11,"to_tri_strip","","",201,[[]]],[11,"new","skia_safe::sampling_options","",121,[[["mipmapmode",4],["filtermode",4]]]],[11,"from_filter_quality","","",121,[[["filterquality",4]]]],[18,"ZERO","skia_safe","",202,null],[18,"NEARLY_ZERO","","",202,null],[18,"ONE","","",202,null],[18,"HALF","","",202,null],[18,"Last","skia_safe::shader","",122,null],[11,"color_count","","",124,[[]]],[11,"is_opaque","skia_safe","",274,[[]]],[11,"image","","",274,[[],["option",4]]],[11,"is_a_image","","",274,[[]]],[11,"with_local_matrix","","",274,[[["matrix",3]]]],[11,"with_color_filter","","",274,[[]]],[11,"new","","",204,[[],["isize",3]]],[11,"new_empty","","",204,[[],["isize",3]]],[11,"set","","",204,[[]]],[11,"is_zero","","",204,[[]]],[11,"is_empty","","",204,[[]]],[11,"set_empty","","",204,[[]]],[11,"area","","",204,[[]]],[11,"equals","","",204,[[]]],[11,"new","","",205,[[["scalar",6]],["size",3]]],[11,"from_isize","","",205,[[["isize",3]],["size",3]]],[11,"new_empty","","",205,[[]]],[11,"set","","",205,[[["scalar",6]]]],[11,"is_zero","","",205,[[]]],[11,"is_empty","","",205,[[]]],[11,"set_empty","","",205,[[]]],[11,"equals","","",205,[[["scalar",6]]]],[11,"to_round","","",205,[[],["isize",3]]],[11,"to_ceil","","",205,[[],["isize",3]]],[11,"to_floor","","",205,[[],["isize",3]]],[11,"new","","",272,[[["initstyle",4]]]],[11,"new_hairline","","",272,[[]]],[11,"new_fill","","",272,[[]]],[11,"from_paint","","",272,[[["paint",6]]]],[11,"style","","",272,[[],["style",4]]],[11,"width","","",272,[[],["scalar",6]]],[11,"miter","","",272,[[],["scalar",6]]],[11,"cap","","",272,[[],["cap",4]]],[11,"join","","",272,[[],["join",4]]],[11,"is_hairline_style","","",272,[[]]],[11,"is_fill_style","","",272,[[]]],[11,"set_fill_style","","",272,[[]]],[11,"set_hairline_style","","",272,[[]]],[11,"set_stroke_style","","",272,[[["scalar",6]]]],[11,"set_stroke_params","","",272,[[["join",4],["scalar",6],["cap",4]]]],[11,"res_scale","","",272,[[],["scalar",6]]],[11,"set_res_scale","","",272,[[["scalar",6]]]],[11,"need_to_apply","","",272,[[]]],[11,"apply_to_path","","",272,[[["path",6],["path",6]]]],[11,"apply_to_path_inplace","","",272,[[["path",6]]]],[11,"apply_to_paint","","",272,[[["paint",6]]]],[11,"inflation_radius","","",272,[[],["scalar",6]]],[11,"inflation_radius_from_paint_and_style","","",272,[[["paint",6],["style",4]],["scalar",6]]],[11,"inflation_radius_from_params","","",272,[[["join",4],["cap",4],["scalar",6]],["scalar",6]]],[11,"has_equal_effect","","",272,[[["strokerec",6]]]],[11,"new_raster_direct","","",274,[[["surfaceprops",3],["option",4],["imageinfo",6]],[["option",4],["borrows",3]]]],[11,"new_raster","","",274,[[["surfaceprops",3],["option",4],["imageinfo",6]],["option",4]]],[11,"new_raster_n32_premul","","",274,[[],["option",4]]],[11,"from_backend_texture","","",274,[[["surfaceprops",3],["colortype",4],["backendtexture",6],["recordingcontext",6],["option",4],["surfaceorigin",4]],["option",4]]],[11,"from_backend_render_target","","",274,[[["surfaceprops",3],["backendrendertarget",6],["colortype",4],["recordingcontext",6],["option",4],["surfaceorigin",4]],["option",4]]],[11,"new_render_target","","",274,[[["surfaceprops",3],["imageinfo",6],["recordingcontext",6],["budgeted",3],["option",4],["surfaceorigin",4]],["option",4]]],[11,"new_render_target_with_characterization","","",274,[[["recordingcontext",6],["surfacecharacterization",6],["budgeted",3]],["option",4]]],[11,"is_compatible","","",274,[[["surfacecharacterization",6]]]],[11,"new_null","","",274,[[],["option",4]]],[11,"width","","",274,[[]]],[11,"height","","",274,[[]]],[11,"image_info","","",274,[[],["imageinfo",6]]],[11,"generation_id","","",274,[[]]],[11,"notify_content_will_change","","",274,[[["contentchangemode",4]]]],[11,"recording_context","","",274,[[],[["option",4],["recordingcontext",6]]]],[11,"get_backend_texture","","",274,[[["backendhandleaccess",4]],[["option",4],["backendtexture",6]]]],[11,"get_backend_render_target","","",274,[[["backendhandleaccess",4]],[["option",4],["backendrendertarget",6]]]],[11,"replace_backend_texture","","",274,[[["surfaceorigin",4],["backendtexture",6]]]],[11,"replace_backend_texture_with_mode","","",274,[[["surfaceorigin",4],["backendtexture",6]]]],[11,"canvas","","",274,[[],["canvas",3]]],[11,"new_surface","","",274,[[["imageinfo",6]],[["option",4],["surface",6]]]],[11,"new_surface_with_dimensions","","",274,[[],[["option",4],["surface",6]]]],[11,"image_snapshot","","",274,[[],["image",6]]],[11,"image_snapshot_with_bounds","","",274,[[],[["option",4],["image",6]]]],[11,"draw","","",274,[[["canvas",3],["option",4],["paint",6]]]],[11,"peek_pixels","","",274,[[],[["borrows",3],["option",4]]]],[11,"read_pixels_to_pixmap","","",274,[[["pixmap",6]]]],[11,"read_pixels","","",274,[[["imageinfo",6]]]],[11,"read_pixels_to_bitmap","","",274,[[["bitmap",6]]]],[11,"write_pixels_from_pixmap","","",274,[[["pixmap",6]]]],[11,"write_pixels_from_bitmap","","",274,[[["bitmap",6]]]],[11,"props","","",274,[[],["surfaceprops",3]]],[11,"flush_and_submit","","",274,[[]]],[11,"flush_submit_and_sync_cpu","","",274,[[]]],[11,"flush","","",274,[[]]],[11,"flush_with_access_info","","",274,[[["flushinfo",3],["backendsurfaceaccess",4]],["semaphoressubmitted",4]]],[11,"flush_with_mutable_state","","",274,[[["flushinfo",3]],["semaphoressubmitted",4]]],[11,"characterize","","",274,[[],[["option",4],["surfacecharacterization",6]]]],[11,"draw_display_list","","",274,[[]]],[11,"draw_display_list_with_offset","","",274,[[]]],[11,"resized","","",272,[[]]],[11,"with_color_space","","",272,[[]]],[11,"with_backend_format","","",272,[[["colortype",4],["backendformat",6]]]],[11,"with_fbo0","","",272,[[]]],[11,"cache_max_resource_bytes","","",272,[[]]],[11,"is_valid","","",272,[[]]],[11,"image_info","","",272,[[],["imageinfo",6]]],[11,"backend_format","","",272,[[],["backendformat",6]]],[11,"origin","","",272,[[],["surfaceorigin",4]]],[11,"dimensions","","",272,[[],["isize",3]]],[11,"width","","",272,[[]]],[11,"height","","",272,[[]]],[11,"color_type","","",272,[[],["colortype",4]]],[11,"sample_count","","",272,[[]]],[11,"is_textureable","","",272,[[]]],[11,"is_mip_mapped","","",272,[[]]],[11,"uses_glfbo0","","",272,[[]]],[11,"vk_rt_supports_input_attachment","","",272,[[]]],[11,"vulkan_secondary_cb_compatible","","",272,[[]]],[11,"is_protected","","",272,[[],["protected",4]]],[11,"color_space","","",272,[[],[["colorspace",6],["option",4]]]],[11,"surface_props","","",272,[[],["surfaceprops",3]]],[11,"is_compatible","","",272,[[["backendtexture",6]]]],[11,"is_rgb","","",206,[[]]],[11,"is_bgr","","",206,[[]]],[11,"is_h","","",206,[[]]],[11,"is_v","","",206,[[]]],[18,"USE_DEVICE_INDEPENDENT_FONTS","","",250,null],[11,"empty","","Returns an empty set of flags",250,[[],["surfacepropsflags",3]]],[11,"all","","Returns the set containing all flags.",250,[[],["surfacepropsflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",250,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that â€¦",250,[[],[["surfacepropsflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any â€¦",250,[[],["surfacepropsflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving allâ€¦",250,[[],["surfacepropsflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",250,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",250,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦",250,[[["surfacepropsflags",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained â€¦",250,[[["surfacepropsflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",250,[[["surfacepropsflags",3]]]],[11,"remove","","Removes the specified flags in-place.",250,[[["surfacepropsflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",250,[[["surfacepropsflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the â€¦",250,[[["surfacepropsflags",3]]]],[11,"new","","",251,[[["surfacepropsflags",3],["pixelgeometry",4]],["surfaceprops",3]]],[11,"flags","","",251,[[],["surfacepropsflags",3]]],[11,"pixel_geometry","","",251,[[],["pixelgeometry",4]]],[11,"is_use_device_independent_fonts","","",251,[[]]],[11,"new","","",274,[[["font",6]],["option",4]]],[11,"bounds","","",274,[[],["rect",3]]],[11,"unique_id","","",274,[[]]],[11,"get_intercepts","","",274,[[["option",4],["paint",6]],[["scalar",6],["vec",3]]]],[11,"from_str","","",274,[[["font",6]],[["option",4],["textblob",6]]]],[11,"from_text","","",274,[[["font",6],["textencoding",4]],[["option",4],["textblob",6]]]],[11,"from_pos_text_h","","",274,[[["scalar",6],["font",6]],[["option",4],["textblob",6]]]],[11,"from_pos_text","","",274,[[["font",6]],[["option",4],["textblob",6]]]],[11,"from_rsxform","","",274,[[["font",6]],[["option",4],["textblob",6]]]],[11,"new","","",272,[[]]],[11,"make","","",272,[[],[["option",4],["textblob",6]]]],[11,"alloc_run","","",272,[[["font",6],["option",4],["rect",3]]]],[11,"alloc_run_pos_h","","",272,[[["option",4],["rect",3],["font",6],["scalar",6]]]],[11,"alloc_run_pos","","",272,[[["font",6],["option",4],["rect",3]]]],[11,"alloc_run_rsxform","","",272,[[["font",6]]]],[11,"typeface","","",207,[[],["option",4]]],[11,"new","","",275,[[["textblob",6]]]],[11,"new","","",274,[[["fontstyle",3]],["option",4]]],[11,"font_style","","",274,[[],["fontstyle",3]]],[11,"is_bold","","",274,[[]]],[11,"is_italic","","",274,[[]]],[11,"is_fixed_pitch","","",274,[[]]],[11,"variation_design_position","","",274,[[],[["option",4],["vec",3]]]],[11,"variation_design_parameters","","",274,[[],[["option",4],["vec",3]]]],[11,"unique_id","","",274,[[],["fontid",6]]],[11,"equal","","",274,[[]]],[11,"from_name","","",274,[[["fontstyle",3]],[["option",4],["typeface",6]]]],[11,"from_data","","",274,[[],[["option",4],["typeface",6]]]],[11,"clone_with_arguments","","",274,[[["fontarguments",3]],[["option",4],["typeface",6]]]],[11,"serialize","","",274,[[["serializebehavior",4]],["data",6]]],[11,"deserialize","","",274,[[],[["option",4],["typeface",6]]]],[11,"unichars_to_glyphs","","",274,[[]]],[11,"unichar_to_glyph","","",274,[[["unichar",6]],["glyphid",6]]],[11,"count_glyphs","","",274,[[]]],[11,"count_tables","","",274,[[]]],[11,"table_tags","","",274,[[],[["option",4],["vec",3]]]],[11,"get_table_size","","",274,[[["fonttabletag",6]],["option",4]]],[11,"get_table_data","","",274,[[["fonttabletag",6]]]],[11,"copy_table_data","","",274,[[["fonttabletag",6]],[["option",4],["data",6]]]],[11,"units_per_em","","",274,[[],["option",4]]],[11,"get_kerning_pair_adjustments","","",274,[[]]],[11,"new_family_name_iterator","","",274,[[]]],[11,"family_name","","",274,[[],["string",3]]],[11,"post_script_name","","",274,[[],[["string",3],["option",4]]]],[11,"bounds","","",274,[[],["rect",3]]],[11,"from_chars","","",252,[[]]],[11,"new","","",252,[[]]],[11,"a","","",252,[[]]],[11,"b","","",252,[[]]],[11,"c","","",252,[[]]],[11,"d","","",252,[[]]],[18,"NO","","",253,null],[18,"YES","","",253,null],[18,"No","","",253,null],[18,"Yes","","",253,null],[18,"Last","skia_safe::vertices","",132,null],[11,"new","","",135,[[["attributetype",4]]]],[11,"new_with_usage_and_marker","","",135,[[["attributetype",4]],["attribute",3]]],[11,"marker_name","","",135,[[],[["cstr",3],["option",4]]]],[11,"channel_count","","",135,[[]]],[11,"bytes_per_vertex","","",135,[[]]],[11,"is_valid","","",135,[[]]],[11,"new_copy","skia_safe","",274,[[["vertexmode",4],["option",4]],["vertices",6]]],[18,"MAX_CUSTOM_ATTRIBUTES","","",274,null],[11,"unique_id","","",274,[[]]],[11,"mode","","",274,[[],["vertexmode",4]]],[11,"bounds","","",274,[[],["rect",3]]],[11,"has_colors","","",274,[[]]],[11,"has_tex_coords","","",274,[[]]],[11,"has_bones","","",274,[[]]],[11,"has_indices","","",274,[[]]],[11,"vertex_count","","",274,[[]]],[11,"index_count","","",274,[[]]],[11,"positions","","",274,[[]]],[11,"tex_coords","","",274,[[],["option",4]]],[11,"colors","","",274,[[],["option",4]]],[11,"bone_indices","","",274,[[],["option",4]]],[11,"bone_weights","","",274,[[],["option",4]]],[11,"indices","","",274,[[],["option",4]]],[11,"is_volatile","","",274,[[]]],[11,"apply_bones","","",274,[[]]],[11,"approximate_size","","",274,[[]]],[11,"decode","","",274,[[]]],[11,"encode","","",274,[[]]],[18,"HAS_TEX_COORDS","skia_safe::vertices","",255,null],[18,"HAS_COLORS","","",255,null],[11,"empty","","Returns an empty set of flags",255,[[],["builderflags",3]]],[11,"all","","Returns the set containing all flags.",255,[[],["builderflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",255,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that â€¦",255,[[],[["builderflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any â€¦",255,[[],["builderflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving allâ€¦",255,[[],["builderflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",255,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",255,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦",255,[[["builderflags",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained â€¦",255,[[["builderflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",255,[[["builderflags",3]]]],[11,"remove","","Removes the specified flags in-place.",255,[[["builderflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",255,[[["builderflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the â€¦",255,[[["builderflags",3]]]],[11,"new","skia_safe","",272,[[["vertexmode",4],["builderflags",3]],["builder",6]]],[11,"is_valid","","",272,[[]]],[11,"positions","","",272,[[]]],[11,"indices","","",272,[[],["option",4]]],[11,"tex_coords","","",272,[[],["option",4]]],[11,"colors","","",272,[[],["option",4]]],[11,"is_volatile","","",272,[[]]],[11,"bone_indices","","",272,[[],["option",4]]],[11,"bone_weights","","",272,[[],["option",4]]],[11,"detach","","",272,[[],["vertices",6]]],[18,"Last","skia_safe::yuva_pixmap_info","",136,null],[18,"MAX_PLANES","skia_safe","",272,null],[11,"new","","<code>dimensions</code> should specify the size of the full resolution â€¦",272,[[["yuvcolorspace",4],["planeconfig",4],["subsampling",4]],["option",4]]],[11,"plane_config","","",272,[[],["planeconfig",4]]],[11,"subsampling","","",272,[[],["subsampling",4]]],[11,"plane_subsampling_factors","","",272,[[]]],[11,"dimensions","","Dimensions of the full resolution image (after planes â€¦",272,[[],["isize",3]]],[11,"width","","",272,[[]]],[11,"height","","",272,[[]]],[11,"yuv_color_space","","",272,[[],["yuvcolorspace",4]]],[11,"siting_xy","","",272,[[]]],[11,"origin","","",272,[[],["encodedorigin",4]]],[11,"origin_matrix","","",272,[[],["matrix",3]]],[11,"has_alpha","","",272,[[]]],[11,"plane_dimensions","","Returns the dimensions for each plane. Dimensions are as â€¦",272,[[],[["vec",3],["isize",3]]]],[11,"compute_total_bytes","","Given a per-plane row bytes, determine size to allocate â€¦",272,[[["option",4]]]],[11,"num_planes","","",272,[[]]],[11,"num_channels_in_plane","","",272,[[],["option",4]]],[11,"with_subsampling","","Returns a [YUVAInfo] that is identical to this one but â€¦",272,[[["subsampling",4]],["option",4]]],[11,"with_dimensions","","Returns a [YUVAInfo] that is identical to this one but â€¦",272,[[],["option",4]]],[18,"MAX_PLANES","skia_safe::yuva_info","",294,null],[11,"new","","<code>dimensions</code> should specify the size of the full resolution â€¦",294,[[["yuvcolorspace",4],["planeconfig",4],["subsampling",4]],["option",4]]],[11,"plane_config","","",294,[[],["planeconfig",4]]],[11,"subsampling","","",294,[[],["subsampling",4]]],[11,"plane_subsampling_factors","","",294,[[]]],[11,"dimensions","","Dimensions of the full resolution image (after planes â€¦",294,[[],["isize",3]]],[11,"width","","",294,[[]]],[11,"height","","",294,[[]]],[11,"yuv_color_space","","",294,[[],["yuvcolorspace",4]]],[11,"siting_xy","","",294,[[]]],[11,"origin","","",294,[[],["encodedorigin",4]]],[11,"origin_matrix","","",294,[[],["matrix",3]]],[11,"has_alpha","","",294,[[]]],[11,"plane_dimensions","","Returns the dimensions for each plane. Dimensions are as â€¦",294,[[],[["vec",3],["isize",3]]]],[11,"compute_total_bytes","","Given a per-plane row bytes, determine size to allocate â€¦",294,[[["option",4]]]],[11,"num_planes","","",294,[[]]],[11,"num_channels_in_plane","","",294,[[],["option",4]]],[11,"with_subsampling","","Returns a [YUVAInfo] that is identical to this one but â€¦",294,[[["subsampling",4]],["option",4]]],[11,"with_dimensions","","Returns a [YUVAInfo] that is identical to this one but â€¦",294,[[],["option",4]]],[18,"Last","skia_safe::yuva_pixmap_info","",139,null],[11,"from_context","skia_safe","Init based on texture formats supported by the context.",272,[[["recordingcontext",6]]]],[11,"all","","All legal combinations of [PlaneConfig] and [DataType] â€¦",272,[[]]],[11,"supported","","Checks whether there is a supported combination of color â€¦",272,[[["planeconfig",4],["datatype",4]]]],[11,"enable_data_type","","Update to add support for pixmaps with <code>num_channels</code> â€¦",272,[[["datatype",4]]]],[11,"from_context","skia_safe::yuva_pixmaps::yuva_pixmap_info","Init based on texture formats supported by the context.",295,[[["recordingcontext",6]]]],[11,"all","","All legal combinations of [PlaneConfig] and [DataType] â€¦",295,[[]]],[11,"supported","","Checks whether there is a supported combination of color â€¦",295,[[["planeconfig",4],["datatype",4]]]],[11,"enable_data_type","","Update to add support for pixmaps with <code>num_channels</code> â€¦",295,[[["datatype",4]]]],[18,"MAX_PLANES","skia_safe","",272,null],[18,"DATA_TYPE_CNT","","",272,null],[11,"new","","Initializes the [YUVAPixmapInfo] from a [YUVAInfo] with â€¦",272,[[["yuvainfo",6],["option",4]],["option",4]]],[11,"from_data_type","","Like above but uses [â€¦",272,[[["option",4],["yuvainfo",6],["datatype",4]],["option",4]]],[11,"yuva_info","","",272,[[],["yuvainfo",6]]],[11,"yuv_color_space","","",272,[[],["yuvcolorspace",4]]],[11,"num_planes","","The number of [Pixmap] planes.",272,[[]]],[11,"data_type","","The per-YUV<code>[A]</code> channel data type.",272,[[],["datatype",4]]],[11,"row_bytes","","Row bytes for the ith plane. Returns [None] if <code>i</code> >= [â€¦",272,[[],["option",4]]],[11,"plane_info","","Image info for the ith plane, or [None] if <code>i</code> >= [â€¦",272,[[],[["option",4],["imageinfo",6]]]],[11,"compute_total_bytes","","Determine size to allocate for all planes. Optionally â€¦",272,[[["option",4]]]],[11,"init_pixmaps_from_single_allocation","","Takes an allocation that is assumed to be at least [â€¦",272,[[],["option",4]]],[11,"is_supported","","Is this valid and does it use color types allowed by the â€¦",272,[[["supporteddatatypes",6]]]],[18,"MAX_PLANES","skia_safe::yuva_pixmaps","",302,null],[18,"DATA_TYPE_CNT","","",302,null],[11,"new","","Initializes the [YUVAPixmapInfo] from a [YUVAInfo] with â€¦",302,[[["yuvainfo",6],["option",4]],["option",4]]],[11,"from_data_type","","Like above but uses [â€¦",302,[[["option",4],["yuvainfo",6],["datatype",4]],["option",4]]],[11,"yuva_info","","",302,[[],["yuvainfo",6]]],[11,"yuv_color_space","","",302,[[],["yuvcolorspace",4]]],[11,"num_planes","","The number of [Pixmap] planes.",302,[[]]],[11,"data_type","","The per-YUV<code>[A]</code> channel data type.",302,[[],["datatype",4]]],[11,"row_bytes","","Row bytes for the ith plane. Returns [None] if <code>i</code> >= [â€¦",302,[[],["option",4]]],[11,"plane_info","","Image info for the ith plane, or [None] if <code>i</code> >= [â€¦",302,[[],[["option",4],["imageinfo",6]]]],[11,"compute_total_bytes","","Determine size to allocate for all planes. Optionally â€¦",302,[[["option",4]]]],[11,"init_pixmaps_from_single_allocation","","Takes an allocation that is assumed to be at least [â€¦",302,[[],["option",4]]],[11,"is_supported","","Is this valid and does it use color types allowed by the â€¦",302,[[["supporteddatatypes",6]]]],[18,"MAX_PLANES","skia_safe","",272,null],[11,"recommended_rgba_color_type","","",272,[[["datatype",4]],["colortype",4]]],[11,"allocate","","Allocate space for pixmaps\' pixels in the [YUVAPixmaps].",272,[[["yuvapixmapinfo",6]],["option",4]]],[11,"from_data","","Use storage in [Data] as backing store for pixmaps\' â€¦",272,[[["yuvapixmapinfo",6]],["option",4]]],[11,"from_external_memory","","Use passed in memory as backing store for pixmaps\' â€¦",272,[[["yuvapixmapinfo",6]],["option",4]]],[11,"from_external_pixmaps","","Wraps existing <code>Pixmap</code>s. The [YUVAPixmaps] will have no â€¦",272,[[["yuvainfo",6]],["option",4]]],[11,"yuva_info","","",272,[[],["yuvainfo",6]]],[11,"data_type","","",272,[[],["datatype",4]]],[11,"pixmaps_info","","",272,[[],["yuvapixmapinfo",6]]],[11,"num_planes","","Number of pixmap planes.",272,[[]]],[11,"planes","","Access the [Pixmap] planes.",272,[[]]],[11,"plane","","Get the ith [Pixmap] plane. <code>Pixmap</code> will be default â€¦",272,[[],["pixmap",6]]],[18,"MAX_PLANES","skia_safe::yuva_pixmaps","",303,null],[11,"recommended_rgba_color_type","","",303,[[["datatype",4]],["colortype",4]]],[11,"allocate","","Allocate space for pixmaps\' pixels in the [YUVAPixmaps].",303,[[["yuvapixmapinfo",6]],["option",4]]],[11,"from_data","","Use storage in [Data] as backing store for pixmaps\' â€¦",303,[[["yuvapixmapinfo",6]],["option",4]]],[11,"from_external_memory","","Use passed in memory as backing store for pixmaps\' â€¦",303,[[["yuvapixmapinfo",6]],["option",4]]],[11,"from_external_pixmaps","","Wraps existing <code>Pixmap</code>s. The [YUVAPixmaps] will have no â€¦",303,[[["yuvainfo",6]],["option",4]]],[11,"yuva_info","","",303,[[],["yuvainfo",6]]],[11,"data_type","","",303,[[],["datatype",4]]],[11,"pixmaps_info","","",303,[[],["yuvapixmapinfo",6]]],[11,"num_planes","","Number of pixmap planes.",303,[[]]],[11,"planes","","Access the [Pixmap] planes.",303,[[]]],[11,"plane","","Get the ith [Pixmap] plane. <code>Pixmap</code> will be default â€¦",303,[[],["pixmap",6]]],[11,"append_int","skia_safe","",272,[[]]],[11,"append_float","","",272,[[]]],[11,"append_string","","",272,[[]]],[11,"append_float_array","","",272,[[]]],[11,"append_string_array","","",272,[[]]],[11,"append_int","skia_safe::pdf","",296,[[]]],[11,"append_float","","",296,[[]]],[11,"append_string","","",296,[[]]],[11,"append_float_array","","",296,[[]]],[11,"append_string_array","","",296,[[]]],[11,"new","","",256,[[]]],[11,"set_type_string","","",256,[[]]],[11,"type_string","","",256,[[]]],[11,"set_child_vector","","",256,[[["vec",3],["structureelementnode",3]]]],[11,"append_child","","",256,[[["structureelementnode",3]]]],[11,"child_vector","","",256,[[]]],[11,"set_node_id","","",256,[[]]],[11,"node_id","","",256,[[]]],[11,"attributes","","",256,[[],["attributelist",6]]],[11,"attributes_mut","","",256,[[],["attributelist",6]]],[11,"set_alt","","",256,[[]]],[11,"alt","","",256,[[]]],[11,"set_lang","","",256,[[]]],[11,"lang","","",256,[[]]],[18,"LastEnum","skia_safe::path_1d_path_effect","",142,null],[11,"path_1d","skia_safe","",274,[[["path",6],["scalar",6],["style",4]],[["option",4],["patheffect",6]]]],[11,"line_2d","","",274,[[["scalar",6],["matrix",3]],[["option",4],["patheffect",6]]]],[11,"path_2d","","",274,[[["matrix",3],["path",6]],["patheffect",6]]],[11,"alpha_threshold","","",274,[[["region",6],["scalar",6]],["option",4]]],[11,"arithmetic","","",274,[[],["option",4]]],[11,"new","skia_safe::arithmetic_image_filter","",143,[[]]],[11,"blur","skia_safe","",274,[[["scalar",6]],["option",4]]],[11,"blur_with_color_space","","",274,[[["scalar",6],["colorspace",6]],["option",4]]],[11,"blur","","",274,[[],["option",4]]],[11,"color_filter","","",274,[[],["option",4]]],[11,"new","","",272,[[]]],[11,"set_identity","","",272,[[]]],[11,"set_scale","","",272,[[]]],[11,"post_translate","","",272,[[]]],[11,"set_concat","","",272,[[["colormatrix",6]]]],[11,"pre_concat","","",272,[[["colormatrix",6]]]],[11,"post_concat","","",272,[[["colormatrix",6]]]],[11,"set_saturation","","",272,[[]]],[11,"set_row_major","","",272,[[]]],[11,"get_row_major","","",272,[[]]],[11,"new_lighting","","",274,[[],["option",4]]],[11,"compose","","",274,[[],["option",4]]],[11,"corner_path","","",274,[[["scalar",6]],["option",4]]],[11,"dash","","",274,[[["scalar",6]],["option",4]]],[11,"discrete","","",274,[[["scalar",6]],["option",4]]],[11,"displacement_map_effect","","",274,[[["scalar",6]],["option",4]]],[18,"Last","skia_safe::drop_shadow_image_filter","",144,null],[11,"drop_shadow","skia_safe","",274,[[["shadowmode",4]],["option",4]]],[11,"linear_gradient","","",274,[[["tilemode",4]],["option",4]]],[11,"radial_gradient","","",274,[[["scalar",6],["tilemode",4]],["option",4]]],[11,"two_point_conical_gradient","","",274,[[["scalar",6],["tilemode",4]],["option",4]]],[11,"sweep_gradient","","",274,[[["tilemode",4]],["option",4]]],[18,"INTERPOLATE_COLORS_IN_PREMUL","skia_safe::gradient_shader","",257,null],[11,"empty","","Returns an empty set of flags",257,[[],["flags",3]]],[11,"all","","Returns the set containing all flags.",257,[[],["flags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",257,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that â€¦",257,[[],[["option",4],["flags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any â€¦",257,[[],["flags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving allâ€¦",257,[[],["flags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",257,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",257,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦",257,[[["flags",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained â€¦",257,[[["flags",3]]]],[11,"insert","","Inserts the specified flags in-place.",257,[[["flags",3]]]],[11,"remove","","Removes the specified flags in-place.",257,[[["flags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",257,[[["flags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the â€¦",257,[[["flags",3]]]],[11,"len","","",145,[[]]],[11,"is_empty","","",145,[[]]],[18,"Last","skia_safe::high_contrast_config","",146,null],[11,"new","skia_safe::high_contrast_filter","",147,[[["scalar",6],["invertstyle",4]]]],[11,"is_valid","","",147,[[]]],[11,"high_contrast","skia_safe","",274,[[["highcontrastconfig",3]],["option",4]]],[18,"NO_CROP_RECT","skia_safe::image_filters","",258,null],[11,"from_image","skia_safe","",274,[[],["option",4]]],[11,"from_image_rect","","",274,[[["filterquality",4]],["option",4]]],[11,"as_filter","","",274,[[],[["option",4],["imagefilter",6]]]],[11,"into_filter","","",274,[[],[["option",4],["imagefilter",6]]]],[11,"as_filter_rect","","",274,[[["filterquality",4]],[["option",4],["imagefilter",6]]]],[11,"into_filter_rect","","",274,[[["filterquality",4]],[["option",4],["imagefilter",6]]]],[18,"STYLE","skia_safe::layer_draw_looper","",259,null],[18,"PATH_EFFECT","","",259,null],[18,"MASK_FILTER","","",259,null],[18,"SHADER","","",259,null],[18,"COLOR_FILTER","","",259,null],[18,"XFER_MODE","","",259,null],[11,"empty","","Returns an empty set of flags",259,[[],["bits",3]]],[11,"all","","Returns the set containing all flags.",259,[[],["bits",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",259,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that â€¦",259,[[],[["bits",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any â€¦",259,[[],["bits",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving allâ€¦",259,[[],["bits",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",259,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",259,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦",259,[[["bits",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained â€¦",259,[[["bits",3]]]],[11,"insert","","Inserts the specified flags in-place.",259,[[["bits",3]]]],[11,"remove","","Removes the specified flags in-place.",259,[[["bits",3]]]],[11,"toggle","","Toggles the specified flags in-place.",259,[[["bits",3]]]],[11,"set","","Inserts or removes the specified flags depending on the â€¦",259,[[["bits",3]]]],[11,"add_layer","skia_safe","",272,[[["layerinfo",3]],["handle",3]]],[11,"add_layer_offset","","",272,[[]]],[11,"add_layer_on_top","","",272,[[["layerinfo",3]],["handle",3]]],[11,"detach","","",272,[[],["drawlooper",6]]],[11,"add_layer","skia_safe::layer_draw_looper","",297,[[["layerinfo",3]],["handle",3]]],[11,"add_layer_offset","","",297,[[]]],[11,"add_layer_on_top","","",297,[[["layerinfo",3]],["handle",3]]],[11,"detach","","",297,[[],["drawlooper",6]]],[11,"distant_lit_diffuse_lighting","skia_safe","",274,[[["scalar",6]],["option",4]]],[11,"point_lit_diffuse_lighting","","",274,[[["scalar",6]],["option",4]]],[11,"spot_lit_diffuse_lighting","","",274,[[["scalar",6]],["option",4]]],[11,"distant_lit_specular_lighting","","",274,[[["scalar",6]],["option",4]]],[11,"point_lit_specular_lighting","","",274,[[["scalar",6]],["option",4]]],[11,"spot_lit_specular_lighting","","",274,[[["scalar",6]],["option",4]]],[11,"luma","","",274,[[],["colorfilter",6]]],[11,"magnifier","","",274,[[["scalar",6]],["option",4]]],[11,"matrix_convolution","","",274,[[["scalar",6],["tilemode",4]],["option",4]]],[11,"merge","","",274,[[],["option",4]]],[11,"dilate","","",274,[[],["option",4]]],[11,"erode","","",274,[[],["option",4]]],[11,"offset","","",274,[[],["option",4]]],[11,"merge","","",274,[[["pathop",4]],["patheffect",6]]],[11,"matrix_translate","","",274,[[],[["option",4],["patheffect",6]]]],[11,"matrix","","",274,[[["matrix",3]],[["option",4],["patheffect",6]]]],[11,"stroke","","",274,[[["scalar",6],["join",4],["cap",4]],[["option",4],["patheffect",6]]]],[11,"overdraw","","",274,[[],["colorfilter",6]]],[11,"from_paint","","",274,[[["paint",6]],["option",4]]],[11,"as_image_filter","","",272,[[],[["option",4],["imagefilter",6]]]],[11,"fractal_perlin_noise","","",274,[[["scalar",6]],["option",4]]],[11,"turbulence_perlin_noise","","",274,[[["scalar",6]],["option",4]]],[11,"from_picture","","",274,[[],["option",4]]],[11,"as_image_filter","","",274,[[],[["option",4],["imagefilter",6]]]],[11,"into_image_filter","","",274,[[],[["option",4],["imagefilter",6]]]],[18,"ARRAY","skia_safe::runtime_effect::uniform","",260,null],[18,"MARKER","","",260,null],[18,"MARKER_NORMALS","","",260,null],[18,"SRGB_UNPREMUL","","",260,null],[11,"empty","","Returns an empty set of flags",260,[[],["flags",3]]],[11,"all","","Returns the set containing all flags.",260,[[],["flags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",260,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that â€¦",260,[[],[["option",4],["flags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any â€¦",260,[[],["flags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving allâ€¦",260,[[],["flags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",260,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",260,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦",260,[[["flags",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained â€¦",260,[[["flags",3]]]],[11,"insert","","Inserts the specified flags in-place.",260,[[["flags",3]]]],[11,"remove","","Removes the specified flags in-place.",260,[[["flags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",260,[[["flags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the â€¦",260,[[["flags",3]]]],[11,"name","skia_safe","",272,[[]]],[11,"offset","","",272,[[]]],[11,"ty","","",272,[[],["type",4]]],[11,"count","","",272,[[]]],[11,"flags","","",272,[[],["flags",3]]],[11,"marker","","",272,[[]]],[11,"gpu_type","","",272,[[],["sltype",4]]],[11,"is_array","","",272,[[]]],[11,"size_in_bytes","","",272,[[]]],[11,"name","skia_safe::runtime_effect","",304,[[]]],[11,"offset","","",304,[[]]],[11,"ty","","",304,[[],["type",4]]],[11,"count","","",304,[[]]],[11,"flags","","",304,[[],["flags",3]]],[11,"marker","","",304,[[]]],[11,"gpu_type","","",304,[[],["sltype",4]]],[11,"is_array","","",304,[[]]],[11,"size_in_bytes","","",304,[[]]],[11,"name","skia_safe","",272,[[]]],[11,"width","","",272,[[]]],[11,"name","skia_safe::runtime_effect","",305,[[]]],[11,"width","","",305,[[]]],[11,"make_shader","skia_safe","",274,[[],[["option",4],["shader",6]]]],[11,"make_color_filter_with_children","","",274,[[]]],[11,"make_color_filter","","",274,[[],[["option",4],["colorfilter",6]]]],[11,"source","","",274,[[]]],[11,"index","","",274,[[]]],[11,"input_size","","",274,[[]]],[11,"uniform_size","","",274,[[]]],[11,"inputs","","",274,[[]]],[11,"uniforms","","",274,[[]]],[11,"children","","",274,[[]]],[11,"varyings","","",274,[[]]],[11,"find_input","","",274,[[],[["option",4],["uniform",6]]]],[11,"find_uniform","","",274,[[],[["option",4],["uniform",6]]]],[11,"find_child","","",274,[[],["option",4]]],[11,"make_shader","skia_safe::runtime_effect","",306,[[],[["option",4],["shader",6]]]],[11,"make_color_filter_with_children","","",306,[[]]],[11,"make_color_filter","","",306,[[],[["option",4],["colorfilter",6]]]],[11,"source","","",306,[[]]],[11,"index","","",306,[[]]],[11,"input_size","","",306,[[]]],[11,"uniform_size","","",306,[[]]],[11,"inputs","","",306,[[]]],[11,"uniforms","","",306,[[]]],[11,"children","","",306,[[]]],[11,"varyings","","",306,[[]]],[11,"find_input","","",306,[[],[["option",4],["uniform",6]]]],[11,"find_uniform","","",306,[[],[["option",4],["uniform",6]]]],[11,"find_child","","",306,[[],["option",4]]],[11,"from_shader","skia_safe","",274,[[],["maskfilter",6]]],[11,"from_table","","",274,[[]]],[11,"from_argb","","",274,[[["option",4]]]],[11,"table","","",274,[[],["maskfilter",6]]],[11,"gamma","","",274,[[["scalar",6]],["maskfilter",6]]],[11,"clip","","",274,[[],["maskfilter",6]]],[11,"tile","","",274,[[],["option",4]]],[11,"trim","","",274,[[["scalar",6]],[["option",4],["patheffect",6]]]],[11,"xfer_mode","","",274,[[["blendmode",4]],["option",4]]],[11,"applyOverrides","skia_safe::gpu","",26,[[]]],[11,"new","","",26,[[],["grdriverbugworkarounds",3]]],[11,"new1","","",26,[[],["grdriverbugworkarounds",3]]],[18,"OpenGL_GrBackend","","",27,null],[11,"new","skia_safe","",272,[[],["backenddrawableinfo",6]]],[11,"from_vk","","",272,[[["drawableinfo",3]],["backenddrawableinfo",6]]],[11,"is_valid","","",272,[[]]],[11,"backend","","",272,[[],["backendapi",4]]],[11,"get_vk_drawable_info","","",272,[[],[["option",4],["drawableinfo",3]]]],[11,"new","","",272,[[]]],[11,"new_gl","","",272,[[["enum",6]]]],[11,"new_vulkan","","",272,[[["format",4]]]],[11,"new_vulkan_ycbcr","","",272,[[["ycbcrconversioninfo",3]]]],[11,"new_dxgi","","",272,[[["dxgi_format",6]]]],[11,"backend","","",272,[[],["backendapi",4]]],[11,"channel_mask","","",272,[[]]],[11,"as_gl_format","","",272,[[],["format",4]]],[11,"as_vk_format","","",272,[[],[["format",4],["option",4]]]],[11,"as_dxgi_format","","",272,[[],[["option",4],["dxgi_format",6]]]],[11,"to_texture_2d","","",272,[[]]],[11,"is_valid","","",272,[[]]],[11,"new_gl","","",272,[[["mipmapped",4],["textureinfo",3]]]],[11,"new_vulkan","","",272,[[["imageinfo",3]]]],[11,"new_d3d","","",272,[[["textureresourceinfo",3]]]],[11,"dimensions","","",272,[[],["isize",3]]],[11,"width","","",272,[[]]],[11,"height","","",272,[[]]],[11,"has_mip_maps","","",272,[[]]],[11,"has_mipmaps","","",272,[[]]],[11,"backend","","",272,[[],["backendapi",4]]],[11,"gl_texture_info","","",272,[[],[["option",4],["textureinfo",3]]]],[11,"gl_texture_parameters_modified","","",272,[[]]],[11,"vulkan_image_info","","",272,[[],[["option",4],["imageinfo",3]]]],[11,"set_vulkan_image_layout","","",272,[[["imagelayout",4]]]],[11,"d3d_texture_resource_info","","",272,[[],[["textureresourceinfo",3],["option",4]]]],[11,"set_d3d_resource_state","","",272,[[["resourcestateenum",6]]]],[11,"backend_format","","",272,[[],["backendformat",6]]],[11,"is_protected","","",272,[[]]],[11,"is_valid","","",272,[[]]],[11,"is_same_texture","","",272,[[["backendtexture",6]]]],[11,"new_gl","skia_safe::gpu","",307,[[["mipmapped",4],["textureinfo",3]]]],[11,"new_vulkan","","",307,[[["imageinfo",3]]]],[11,"new_d3d","","",307,[[["textureresourceinfo",3]]]],[11,"dimensions","","",307,[[],["isize",3]]],[11,"width","","",307,[[]]],[11,"height","","",307,[[]]],[11,"has_mip_maps","","",307,[[]]],[11,"has_mipmaps","","",307,[[]]],[11,"backend","","",307,[[],["backendapi",4]]],[11,"gl_texture_info","","",307,[[],[["option",4],["textureinfo",3]]]],[11,"gl_texture_parameters_modified","","",307,[[]]],[11,"vulkan_image_info","","",307,[[],[["option",4],["imageinfo",3]]]],[11,"set_vulkan_image_layout","","",307,[[["imagelayout",4]]]],[11,"d3d_texture_resource_info","","",307,[[],[["textureresourceinfo",3],["option",4]]]],[11,"set_d3d_resource_state","","",307,[[["resourcestateenum",6]]]],[11,"backend_format","","",307,[[],["backendformat",6]]],[11,"is_protected","","",307,[[]]],[11,"is_valid","","",307,[[]]],[11,"is_same_texture","","",307,[[["backendtexture",6]]]],[11,"new_gl","skia_safe","",272,[[["framebufferinfo",3]]]],[11,"new_vulkan","","",272,[[["imageinfo",3]]]],[11,"new_d3d","","",272,[[["textureresourceinfo",3]]]],[11,"dimensions","","",272,[[],["isize",3]]],[11,"width","","",272,[[]]],[11,"height","","",272,[[]]],[11,"sample_count","","",272,[[]]],[11,"stencil_bits","","",272,[[]]],[11,"backend","","",272,[[],["backendapi",4]]],[11,"is_framebuffer_only","","",272,[[]]],[11,"gl_framebuffer_info","","",272,[[],[["option",4],["framebufferinfo",3]]]],[11,"vulkan_image_info","","",272,[[],[["option",4],["imageinfo",3]]]],[11,"set_vulkan_image_layout","","",272,[[["imagelayout",4]]]],[11,"d3d_texture_resource_info","","",272,[[],[["textureresourceinfo",3],["option",4]]]],[11,"set_d3d_resource_state","","",272,[[["resourcestateenum",6]]]],[11,"backend_format","","",272,[[],["backendformat",6]]],[11,"set_mutable_stat","","",272,[[["backendsurfacemutablestate",6]]]],[11,"is_protected","","",272,[[]]],[11,"is_valid","","",272,[[]]],[11,"new_gl","skia_safe::gpu","",308,[[["framebufferinfo",3]]]],[11,"new_vulkan","","",308,[[["imageinfo",3]]]],[11,"new_d3d","","",308,[[["textureresourceinfo",3]]]],[11,"dimensions","","",308,[[],["isize",3]]],[11,"width","","",308,[[]]],[11,"height","","",308,[[]]],[11,"sample_count","","",308,[[]]],[11,"stencil_bits","","",308,[[]]],[11,"backend","","",308,[[],["backendapi",4]]],[11,"is_framebuffer_only","","",308,[[]]],[11,"gl_framebuffer_info","","",308,[[],[["option",4],["framebufferinfo",3]]]],[11,"vulkan_image_info","","",308,[[],[["option",4],["imageinfo",3]]]],[11,"set_vulkan_image_layout","","",308,[[["imagelayout",4]]]],[11,"d3d_texture_resource_info","","",308,[[],[["textureresourceinfo",3],["option",4]]]],[11,"set_d3d_resource_state","","",308,[[["resourcestateenum",6]]]],[11,"backend_format","","",308,[[],["backendformat",6]]],[11,"set_mutable_stat","","",308,[[["backendsurfacemutablestate",6]]]],[11,"is_protected","","",308,[[]]],[11,"is_valid","","",308,[[]]],[11,"new_vk","skia_safe","",272,[[["imagelayout",4]]]],[11,"new_vk","skia_safe::gpu","",298,[[["imagelayout",4]]]],[11,"from_raw","skia_safe::gpu::d3d","Creates a <code>ComPtr</code> to wrap a raw pointer. It takes â€¦",261,[[],["comptr",3]]],[11,"up","","Casts up the inheritance chain",261,[[],["comptr",3]]],[11,"into_raw","","Extracts the raw pointer. You are now responsible for â€¦",261,[[]]],[11,"cast","","Performs QueryInterface fun.",261,[[],[["result",4],["comptr",3]]]],[11,"as_raw","","Obtains the raw pointer without transferring ownership. â€¦",261,[[]]],[11,"UpdateTileMappings","","",36,[[]]],[11,"CopyTileMappings","","",36,[[]]],[11,"ExecuteCommandLists","","",36,[[]]],[11,"SetMarker","","",36,[[]]],[11,"BeginEvent","","",36,[[]]],[11,"EndEvent","","",36,[[]]],[11,"Signal","","",36,[[]]],[11,"Wait","","",36,[[]]],[11,"GetTimestampFrequency","","",36,[[]]],[11,"GetClockCalibration","","",36,[[]]],[11,"GetDesc","","",36,[[],["d3d12_command_queue_desc",3]]],[11,"GetNodeCount","","",37,[[]]],[11,"CreateCommandQueue","","",37,[[]]],[11,"CreateCommandAllocator","","",37,[[]]],[11,"CreateGraphicsPipelineState","","",37,[[]]],[11,"CreateComputePipelineState","","",37,[[]]],[11,"CreateCommandList","","",37,[[]]],[11,"CheckFeatureSupport","","",37,[[]]],[11,"CreateDescriptorHeap","","",37,[[]]],[11,"GetDescriptorHandleIncrementSize","","",37,[[]]],[11,"CreateRootSignature","","",37,[[]]],[11,"CreateConstantBufferView","","",37,[[["d3d12_cpu_descriptor_handle",3]]]],[11,"CreateShaderResourceView","","",37,[[["d3d12_cpu_descriptor_handle",3]]]],[11,"CreateUnorderedAccessView","","",37,[[["d3d12_cpu_descriptor_handle",3]]]],[11,"CreateRenderTargetView","","",37,[[["d3d12_cpu_descriptor_handle",3]]]],[11,"CreateDepthStencilView","","",37,[[["d3d12_cpu_descriptor_handle",3]]]],[11,"CreateSampler","","",37,[[["d3d12_cpu_descriptor_handle",3]]]],[11,"CopyDescriptors","","",37,[[]]],[11,"CopyDescriptorsSimple","","",37,[[["d3d12_cpu_descriptor_handle",3]]]],[11,"GetResourceAllocationInfo","","",37,[[],["d3d12_resource_allocation_info",3]]],[11,"GetCustomHeapProperties","","",37,[[],["d3d12_heap_properties",3]]],[11,"CreateCommittedResource","","",37,[[]]],[11,"CreateHeap","","",37,[[]]],[11,"CreatePlacedResource","","",37,[[]]],[11,"CreateReservedResource","","",37,[[]]],[11,"CreateSharedHandle","","",37,[[]]],[11,"OpenSharedHandle","","",37,[[]]],[11,"OpenSharedHandleByName","","",37,[[]]],[11,"MakeResident","","",37,[[]]],[11,"Evict","","",37,[[]]],[11,"CreateFence","","",37,[[]]],[11,"GetDeviceRemovedReason","","",37,[[]]],[11,"GetCopyableFootprints","","",37,[[]]],[11,"CreateQueryHeap","","",37,[[]]],[11,"SetStablePowerState","","",37,[[]]],[11,"CreateCommandSignature","","",37,[[]]],[11,"GetResourceTiling","","",37,[[]]],[11,"GetAdapterLuid","","",37,[[],["luid",3]]],[11,"Map","","",38,[[]]],[11,"Unmap","","",38,[[]]],[11,"GetDesc","","",38,[[],["d3d12_resource_desc",3]]],[11,"GetGPUVirtualAddress","","",38,[[]]],[11,"WriteToSubresource","","",38,[[]]],[11,"ReadFromSubresource","","",38,[[]]],[11,"GetHeapProperties","","",38,[[]]],[11,"GetDesc1","","",39,[[]]],[11,"from_resource","","",41,[[["id3d12resource",3],["cp",3]]]],[11,"with_state","","",41,[[["d3d12_resource_states",6]]]],[11,"new_gl","skia_safe","",274,[[],[["option",4],["directcontext",6]]]],[11,"new_vulkan","","",274,[[["backendcontext",3]],[["option",4],["directcontext",6]]]],[11,"new_d3d","","",274,[[["backendcontext",3]],[["option",4],["directcontext",6]]]],[11,"reset","","",274,[[["option",4]]]],[11,"reset_gl_texture_bindings","","",274,[[]]],[11,"abandon","","",274,[[]]],[11,"oomed","","",274,[[]]],[11,"release_resources_and_abandon","","",274,[[]]],[11,"resource_cache_limits","","",274,[[],["resourcecachelimits",3]]],[11,"resource_cache_limit","","",274,[[]]],[11,"resource_cache_usage","","",274,[[],["resourcecacheusage",3]]],[11,"resource_cache_purgeable_bytes","","",274,[[]]],[11,"set_resource_cache_limits","","",274,[[["resourcecachelimits",3]]]],[11,"set_resource_cache_limit","","",274,[[]]],[11,"free_gpu_resources","","",274,[[]]],[11,"perform_deferred_cleanup","","",274,[[["duration",3]]]],[11,"purge_unlocked_resources","","",274,[[["option",4]]]],[11,"flush_and_submit","","",274,[[]]],[11,"flush_submit_and_sync_cpu","","",274,[[]]],[11,"flush_with_info","","",274,[[["flushinfo",3]],["semaphoressubmitted",4]]],[11,"flush","","",274,[[],["semaphoressubmitted",4]]],[11,"submit","","",274,[[]]],[11,"check_async_work_completion","","",274,[[]]],[11,"supports_distance_field_text","","",274,[[]]],[11,"store_vk_pipeline_cache_data","","",274,[[]]],[11,"compute_image_size","","",274,[[["mipmapped",4]]]],[11,"compressed_backend_format","","",274,[[["compressiontype",4]],["backendformat",6]]],[11,"set_backend_texture_state","","",274,[[["backendtexture",6],["backendsurfacemutablestate",6]]]],[11,"set_backend_texture_state_and_return_previous","","",274,[[["backendtexture",6],["backendsurfacemutablestate",6]],[["backendsurfacemutablestate",6],["option",4]]]],[11,"set_backend_render_target_state","","",274,[[["backendsurfacemutablestate",6],["backendrendertarget",6]]]],[11,"set_backend_render_target_state_and_return_previous","","",274,[[["backendsurfacemutablestate",6],["backendrendertarget",6]],[["backendsurfacemutablestate",6],["option",4]]]],[11,"precompile_shader","","",274,[[["data",6]]]],[18,"LastColorFormat","skia_safe::gpu::gl","",43,null],[18,"Last","","",43,null],[11,"is_initialized","skia_safe","",272,[[]]],[11,"has","","",272,[[]]],[11,"remove","","",272,[[]]],[11,"add","","",272,[[]]],[11,"reset","","",272,[[]]],[11,"new_native","","",274,[[],[["option",4],["interface",6]]]],[11,"new_load_with","","",274,[[],[["option",4],["interface",6]]]],[11,"validate","","",274,[[]]],[11,"extensions","","",274,[[],["extensions",6]]],[11,"extensions_mut","","",274,[[],["extensions",6]]],[11,"has_extension","","",274,[[]]],[11,"from_target_and_id","skia_safe::gpu::gl","",45,[[["enum",6]]]],[11,"from_fboid","","",46,[[["uint",6]]]],[18,"RENDER_TARGET","","",262,null],[18,"TEXTURE_BINDING","","",262,null],[18,"VIEW","","",262,null],[18,"BLEND","","",262,null],[18,"MSAA_ENABLE","","",262,null],[18,"VERTEX","","",262,null],[18,"STENCIL","","",262,null],[18,"PIXEL_STORE","","",262,null],[18,"PROGRAM","","",262,null],[18,"FIXED_FUNCTION","","",262,null],[18,"MISC","","",262,null],[18,"PATH_RENDERING","","",262,null],[11,"empty","","Returns an empty set of flags",262,[[],["backendstate",3]]],[11,"all","","Returns the set containing all flags.",262,[[],["backendstate",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",262,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that â€¦",262,[[],[["option",4],["backendstate",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any â€¦",262,[[],["backendstate",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving allâ€¦",262,[[],["backendstate",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",262,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",262,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦",262,[[["backendstate",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained â€¦",262,[[["backendstate",3]]]],[11,"insert","","Inserts the specified flags in-place.",262,[[["backendstate",3]]]],[11,"remove","","Removes the specified flags in-place.",262,[[["backendstate",3]]]],[11,"toggle","","Toggles the specified flags in-place.",262,[[["backendstate",3]]]],[11,"set","","Inserts or removes the specified flags depending on the â€¦",262,[[["backendstate",3]]]],[11,"as_direct_context","skia_safe","",274,[[],[["option",4],["directcontext",6]]]],[11,"backend","","",274,[[],["backendapi",4]]],[11,"default_backend_format","","",274,[[["colortype",4],["renderable",4]],["backendformat",6]]],[11,"compressed_backend_format","","",274,[[["compressiontype",4]],["backendformat",6]]],[11,"abandoned","","",274,[[]]],[11,"color_type_supported_as_surface","","",274,[[["colortype",4]]]],[11,"max_texture_size","","",274,[[]]],[11,"max_render_target_size","","",274,[[]]],[11,"color_type_supported_as_image","","",274,[[["colortype",4]]]],[11,"max_surface_sample_count_for_color_type","","",274,[[["colortype",4]]]],[18,"COSITED_EVEN_KHR","skia_safe::gpu::vk","",47,null],[18,"MIDPOINT_KHR","","",47,null],[18,"BEGIN_RANGE","","",47,null],[18,"END_RANGE","","",47,null],[18,"BEGIN_RANGE","","",49,null],[18,"END_RANGE","","",49,null],[18,"G8B8G8R8_422_UNORM_KHR","","",50,null],[18,"B8G8R8G8_422_UNORM_KHR","","",50,null],[18,"G8_B8_R8_3PLANE_420_UNORM_KHR","","",50,null],[18,"G8_B8R8_2PLANE_420_UNORM_KHR","","",50,null],[18,"G8_B8_R8_3PLANE_422_UNORM_KHR","","",50,null],[18,"G8_B8R8_2PLANE_422_UNORM_KHR","","",50,null],[18,"G8_B8_R8_3PLANE_444_UNORM_KHR","","",50,null],[18,"R10X6_UNORM_PACK16_KHR","","",50,null],[18,"R10X6G10X6_UNORM_2PACK16_KHR","","",50,null],[18,"R10X6G10X6B10X6A10X6_UNORM_4PACK16_KHR","","",50,null],[18,"G10X6B10X6G10X6R10X6_422_UNORM_4PACK16_KHR","","",50,null],[18,"B10X6G10X6R10X6G10X6_422_UNORM_4PACK16_KHR","","",50,null],[18,"G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16_KHR","","",50,null],[18,"G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16_KHR","","",50,null],[18,"G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16_KHR","","",50,null],[18,"G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16_KHR","","",50,null],[18,"G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16_KHR","","",50,null],[18,"R12X4_UNORM_PACK16_KHR","","",50,null],[18,"R12X4G12X4_UNORM_2PACK16_KHR","","",50,null],[18,"R12X4G12X4B12X4A12X4_UNORM_4PACK16_KHR","","",50,null],[18,"G12X4B12X4G12X4R12X4_422_UNORM_4PACK16_KHR","","",50,null],[18,"B12X4G12X4R12X4G12X4_422_UNORM_4PACK16_KHR","","",50,null],[18,"G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16_KHR","","",50,null],[18,"G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16_KHR","","",50,null],[18,"G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16_KHR","","",50,null],[18,"G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16_KHR","","",50,null],[18,"G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16_KHR","","",50,null],[18,"G16B16G16R16_422_UNORM_KHR","","",50,null],[18,"B16G16R16G16_422_UNORM_KHR","","",50,null],[18,"G16_B16_R16_3PLANE_420_UNORM_KHR","","",50,null],[18,"G16_B16R16_2PLANE_420_UNORM_KHR","","",50,null],[18,"G16_B16_R16_3PLANE_422_UNORM_KHR","","",50,null],[18,"G16_B16R16_2PLANE_422_UNORM_KHR","","",50,null],[18,"G16_B16_R16_3PLANE_444_UNORM_KHR","","",50,null],[18,"BEGIN_RANGE","","",50,null],[18,"END_RANGE","","",50,null],[18,"DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL_KHR","","",51,null],[18,"DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL_KHR","","",51,null],[18,"BEGIN_RANGE","","",51,null],[18,"END_RANGE","","",51,null],[18,"BEGIN_RANGE","","",52,null],[18,"END_RANGE","","",52,null],[18,"RGB_IDENTITY_KHR","","",57,null],[18,"YCBCR_IDENTITY_KHR","","",57,null],[18,"YCBCR_709_KHR","","",57,null],[18,"YCBCR_601_KHR","","",57,null],[18,"YCBCR_2020_KHR","","",57,null],[18,"BEGIN_RANGE","","",57,null],[18,"END_RANGE","","",57,null],[18,"ITU_FULL_KHR","","",58,null],[18,"ITU_NARROW_KHR","","",58,null],[18,"BEGIN_RANGE","","",58,null],[18,"END_RANGE","","",58,null],[18,"BEGIN_RANGE","","",59,null],[18,"END_RANGE","","",59,null],[18,"EXT_DEBUG_REPORT","","",264,null],[18,"NV_GLSL_SHADER","","",264,null],[18,"KHR_SURFACE","","",264,null],[18,"KHR_SWAPCHAIN","","",264,null],[18,"KHR_WIN32_SURFACE","","",264,null],[18,"KHR_ANDROID_SURFACE","","",264,null],[18,"KHR_XCB_SURFACE","","",264,null],[11,"empty","","Returns an empty set of flags",264,[[],["extensionflags",3]]],[11,"all","","Returns the set containing all flags.",264,[[],["extensionflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",264,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that â€¦",264,[[],[["extensionflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any â€¦",264,[[],["extensionflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving allâ€¦",264,[[],["extensionflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",264,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",264,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦",264,[[["extensionflags",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained â€¦",264,[[["extensionflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",264,[[["extensionflags",3]]]],[11,"remove","","Removes the specified flags in-place.",264,[[["extensionflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",264,[[["extensionflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the â€¦",264,[[["extensionflags",3]]]],[18,"GEOMETRY_SHADER","","",265,null],[18,"DUAL_SRC_BLEND","","",265,null],[18,"SAMPLE_RATE_SHADING","","",265,null],[11,"empty","","Returns an empty set of flags",265,[[],["featureflags",3]]],[11,"all","","Returns the set containing all flags.",265,[[],["featureflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",265,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that â€¦",265,[[],[["option",4],["featureflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any â€¦",265,[[],["featureflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving allâ€¦",265,[[],["featureflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",265,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",265,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦",265,[[["featureflags",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained â€¦",265,[[["featureflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",265,[[["featureflags",3]]]],[11,"remove","","Removes the specified flags in-place.",265,[[["featureflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",265,[[["featureflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the â€¦",265,[[["featureflags",3]]]],[11,"new","","Safety<code>instance</code>, <code>physical_device</code>, <code>device</code>, and <code>queue</code> must â€¦",266,[[["instance",6],["device",6],["physicaldevice",6]],["backendcontext",3]]],[11,"new_with_extensions","","Safety<code>instance</code>, <code>physical_device</code>, <code>device</code>, and <code>queue</code> must â€¦",266,[[["instance",6],["device",6],["physicaldevice",6]],["backendcontext",3]]],[11,"set_protected_context","","",266,[[["protected",4]]]],[11,"set_max_api_version","","",266,[[]]],[18,"NONCOHERENT","","",267,null],[18,"MAPPABLE","","",267,null],[11,"empty","","Returns an empty set of flags",267,[[],["allocflag",3]]],[11,"all","","Returns the set containing all flags.",267,[[],["allocflag",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",267,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that â€¦",267,[[],[["option",4],["allocflag",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any â€¦",267,[[],["allocflag",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving allâ€¦",267,[[],["allocflag",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",267,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",267,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦",267,[[["allocflag",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained â€¦",267,[[["allocflag",3]]]],[11,"insert","","Inserts the specified flags in-place.",267,[[["allocflag",3]]]],[11,"remove","","Removes the specified flags in-place.",267,[[["allocflag",3]]]],[11,"toggle","","Toggles the specified flags in-place.",267,[[["allocflag",3]]]],[11,"set","","Inserts or removes the specified flags depending on the â€¦",267,[[["allocflag",3]]]],[11,"from_device_memory","","SafetyThe memory\'s lifetime is expected to outlive the â€¦",60,[[["devicememory",6],["devicesize",6],["allocflag",3]],["alloc",3]]],[11,"new_with_format","","",61,[[["bool32",6],["formatfeatureflags",6],["samplerycbcrrange",4],["chromalocation",4],["format",4],["samplerycbcrmodelconversion",4],["filter",4]],["ycbcrconversioninfo",3]]],[11,"new","","",61,[[["bool32",6],["formatfeatureflags",6],["chromalocation",4],["samplerycbcrrange",4],["filter",4],["samplerycbcrmodelconversion",4]],["ycbcrconversioninfo",3]]],[11,"is_valid","","",61,[[]]],[11,"new","","SafetyThe Vulkan <code>image</code> and <code>alloc</code> must outlive the â€¦",62,[[["image",6],["imagetiling",4],["imagelayout",4],["alloc",3],["format",4]]]],[11,"from_info","","SafetyThe Vulkan <code>info.image</code> and <code>info.alloc</code> must outlive â€¦",62,[[["imageinfo",3],["imagelayout",4]]]],[11,"from_info_with_queue_index","","SafetyThe Vulkan <code>info.image</code> and <code>info.alloc</code> must outlive â€¦",62,[[["imageinfo",3],["imagelayout",4]]]],[11,"name","","SafetyThe referred raw <code>name</code> strings must outlive the â€¦",63,[[],["cstr",3]]],[18,"MAX_PLANES","skia_safe","",272,null],[11,"new","","Initializes a [YUVABackendTextureInfo] to describe a set â€¦",272,[[["yuvainfo",6],["surfaceorigin",4],["mipmapped",4]],["option",4]]],[11,"yuva_info","","",272,[[],["yuvainfo",6]]],[11,"yuv_color_space","","",272,[[],["yuvcolorspace",4]]],[11,"mipmapped","","",272,[[],["mipmapped",4]]],[11,"texture_origin","","",272,[[],["surfaceorigin",4]]],[11,"num_planes","","The number of [crate::Pixmap] planes.",272,[[]]],[11,"plane_format","","Format of the ith plane, or [None] if i >= [â€¦",272,[[],[["option",4],["backendformat",6]]]],[18,"MAX_PLANES","skia_safe::gpu","",309,null],[11,"new","","Initializes a [YUVABackendTextureInfo] to describe a set â€¦",309,[[["yuvainfo",6],["surfaceorigin",4],["mipmapped",4]],["option",4]]],[11,"yuva_info","","",309,[[],["yuvainfo",6]]],[11,"yuv_color_space","","",309,[[],["yuvcolorspace",4]]],[11,"mipmapped","","",309,[[],["mipmapped",4]]],[11,"texture_origin","","",309,[[],["surfaceorigin",4]]],[11,"num_planes","","The number of [crate::Pixmap] planes.",309,[[]]],[11,"plane_format","","Format of the ith plane, or [None] if i >= [â€¦",309,[[],[["option",4],["backendformat",6]]]],[11,"new","skia_safe","",272,[[["yuvainfo",6],["surfaceorigin",4]],["option",4]]],[11,"textures","","",272,[[]]],[11,"texture","","",272,[[],[["option",4],["backendtexture",6]]]],[11,"yuva_info","","",272,[[],["yuvainfo",6]]],[11,"num_planes","","",272,[[]]],[11,"texture_origin","","",272,[[],["surfaceorigin",4]]],[11,"new","skia_safe::gpu","",310,[[["yuvainfo",6],["surfaceorigin",4]],["option",4]]],[11,"textures","","",310,[[]]],[11,"texture","","",310,[[],[["option",4],["backendtexture",6]]]],[11,"yuva_info","","",310,[[],["yuvainfo",6]]],[11,"num_planes","","",310,[[]]],[11,"texture_origin","","",310,[[],["surfaceorigin",4]]],[11,"new","skia_safe","",272,[[]]],[11,"from_bytes","","",272,[[]]],[11,"write","","",272,[[]]],[11,"detach_as_data","","",272,[[],["data",6]]],[11,"detach_as_stream","","",272,[[],[["stream",3],["skstreamasset",3]]]],[11,"from_str","","",272,[[],[["handle",3],["skstring",3]]]],[11,"as_str","","",272,[[]]],[11,"new","","Constructs a native Strings array from a slice of â€¦",272,[[["vec",3],["handle",3]]]],[11,"is_empty","","",272,[[]]],[11,"len","","",272,[[]]],[11,"new","","",274,[[]]],[11,"font_managers_count","","",274,[[]]],[11,"set_asset_font_manager","","",274,[[]]],[11,"set_dynamic_font_manager","","",274,[[]]],[11,"set_test_font_manager","","",274,[[]]],[11,"set_default_font_manager","","",274,[[]]],[11,"fallback_manager","","",274,[[],[["option",4],["fontmgr",6]]]],[11,"find_typefaces","","",274,[[["fontstyle",3]],[["typeface",6],["vec",3]]]],[11,"default_fallback_char","","",274,[[["fontstyle",3],["unichar",6]],[["option",4],["typeface",6]]]],[11,"default_fallback","","",274,[[],[["option",4],["typeface",6]]]],[11,"disable_font_fallback","","",274,[[]]],[11,"enable_font_fallback","","",274,[[]]],[11,"font_fallback_enabled","","",274,[[]]],[11,"paragraph_cache","","",274,[[],["paragraphcache",6]]],[11,"paragraph_cache_mut","","",274,[[],["paragraphcache",6]]],[11,"clear_caches","","",274,[[]]],[11,"new","","",272,[[]]],[11,"into_vec","","",272,[[],[["typeface",6],["vec",3]]]],[11,"new","skia_safe::textlayout","",175,[[["textstyle",6]]]],[11,"get_style_metrics_count","","Returns the number of style metrics in the given index â€¦",176,[[["range",3]]]],[11,"get_style_metrics","","Returns indices and references to style metrics in the â€¦",176,[[["range",3]],["vec",3]]],[11,"max_width","skia_safe","",273,[[],["scalar",6]]],[11,"height","","",273,[[],["scalar",6]]],[11,"min_intrinsic_width","","",273,[[],["scalar",6]]],[11,"max_intrinsic_width","","",273,[[],["scalar",6]]],[11,"alphabetic_baseline","","",273,[[],["scalar",6]]],[11,"ideographic_baseline","","",273,[[],["scalar",6]]],[11,"longest_line","","",273,[[],["scalar",6]]],[11,"did_exceed_max_lines","","",273,[[]]],[11,"layout","","",273,[[["scalar",6]]]],[11,"paint","","",273,[[["canvas",3]]]],[11,"get_rects_for_range","","",273,[[["rectheightstyle",4],["rectwidthstyle",4],["range",3]],["textboxes",6]]],[11,"get_rects_for_placeholders","","",273,[[],["textboxes",6]]],[11,"get_glyph_position_at_coordinate","","",273,[[],["positionwithaffinity",3]]],[11,"get_word_boundary","","",273,[[],["range",3]]],[11,"get_line_metrics","","",273,[[],["linemetricsvector",6]]],[11,"line_number","","",273,[[]]],[11,"mark_dirty","","",273,[[]]],[11,"iter","","",272,[[]]],[11,"as_slice","","",272,[[]]],[11,"iter","","",275,[[]]],[11,"as_slice","","",275,[[]]],[11,"push_style","","",273,[[["textstyle",6]]]],[11,"pop","","",273,[[]]],[11,"peek_style","","",273,[[],["textstyle",6]]],[11,"add_text","","",273,[[]]],[11,"add_placeholder","","",273,[[["placeholderstyle",3]]]],[11,"set_paragraph_style","","",273,[[["paragraphstyle",6]]]],[11,"build","","",273,[[],["paragraph",6]]],[11,"new","","",273,[[["paragraphstyle",6]]]],[11,"new","","",272,[[],["paragraphcache",6]]],[11,"abandon","","",272,[[]]],[11,"reset","","",272,[[]]],[11,"print_statistics","","",272,[[]]],[11,"turn_on","","",272,[[]]],[11,"count","","",272,[[]]],[11,"new","","",272,[[]]],[11,"font_families","","",272,[[],["fontfamilies",3]]],[11,"set_font_families","","",272,[[]]],[11,"font_style","","",272,[[],["fontstyle",3]]],[11,"set_font_style","","",272,[[["fontstyle",3]]]],[11,"font_size","","",272,[[],["scalar",6]]],[11,"set_font_size","","",272,[[["scalar",6]]]],[11,"set_height","","",272,[[["scalar",6]]]],[11,"height","","",272,[[],["scalar",6]]],[11,"set_leading","","",272,[[["scalar",6]]]],[11,"leading","","",272,[[],["scalar",6]]],[11,"strut_enabled","","",272,[[]]],[11,"set_strut_enabled","","",272,[[]]],[11,"force_strut_height","","",272,[[]]],[11,"set_force_strut_height","","",272,[[]]],[11,"new","","",273,[[]]],[11,"strut_style","","",273,[[],["strutstyle",6]]],[11,"set_strut_style","","",273,[[["strutstyle",6]]]],[11,"text_style","","",273,[[],["textstyle",6]]],[11,"set_text_style","","",273,[[["textstyle",6]]]],[11,"text_direction","","",273,[[],["textdirection",4]]],[11,"set_text_direction","","",273,[[["textdirection",4]]]],[11,"text_align","","",273,[[],["textalign",4]]],[11,"set_text_align","","",273,[[["textalign",4]]]],[11,"max_lines","","",273,[[],["option",4]]],[11,"set_max_lines","","",273,[[]]],[11,"ellipsis","","",273,[[]]],[11,"set_ellipsis","","",273,[[]]],[11,"height","","",273,[[],["scalar",6]]],[11,"set_height","","",273,[[["scalar",6]]]],[11,"text_height_behavior","","",273,[[],["textheightbehavior",4]]],[11,"set_text_height_behavior","","",273,[[["textheightbehavior",4]]]],[11,"unlimited_lines","","",273,[[]]],[11,"ellipsized","","",273,[[]]],[11,"effective_align","","",273,[[],["textalign",4]]],[11,"hinting_is_on","","",273,[[]]],[11,"turn_hinting_off","","",273,[[]]],[11,"draw_options","","",273,[[],["drawoptions",4]]],[11,"set_draw_options","","",273,[[["drawoptions",4]]]],[11,"new","skia_safe::textlayout","",177,[[]]],[11,"has_shadow","","",177,[[]]],[18,"NO_DECORATION","","",269,null],[18,"UNDERLINE","","",269,null],[18,"OVERLINE","","",269,null],[18,"LINE_THROUGH","","",269,null],[11,"empty","","Returns an empty set of flags",269,[[],["textdecoration",3]]],[11,"all","","Returns the set containing all flags.",269,[[],["textdecoration",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",269,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that â€¦",269,[[],[["option",4],["textdecoration",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any â€¦",269,[[],["textdecoration",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving allâ€¦",269,[[],["textdecoration",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",269,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",269,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦",269,[[["textdecoration",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained â€¦",269,[[["textdecoration",3]]]],[11,"insert","","Inserts the specified flags in-place.",269,[[["textdecoration",3]]]],[11,"remove","","Removes the specified flags in-place.",269,[[["textdecoration",3]]]],[11,"toggle","","Toggles the specified flags in-place.",269,[[["textdecoration",3]]]],[11,"set","","Inserts or removes the specified flags depending on the â€¦",269,[[["textdecoration",3]]]],[18,"ALL","","",269,null],[11,"name","skia_safe","",272,[[]]],[11,"value","","",272,[[]]],[11,"new","skia_safe::textlayout","",179,[[["placeholderalignment",4],["scalar",6],["textbaseline",4]]]],[11,"new","skia_safe","",272,[[]]],[11,"to_placeholder","","",272,[[]]],[11,"equals","","",272,[[["textstyle",6]]]],[11,"equals_by_fonts","","",272,[[["textstyle",6]]]],[11,"match_one_attribute","","",272,[[["styletype",4],["textstyle",6]]]],[11,"color","","",272,[[],["color",3]]],[11,"set_color","","",272,[[]]],[11,"foreground","","",272,[[],[["option",4],["paint",6]]]],[11,"set_foreground_color","","",272,[[]]],[11,"background","","",272,[[],[["option",4],["paint",6]]]],[11,"set_background_color","","",272,[[]]],[11,"decoration","","",272,[[],["decoration",3]]],[11,"decoration_mut","","",272,[[],["decoration",3]]],[11,"font_style","","",272,[[],["fontstyle",3]]],[11,"set_font_style","","",272,[[["fontstyle",3]]]],[11,"shadows","","",272,[[]]],[11,"add_shadow","","",272,[[["textshadow",3]]]],[11,"reset_shadows","","",272,[[]]],[11,"font_features","","",272,[[]]],[11,"add_font_feature","","",272,[[]]],[11,"reset_font_features","","",272,[[]]],[11,"font_size","","",272,[[],["scalar",6]]],[11,"set_font_size","","",272,[[["scalar",6]]]],[11,"font_families","","",272,[[],["fontfamilies",3]]],[11,"set_font_families","","",272,[[]]],[11,"set_height","","",272,[[["scalar",6]]]],[11,"height","","",272,[[],["scalar",6]]],[11,"set_height_override","","",272,[[]]],[11,"height_override","","",272,[[]]],[11,"set_letter_spacing","","",272,[[["scalar",6]]]],[11,"letter_spacing","","",272,[[],["scalar",6]]],[11,"set_word_spacing","","",272,[[["scalar",6]]]],[11,"word_spacing","","",272,[[],["scalar",6]]],[11,"typeface","","",272,[[],[["option",4],["typeface",6]]]],[11,"set_typeface","","",272,[[]]],[11,"locale","","",272,[[]]],[11,"set_locale","","",272,[[]]],[11,"text_baseline","","",272,[[],["textbaseline",4]]],[11,"set_text_baseline","","",272,[[["textbaseline",4]]]],[11,"font_metrics","","",272,[[],["fontmetrics",3]]],[11,"is_placeholder","","",272,[[]]],[11,"set_placeholder","","",272,[[]]],[11,"new","skia_safe::textlayout","",180,[[["textstyle",6],["textrange",6]]]],[11,"add","","",180,[[["textrange",6]]]],[11,"new","","",181,[[["range",3],["textrange",6],["blockrange",6],["textstyle",6],["placeholderstyle",3]]]],[11,"new","skia_safe","",274,[[]]],[11,"family_name","","",274,[[]]],[11,"alias","","",274,[[]]],[11,"append_typeface","","",274,[[["typeface",6]]]],[11,"new","","",274,[[]]],[11,"register_typeface","","",274,[[["typeface",6],["option",4]]]],[11,"iter","skia_safe::textlayout","",270,[[]]],[11,"new","skia_safe::shaper::run_handler","",156,[[]]],[11,"new_primitive","skia_safe","",273,[[]]],[11,"new_shaper_driven_wrapper","","",273,[[],["option",4]]],[11,"new_shape_then_wrap","","",273,[[],["option",4]]],[11,"new_shape_dont_wrap_or_reorder","","",273,[[],["option",4]]],[11,"new","","",273,[[]]],[11,"new_core_text","","",273,[[],["option",4]]],[11,"current_font","","",273,[[],["font",6]]],[11,"new_font_mgr_run_iterator","","",273,[[["font",6]],[["fontruniterator",6],["borrows",3]]]],[11,"new_trivial_font_run_iterator","","",273,[[["font",6]],["fontruniterator",6]]],[11,"current_level","","",273,[[]]],[11,"new_bidi_run_iterator","","",273,[[],[["borrows",3],["option",4]]]],[11,"new_icu_bidi_run_iterator","","",273,[[],[["borrows",3],["option",4]]]],[11,"new_trivial_bidi_run_iterator","","",273,[[],["bidiruniterator",6]]],[11,"current_script","","",273,[[],["fourbytetag",3]]],[11,"new_script_run_iterator","","",273,[[["fourbytetag",3]],[["scriptruniterator",6],["borrows",3]]]],[11,"new_hb_icu_script_run_iterator","","",273,[[],[["scriptruniterator",6],["borrows",3]]]],[11,"new_trivial_script_run_iterator","","",273,[[],["scriptruniterator",6]]],[11,"current_language","","",273,[[],["cstr",3]]],[11,"new_std_language_run_iterator","","",273,[[],[["languageruniterator",6],["option",4]]]],[11,"new_trivial_language_run_iterator","","",273,[[],["languageruniterator",6]]],[11,"shape","","",273,[[["font",6],["scalar",6]]]],[11,"shape_with_iterators","","",273,[[["bidiruniterator",6],["languageruniterator",6],["scalar",6],["fontruniterator",6],["scriptruniterator",6]]]],[11,"shape_with_iterators_and_features","","",273,[[["bidiruniterator",6],["languageruniterator",6],["scalar",6],["fontruniterator",6],["scriptruniterator",6]]]],[11,"new","skia_safe::shaper","",271,[[],["textblobbuilderrunhandler",3]]],[11,"make_blob","","",271,[[],[["option",4],["textblob",6]]]],[11,"end_point","","",271,[[],["point",3]]],[11,"shape_text_blob","skia_safe","",273,[[["font",6],["scalar",6]],["option",4]]],[11,"add","","",272,[[["path",6],["pathop",4]]]],[11,"resolve","","",272,[[],[["option",4],["path",6]]]],[11,"op","","",272,[[["path",6],["pathop",4]],["option",4]]],[11,"simplify","","",272,[[],["option",4]]],[11,"tight_bounds","","",272,[[],[["option",4],["rect",3]]]],[11,"as_winding","","",272,[[],[["option",4],["path",6]]]],[11,"release","","Notify that the borrowed dependency is not referred to â€¦",275,[[]]],[11,"unwrap","","",276,[[]]],[18,"Last","skia_safe::private::gpu","",72,null],[11,"reset","skia_safe::utils","",79,[[]]],[11,"transform","","",79,[[["m44",3]]]],[11,"dot_with","","",79,[[],["scalar",6]]],[11,"reset","","",80,[[]]],[11,"update","","",80,[[]]],[11,"patch_to_matrix","","",80,[[["patch3d",3]],["matrix",3]]],[11,"new","skia_safe","",273,[[]]],[11,"save","","",273,[[]]],[11,"restore","","",273,[[]]],[11,"translate","","",273,[[]]],[11,"rotate_x","","",273,[[["scalar",6]]]],[11,"rotate_y","","",273,[[["scalar",6]]]],[11,"rotate_z","","",273,[[["scalar",6]]]],[11,"matrix","","",273,[[],["matrix",3]]],[11,"apply_to_canvas","","",273,[[["canvas",3]]]],[11,"dot_with_normal","","",273,[[],["scalar",6]]],[11,"new","","",272,[[]]],[11,"set_glyph","","",272,[[["glyphid",6]]]],[11,"set_metrics","","",272,[[["fontmetrics",3]]]],[11,"set_font_style","","",272,[[["fontstyle",3]]]],[11,"detach","","",272,[[],[["option",4],["typeface",6]]]],[11,"duration","","",272,[[],["option",4]]],[11,"set_mirror","","",272,[[]]],[11,"set_repeat_count","","",272,[[["scalar",6]]]],[11,"set_reset","","",272,[[]]],[11,"time_to_t","","",272,[[["duration",3]]]],[11,"new","","",272,[[]]],[11,"reset","","",272,[[]]],[11,"set_key_frame","","",272,[[["duration",3]]]],[11,"time_to_values","","",272,[[["duration",3]],["result",4]]],[11,"elem_count","","",272,[[]]],[11,"new_null","skia_safe::canvas","",213,[[],["ownedcanvas",3]]],[11,"from_svg","skia_safe","",272,[[],[["option",4],["path",6]]]],[11,"to_svg","","",272,[[],["string",3]]],[11,"draw_shadow","skia_safe::canvas","",213,[[["path",6],["scalar",6]]]],[11,"draw_str_align","","",213,[[["font",6],["paint",6],["align",4]]]],[11,"from_str","skia_safe","",272,[[["font",6]]]],[11,"from_str","skia_safe::path","",311,[[["font",6]]]]],"p":[[4,"Result"],[4,"BlendMode"],[4,"BlendModeCoeff"],[4,"BlurStyle"],[4,"ClipOp"],[4,"ColorChannel"],[4,"CoverageMode"],[4,"EncodedImageFormat"],[4,"FilterQuality"],[4,"FontHinting"],[4,"AlphaType"],[4,"YUVColorSpace"],[4,"Cap"],[4,"Join"],[4,"Style"],[4,"PathFillType"],[4,"PathDirection"],[4,"PathVerb"],[4,"FilterMode"],[4,"MipmapMode"],[4,"TileMode"],[4,"PathOp"],[4,"SelectionPolicy"],[4,"ZeroInitialized"],[3,"Options"],[4,"EncodedOrigin"],[3,"DriverBugWorkarounds"],[4,"BackendAPI"],[4,"MipMapped"],[4,"Renderable"],[4,"Protected"],[4,"SurfaceOrigin"],[4,"SemaphoresSubmitted"],[4,"Enable"],[4,"ShaderCacheStrategy"],[3,"ContextOptions"],[3,"ID3D12CommandQueue"],[3,"ID3D12Device"],[3,"ID3D12Resource"],[3,"IDXGIAdapter1"],[3,"BackendContext"],[3,"TextureResourceInfo"],[3,"FenceInfo"],[4,"Format"],[4,"Standard"],[3,"TextureInfo"],[3,"FramebufferInfo"],[4,"ChromaLocation"],[3,"Extent2D"],[4,"Filter"],[4,"Format"],[4,"ImageLayout"],[4,"ImageTiling"],[3,"Offset2D"],[3,"PhysicalDeviceFeatures"],[3,"PhysicalDeviceFeatures2"],[3,"Rect2D"],[4,"SamplerYcbcrModelConversion"],[4,"SamplerYcbcrRange"],[4,"SharingMode"],[3,"Alloc"],[3,"YcbcrConversionInfo"],[3,"ImageInfo"],[4,"GetProcOf"],[3,"DrawableInfo"],[3,"Version"],[3,"ResourceCacheLimits"],[3,"ResourceCacheUsage"],[8,"PointerWrapper"],[8,"ValueWrapper"],[8,"NativeTransmutableWrapper"],[8,"RefWrapper"],[4,"SLType"],[3,"Flags"],[3,"Canvas"],[4,"Result"],[3,"TimeToT"],[3,"ShadowFlags"],[4,"Align"],[3,"Patch3D"],[3,"Camera3D"],[4,"TypefaceGlyph"],[13,"Image"],[4,"PointMode"],[4,"SrcRectConstraint"],[4,"RectType"],[3,"Lattice"],[3,"TopLayerPixels"],[8,"SetMatrix"],[8,"DrawImageNine"],[8,"DrawImageLattice"],[3,"BlurShadowRec"],[4,"Edging"],[3,"Coordinate"],[3,"VariationPosition"],[3,"FontMetrics"],[3,"Axis"],[4,"Slant"],[4,"BitDepth"],[4,"CachingHint"],[4,"CompressionType"],[4,"MapDirection"],[4,"ApplyPerspectiveClip"],[4,"ScaleToFit"],[4,"Member"],[4,"AffineMember"],[8,"SetPrePostScale"],[8,"MapScalars"],[8,"Map2"],[4,"ArcSize"],[4,"AddPathMode"],[4,"Verb"],[3,"PointData"],[3,"DashInfo"],[4,"RegionOp"],[8,"Combine"],[8,"Intersects"],[4,"Type"],[4,"Corner"],[3,"FilterOptions"],[4,"MediumBehavior"],[3,"SamplingOptions"],[4,"GradientTypeInternal"],[4,"GradientType"],[3,"GradientInfo"],[4,"InitStyle"],[4,"Style"],[4,"ContentChangeMode"],[4,"BackendHandleAccess"],[4,"BackendSurfaceAccess"],[4,"SerializeBehavior"],[3,"LocalizedString"],[4,"VertexMode"],[4,"AttributeUsage"],[4,"AttributeType"],[3,"Attribute"],[4,"PlaneConfig"],[4,"Siting"],[4,"Subsampling"],[4,"DataType"],[4,"DocumentStructureType"],[3,"Metadata"],[4,"Style"],[3,"ArithmeticFPInputs"],[4,"ShadowMode"],[4,"GradientShaderColors"],[4,"InvertStyle"],[3,"HighContrastConfig"],[4,"Dither"],[4,"BitFlags"],[3,"LayerInfo"],[4,"Type"],[4,"Mode"],[3,"Feature"],[8,"RunHandler"],[3,"RunInfo"],[3,"Buffer"],[8,"RunIterator"],[8,"AsRunHandler"],[8,"AsNativeRunHandler"],[4,"Affinity"],[4,"RectHeightStyle"],[4,"RectWidthStyle"],[4,"TextAlign"],[4,"TextDirection"],[3,"PositionWithAffinity"],[4,"TextBaseline"],[4,"TextHeightBehavior"],[4,"DrawOptions"],[4,"TextDecorationStyle"],[4,"TextDecorationMode"],[4,"StyleType"],[4,"PlaceholderAlignment"],[3,"TextBox"],[8,"RangeExtensions"],[3,"StyleMetrics"],[3,"LineMetrics"],[3,"TextShadow"],[3,"Decoration"],[3,"PlaceholderStyle"],[3,"Block"],[3,"Placeholder"],[8,"ConditionallySend"],[3,"RGB"],[3,"HSV"],[3,"Color4f"],[3,"ColorSpaceTransferFn"],[3,"XYZD50Hash"],[8,"Flattenable"],[8,"NativeFlattenable"],[4,"TextEncoding"],[4,"ColorType"],[3,"V2"],[3,"V3"],[3,"V4"],[3,"IVector"],[3,"Point"],[3,"Point3"],[3,"IRect"],[3,"Rect"],[8,"RoundOut"],[3,"RSXform"],[8,"Scalar"],[8,"Scalars"],[3,"ISize"],[3,"Size"],[4,"PixelGeometry"],[3,"TextBlobRun"],[3,"DateTime"],[8,"Contains"],[8,"QuickReject"],[3,"SaveLayerFlags"],[3,"SaveLayerRec"],[3,"Canvas"],[3,"OwnedCanvas"],[3,"AutoRestoredCanvas"],[4,"AutoCanvasRestore"],[3,"Color"],[3,"ColorChannelFlag"],[3,"Flags"],[3,"ColorSpacePrimaries"],[3,"MatrixFlags"],[3,"CubicMap"],[3,"Iter"],[3,"Open"],[3,"OnPage"],[3,"Document"],[3,"FontArguments"],[3,"Flags"],[3,"Weight"],[3,"Width"],[3,"FontStyle"],[3,"CropEdge"],[3,"CropRect"],[3,"M44"],[3,"TypeMask"],[3,"Matrix"],[3,"Vector4"],[3,"TypeMask"],[3,"Matrix44"],[3,"Iter"],[3,"RawIter"],[3,"PointFlags"],[3,"MatrixFlags"],[3,"SegmentMask"],[3,"Iterator"],[3,"Cliperator"],[3,"Spanerator"],[3,"RRect"],[3,"CubicResampler"],[3,"SurfacePropsFlags"],[3,"SurfaceProps"],[3,"FourByteTag"],[3,"Budgeted"],[3,"Bone"],[3,"BuilderFlags"],[3,"StructureElementNode"],[3,"Flags"],[3,"CropRect"],[3,"Bits"],[3,"Flags"],[3,"cp"],[3,"BackendState"],[3,"FlushInfo"],[3,"ExtensionFlags"],[3,"FeatureFlags"],[3,"BackendContext"],[3,"AllocFlag"],[3,"NullHandle"],[3,"TextDecoration"],[3,"FontFamilies"],[3,"TextBlobBuilderRunHandler"],[3,"Handle"],[3,"RefHandle"],[3,"RCHandle"],[3,"Borrows"],[3,"Sendable"],[6,"Region"],[6,"scalar"],[6,"TextBoxes"],[6,"Buffer"],[6,"CommandBuffer"],[6,"Device"],[6,"DeviceMemory"],[6,"Instance"],[6,"PhysicalDevice"],[6,"Image"],[6,"Queue"],[6,"RenderPass"],[6,"TypefaceFontProvider"],[6,"PathBuilder"],[6,"ParagraphStyle"],[6,"Bitmap"],[6,"Font"],[6,"YUVAInfo"],[6,"SupportedDataTypes"],[6,"AttributeList"],[6,"Builder"],[6,"BackendSurfaceMutableState"],[6,"View3D"],[6,"DataTable"],[6,"ColorSpace"],[6,"YUVAPixmapInfo"],[6,"YUVAPixmaps"],[6,"Uniform"],[6,"Varying"],[6,"RuntimeEffect"],[6,"BackendTexture"],[6,"BackendRenderTarget"],[6,"YUVABackendTextureInfo"],[6,"YUVABackendTextures"],[6,"Path"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);