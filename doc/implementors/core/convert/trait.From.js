(function() {var implementors = {};
implementors["skia_safe"] = [{"text":"impl From&lt;u32&gt; for Color","synthetic":false,"types":[]},{"text":"impl From&lt;RGB&gt; for Color","synthetic":false,"types":[]},{"text":"impl From&lt;(u8, u8, u8)&gt; for RGB","synthetic":false,"types":[]},{"text":"impl From&lt;(f32, f32, f32)&gt; for HSV","synthetic":false,"types":[]},{"text":"impl From&lt;Color&gt; for Color4f","synthetic":false,"types":[]},{"text":"impl From&lt;u32&gt; for Color4f","synthetic":false,"types":[]},{"text":"impl From&lt;RGB&gt; for Color4f","synthetic":false,"types":[]},{"text":"impl From&lt;i32&gt; for Weight","synthetic":false,"types":[]},{"text":"impl From&lt;i32&gt; for Width","synthetic":false,"types":[]},{"text":"impl&lt;'_&gt; From&lt;&amp;'_ Matrix&gt; for M44","synthetic":false,"types":[]},{"text":"impl From&lt;Matrix&gt; for M44","synthetic":false,"types":[]},{"text":"impl&lt;'_&gt; From&lt;&amp;'_ Matrix44&gt; for M44","synthetic":false,"types":[]},{"text":"impl From&lt;(f32, f32, f32, f32)&gt; for Vector4","synthetic":false,"types":[]},{"text":"impl From&lt;(f32, f32, f32)&gt; for Vector4","synthetic":false,"types":[]},{"text":"impl From&lt;[f32; 4]&gt; for Vector4","synthetic":false,"types":[]},{"text":"impl From&lt;[f32; 3]&gt; for Vector4","synthetic":false,"types":[]},{"text":"impl From&lt;(i32, i32)&gt; for IPoint","synthetic":false,"types":[]},{"text":"impl From&lt;(f32, f32)&gt; for Point","synthetic":false,"types":[]},{"text":"impl From&lt;IPoint&gt; for Point","synthetic":false,"types":[]},{"text":"impl From&lt;(i32, i32)&gt; for Point","synthetic":false,"types":[]},{"text":"impl From&lt;(f32, f32, f32)&gt; for Point3","synthetic":false,"types":[]},{"text":"impl From&lt;(IPoint, ISize)&gt; for IRect","synthetic":false,"types":[]},{"text":"impl From&lt;(Point, Size)&gt; for Rect","synthetic":false,"types":[]},{"text":"impl From&lt;ISize&gt; for Rect","synthetic":false,"types":[]},{"text":"impl From&lt;IRect&gt; for Rect","synthetic":false,"types":[]},{"text":"impl From&lt;(i32, i32)&gt; for ISize","synthetic":false,"types":[]},{"text":"impl From&lt;(f32, f32)&gt; for Size","synthetic":false,"types":[]},{"text":"impl From&lt;ISize&gt; for Size","synthetic":false,"types":[]},{"text":"impl From&lt;(i32, i32)&gt; for Size","synthetic":false,"types":[]},{"text":"impl From&lt;(char, char, char, char)&gt; for FourByteTag","synthetic":false,"types":[]},{"text":"impl From&lt;u32&gt; for FourByteTag","synthetic":false,"types":[]},{"text":"impl From&lt;([f32; 4], bool)&gt; for ArithmeticFPInputs","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a [Color]&gt; for GradientShaderColors&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;(&amp;'a [Color4f], RCHandle&lt;SkColorSpace&gt;)&gt; for GradientShaderColors&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl From&lt;Bits&gt; for BitFlags","synthetic":false,"types":[]},{"text":"impl From&lt;FlushFlags&gt; for FlushInfo","synthetic":false,"types":[]},{"text":"impl From&lt;NullHandle&gt; for Buffer","synthetic":false,"types":[]},{"text":"impl From&lt;NullHandle&gt; for CommandBuffer","synthetic":false,"types":[]},{"text":"impl From&lt;NullHandle&gt; for Device","synthetic":false,"types":[]},{"text":"impl From&lt;NullHandle&gt; for DeviceMemory","synthetic":false,"types":[]},{"text":"impl From&lt;NullHandle&gt; for Instance","synthetic":false,"types":[]},{"text":"impl From&lt;NullHandle&gt; for PhysicalDevice","synthetic":false,"types":[]},{"text":"impl From&lt;NullHandle&gt; for Image","synthetic":false,"types":[]},{"text":"impl From&lt;NullHandle&gt; for Queue","synthetic":false,"types":[]},{"text":"impl From&lt;NullHandle&gt; for RenderPass","synthetic":false,"types":[]},{"text":"impl From&lt;u32&gt; for Version","synthetic":false,"types":[]},{"text":"impl From&lt;(usize, usize, usize)&gt; for Version","synthetic":false,"types":[]},{"text":"impl From&lt;Point3&gt; for V3","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;(&amp;'a Handle&lt;SkPath&gt;, &amp;'a Handle&lt;SkPaint&gt;)&gt; for TypefaceGlyph&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'_&gt; From&lt;(RCHandle&lt;SkImage&gt;, f32)&gt; for TypefaceGlyph&lt;'_&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'_, '_&gt; From&lt;(&amp;'_ RCHandle&lt;SkImage&gt;, f32)&gt; for TypefaceGlyph&lt;'_&gt;","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()